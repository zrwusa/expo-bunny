{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}import{arrayRemove,uuidV4}from\"../../utils\";import{HeapNode,MinHeap}from\"../heap\";export var AbstractVertex=function(){function AbstractVertex(id){_classCallCheck(this,AbstractVertex);this._id=id;}_createClass(AbstractVertex,[{key:\"id\",get:function get(){return this._id;},set:function set(v){this._id=v;}}]);return AbstractVertex;}();export var AbstractEdge=function(){function AbstractEdge(weight){_classCallCheck(this,AbstractEdge);if(weight===undefined)weight=AbstractEdge.DEFAULT_EDGE_WEIGHT;this._weight=weight;this._hashCode=uuidV4();}_createClass(AbstractEdge,[{key:\"weight\",get:function get(){return this._weight;},set:function set(v){this._weight=v;}},{key:\"hashCode\",get:function get(){return this._hashCode;},set:function set(v){this._hashCode=v;}}]);return AbstractEdge;}();AbstractEdge.DEFAULT_EDGE_WEIGHT=1;export var AbstractGraph=function(){function AbstractGraph(){_classCallCheck(this,AbstractGraph);this._vertices=new Map();}_createClass(AbstractGraph,[{key:\"getVertex\",value:function getVertex(vertexOrId){var vertexId=this.getVertexId(vertexOrId);return this._vertices.get(vertexId)||null;}},{key:\"getVertexId\",value:function getVertexId(vertexOrId){return vertexOrId instanceof AbstractVertex?vertexOrId.id:vertexOrId;}},{key:\"containsVertex\",value:function containsVertex(vertexOrId){return this._vertices.has(this.getVertexId(vertexOrId));}},{key:\"vertexSet\",value:function vertexSet(){return this._vertices;}},{key:\"addVertex\",value:function addVertex(newVertex){if(this.containsVertex(newVertex)){return false;}this._vertices.set(newVertex.id,newVertex);return true;}},{key:\"removeVertex\",value:function removeVertex(vertexOrId){var vertexId=this.getVertexId(vertexOrId);return this._vertices.delete(vertexId);}},{key:\"removeAllVertices\",value:function removeAllVertices(vertices){var removed=[];for(var _iterator=_createForOfIteratorHelperLoose(vertices),_step;!(_step=_iterator()).done;){var _v=_step.value;removed.push(this.removeVertex(_v));}return removed.length>0;}},{key:\"containsEdge\",value:function containsEdge(v1,v2){var edge=this.getEdge(v1,v2);return!!edge;}},{key:\"setEdgeWeight\",value:function setEdgeWeight(srcOrId,destOrId,weight){var edge=this.getEdge(srcOrId,destOrId);if(edge){edge.weight=weight;return true;}else{return false;}}},{key:\"getAllPathsBetween\",value:function getAllPathsBetween(v1,v2){var _this=this;var paths=[];var vertex1=this.getVertex(v1);var vertex2=this.getVertex(v2);if(!(vertex1&&vertex2)){return[];}var dfs=function dfs(cur,dest,visiting,path){visiting.set(cur,true);if(cur===dest){paths.push([vertex1].concat(_toConsumableArray(path)));}var neighbors=_this.getNeighbors(cur);var _loop=function _loop(neighbor){if(!visiting.get(neighbor)){path.push(neighbor);dfs(neighbor,dest,visiting,path);arrayRemove(path,function(vertex){return vertex===neighbor;});}};for(var _iterator2=_createForOfIteratorHelperLoose(neighbors),_step2;!(_step2=_iterator2()).done;){var neighbor=_step2.value;_loop(neighbor);}visiting.set(cur,false);};dfs(vertex1,vertex2,new Map(),[]);return paths;}},{key:\"getPathSumWeight\",value:function getPathSumWeight(path){var sum=0;for(var i=0;i<path.length;i++){var _this$getEdge;sum+=((_this$getEdge=this.getEdge(path[i],path[i+1]))==null?void 0:_this$getEdge.weight)||0;}return sum;}},{key:\"getMinCostBetween\",value:function getMinCostBetween(v1,v2,isWeight){if(isWeight===undefined)isWeight=false;if(isWeight){var allPaths=this.getAllPathsBetween(v1,v2);var min=Infinity;for(var _iterator3=_createForOfIteratorHelperLoose(allPaths),_step3;!(_step3=_iterator3()).done;){var path=_step3.value;min=Math.min(this.getPathSumWeight(path),min);}return min;}else{var vertex2=this.getVertex(v2);var vertex1=this.getVertex(v1);if(!(vertex1&&vertex2)){return null;}var visited=new Map();var queue=[vertex1];visited.set(vertex1,true);var cost=0;while(queue.length>0){for(var i=0;i<queue.length;i++){var cur=queue.shift();if(cur===vertex2){return cost;}var neighbors=this.getNeighbors(cur);for(var _iterator4=_createForOfIteratorHelperLoose(neighbors),_step4;!(_step4=_iterator4()).done;){var neighbor=_step4.value;if(!visited.has(neighbor)){visited.set(neighbor,true);queue.push(neighbor);}}}cost++;}return null;}}},{key:\"getMinPathBetween\",value:function getMinPathBetween(v1,v2,isWeight){var _this2=this;if(isWeight===undefined)isWeight=false;if(isWeight){var allPaths=this.getAllPathsBetween(v1,v2);var min=Infinity;var minIndex=-1;var index=0;for(var _iterator5=_createForOfIteratorHelperLoose(allPaths),_step5;!(_step5=_iterator5()).done;){var path=_step5.value;var pathSumWeight=this.getPathSumWeight(path);if(pathSumWeight<min){min=pathSumWeight;minIndex=index;}index++;}return allPaths[minIndex]||null;}else{var minPath=[];var vertex1=this.getVertex(v1);var vertex2=this.getVertex(v2);if(!(vertex1&&vertex2)){return[];}var dfs=function dfs(cur,dest,visiting,path){visiting.set(cur,true);if(cur===dest){minPath=[vertex1].concat(_toConsumableArray(path));return;}var neighbors=_this2.getNeighbors(cur);var _loop2=function _loop2(neighbor){if(!visiting.get(neighbor)){path.push(neighbor);dfs(neighbor,dest,visiting,path);arrayRemove(path,function(vertex){return vertex===neighbor;});}};for(var _iterator6=_createForOfIteratorHelperLoose(neighbors),_step6;!(_step6=_iterator6()).done;){var neighbor=_step6.value;_loop2(neighbor);}visiting.set(cur,false);};dfs(vertex1,vertex2,new Map(),[]);return minPath;}}},{key:\"dijkstraWithoutHeap\",value:function dijkstraWithoutHeap(src,dest,getMinDist,genPaths){if(getMinDist===undefined)getMinDist=false;if(genPaths===undefined)genPaths=false;if(dest===undefined)dest=null;var minDist=Infinity;var minDest=null;var minPath=[];var paths=[];var vertices=this._vertices;var distMap=new Map();var seen=new Set();var preMap=new Map();var srcVertex=this.getVertex(src);var destVertex=dest?this.getVertex(dest):null;if(!srcVertex){return null;}for(var _iterator7=_createForOfIteratorHelperLoose(vertices),_step7;!(_step7=_iterator7()).done;){var _ref=_step7.value;var _ref2=_slicedToArray(_ref,2);var id=_ref2[0];var _v2=_ref2[1];distMap.set(_v2,Infinity);}distMap.set(srcVertex,0);preMap.set(srcVertex,null);var getMinOfNoSeen=function getMinOfNoSeen(){var min=Infinity;var minV=null;for(var _iterator8=_createForOfIteratorHelperLoose(distMap),_step8;!(_step8=_iterator8()).done;){var _ref3=_step8.value;var _ref4=_slicedToArray(_ref3,2);var key=_ref4[0];var val=_ref4[1];if(!seen.has(key)){if(val<min){min=val;minV=key;}}}return minV;};var getPaths=function getPaths(minV){for(var _iterator9=_createForOfIteratorHelperLoose(vertices),_step9;!(_step9=_iterator9()).done;){var _ref5=_step9.value;var _ref6=_slicedToArray(_ref5,2);var _id=_ref6[0];var _v3=_ref6[1];var path=[_v3];var parent=preMap.get(_v3);while(parent){path.push(parent);parent=preMap.get(parent);}var reversed=path.reverse();if(_v3===minV)minPath=reversed;paths.push(reversed);}};for(var i=1;i<vertices.size;i++){var cur=getMinOfNoSeen();if(cur){seen.add(cur);if(destVertex&&destVertex===cur){if(getMinDist){minDist=distMap.get(destVertex)||Infinity;}if(genPaths){getPaths(destVertex);}return{distMap:distMap,preMap:preMap,seen:seen,paths:paths,minDist:minDist,minPath:minPath};}var neighbors=this.getNeighbors(cur);for(var _iterator10=_createForOfIteratorHelperLoose(neighbors),_step10;!(_step10=_iterator10()).done;){var neighbor=_step10.value;if(!seen.has(neighbor)){var _edge=this.getEdge(cur,neighbor);if(_edge){if(_edge.weight+distMap.get(cur)<distMap.get(neighbor)){distMap.set(neighbor,_edge.weight+distMap.get(cur));preMap.set(neighbor,cur);}}}}}}getMinDist&&distMap.forEach(function(d,v){if(v!==srcVertex){if(d<minDist){minDist=d;if(genPaths)minDest=v;}}});genPaths&&getPaths(minDest);return{distMap:distMap,preMap:preMap,seen:seen,paths:paths,minDist:minDist,minPath:minPath};}},{key:\"dijkstra\",value:function dijkstra(src,dest,getMinDist,genPaths){if(getMinDist===undefined)getMinDist=false;if(genPaths===undefined)genPaths=false;if(dest===undefined)dest=null;var minDist=Infinity;var minDest=null;var minPath=[];var paths=[];var vertices=this._vertices;var distMap=new Map();var seen=new Set();var preMap=new Map();var srcVertex=this.getVertex(src);var destVertex=dest?this.getVertex(dest):null;if(!srcVertex){return null;}for(var _iterator11=_createForOfIteratorHelperLoose(vertices),_step11;!(_step11=_iterator11()).done;){var _ref7=_step11.value;var _ref8=_slicedToArray(_ref7,2);var id=_ref8[0];var _v4=_ref8[1];distMap.set(_v4,Infinity);}var heap=new MinHeap();heap.insert(new HeapNode(0,srcVertex));distMap.set(srcVertex,0);preMap.set(srcVertex,null);var getPaths=function getPaths(minV){for(var _iterator12=_createForOfIteratorHelperLoose(vertices),_step12;!(_step12=_iterator12()).done;){var _ref9=_step12.value;var _ref10=_slicedToArray(_ref9,2);var _id2=_ref10[0];var _v5=_ref10[1];var path=[_v5];var parent=preMap.get(_v5);while(parent){path.push(parent);parent=preMap.get(parent);}var reversed=path.reverse();if(_v5===minV)minPath=reversed;paths.push(reversed);}};while(heap.size()>0){var curHeapNode=heap.poll();var dist=curHeapNode==null?void 0:curHeapNode.id;var cur=curHeapNode==null?void 0:curHeapNode.val;if(dist!==undefined&&typeof dist==='number'){if(cur){seen.add(cur);if(destVertex&&destVertex===cur){if(getMinDist){minDist=distMap.get(destVertex)||Infinity;}if(genPaths){getPaths(destVertex);}return{distMap:distMap,preMap:preMap,seen:seen,paths:paths,minDist:minDist,minPath:minPath};}var neighbors=this.getNeighbors(cur);for(var _iterator13=_createForOfIteratorHelperLoose(neighbors),_step13;!(_step13=_iterator13()).done;){var neighbor=_step13.value;if(!seen.has(neighbor)){var _this$getEdge2;var _weight=(_this$getEdge2=this.getEdge(cur,neighbor))==null?void 0:_this$getEdge2.weight;if(typeof _weight==='number'){var distSrcToNeighbor=distMap.get(neighbor);if(distSrcToNeighbor){if(dist+_weight<distSrcToNeighbor){heap.insert(new HeapNode(dist+_weight,neighbor));preMap.set(neighbor,cur);distMap.set(neighbor,dist+_weight);}}}}}}}}if(getMinDist){distMap.forEach(function(d,v){if(v!==srcVertex){if(d<minDist){minDist=d;if(genPaths)minDest=v;}}});}if(genPaths){getPaths(minDest);}return{distMap:distMap,preMap:preMap,seen:seen,paths:paths,minDist:minDist,minPath:minPath};}},{key:\"bellmanFord\",value:function bellmanFord(src,scanNegativeCycle,getMin,genPath){if(getMin===undefined)getMin=false;if(genPath===undefined)genPath=false;var srcVertex=this.getVertex(src);var paths=[];var distMap=new Map();var preMap=new Map();var min=Infinity;var minPath=[];var hasNegativeCycle=undefined;if(scanNegativeCycle)hasNegativeCycle=false;if(!srcVertex)return{hasNegativeCycle:hasNegativeCycle,distMap:distMap,preMap:preMap,paths:paths,min:min,minPath:minPath};var vertices=this._vertices;var numOfVertices=vertices.size;var edges=this.edgeSet();var numOfEdges=edges.length;this._vertices.forEach(function(vertex){distMap.set(vertex,Infinity);});distMap.set(srcVertex,0);for(var i=1;i<numOfVertices;++i){for(var j=0;j<numOfEdges;++j){var ends=this.getEndsOfEdge(edges[j]);if(ends){var _ends=_slicedToArray(ends,2),s=_ends[0],d=_ends[1];var _weight2=edges[j].weight;var sWeight=distMap.get(s);var dWeight=distMap.get(d);if(sWeight!==undefined&&dWeight!==undefined){if(distMap.get(s)!==Infinity&&sWeight+_weight2<dWeight){distMap.set(d,sWeight+_weight2);genPath&&preMap.set(d,s);}}}}}var minDest=null;if(getMin){distMap.forEach(function(d,v){if(v!==srcVertex){if(d<min){min=d;if(genPath)minDest=v;}}});}if(genPath){for(var _iterator14=_createForOfIteratorHelperLoose(vertices),_step14;!(_step14=_iterator14()).done;){var _ref11=_step14.value;var _ref12=_slicedToArray(_ref11,2);var id=_ref12[0];var _v6=_ref12[1];var path=[_v6];var parent=preMap.get(_v6);while(parent!==undefined){path.push(parent);parent=preMap.get(parent);}var reversed=path.reverse();if(_v6===minDest)minPath=reversed;paths.push(reversed);}}for(var _j=0;_j<numOfEdges;++_j){var _ends2=this.getEndsOfEdge(edges[_j]);if(_ends2){var _ends3=_slicedToArray(_ends2,1),_s=_ends3[0];var _weight3=edges[_j].weight;var _sWeight=distMap.get(_s);if(_sWeight){if(_sWeight!==Infinity&&_sWeight+_weight3<_sWeight)hasNegativeCycle=true;}}}return{hasNegativeCycle:hasNegativeCycle,distMap:distMap,preMap:preMap,paths:paths,min:min,minPath:minPath};}},{key:\"floyd\",value:function floyd(){var idAndVertices=_toConsumableArray(this._vertices);var n=idAndVertices.length;var costs=[];var predecessor=[];for(var i=0;i<n;i++){costs[i]=[];predecessor[i]=[];for(var j=0;j<n;j++){predecessor[i][j]=null;}}for(var _i=0;_i<n;_i++){for(var _j2=0;_j2<n;_j2++){var _this$getEdge3;costs[_i][_j2]=((_this$getEdge3=this.getEdge(idAndVertices[_i][1],idAndVertices[_j2][1]))==null?void 0:_this$getEdge3.weight)||Infinity;}}for(var k=0;k<n;k++){for(var _i2=0;_i2<n;_i2++){for(var _j3=0;_j3<n;_j3++){if(costs[_i2][_j3]>costs[_i2][k]+costs[k][_j3]){costs[_i2][_j3]=costs[_i2][k]+costs[k][_j3];predecessor[_i2][_j3]=idAndVertices[k][1];}}}}return{costs:costs,predecessor:predecessor};}},{key:\"tarjan\",value:function tarjan(needArticulationPoints,needBridges,needSCCs,needCycles){var _this3=this;var defaultConfig=false;if(needArticulationPoints===undefined)needArticulationPoints=defaultConfig;if(needBridges===undefined)needBridges=defaultConfig;if(needSCCs===undefined)needSCCs=defaultConfig;if(needCycles===undefined)needCycles=defaultConfig;var dfnMap=new Map();var lowMap=new Map();var vertices=this._vertices;vertices.forEach(function(v){dfnMap.set(v,-1);lowMap.set(v,Infinity);});var _vertices$values=vertices.values(),_vertices$values2=_slicedToArray(_vertices$values,1),root=_vertices$values2[0];var articulationPoints=[];var bridges=[];var dfn=0;var dfs=function dfs(cur,parent){dfn++;dfnMap.set(cur,dfn);lowMap.set(cur,dfn);var neighbors=_this3.getNeighbors(cur);var childCount=0;for(var _iterator15=_createForOfIteratorHelperLoose(neighbors),_step15;!(_step15=_iterator15()).done;){var neighbor=_step15.value;if(neighbor!==parent){if(dfnMap.get(neighbor)===-1){childCount++;dfs(neighbor,cur);}var childLow=lowMap.get(neighbor);var curLow=lowMap.get(cur);lowMap.set(cur,Math.min(curLow,childLow));if(needArticulationPoints){if(cur===root&&childCount>=2||cur!==root&&childLow>=dfnMap.get(cur)){articulationPoints.push(cur);}}if(needBridges){if(childLow>dfnMap.get(cur)){bridges.push(_this3.getEdge(cur,neighbor));}}}}};dfs(root,null);var SCCs=new Map();var getSCCs=function getSCCs(){var SCCs=new Map();lowMap.forEach(function(low,vertex){if(!SCCs.has(low)){SCCs.set(low,[vertex]);}else{var _SCCs$get;(_SCCs$get=SCCs.get(low))==null?void 0:_SCCs$get.push(vertex);}});return SCCs;};if(needSCCs){SCCs=getSCCs();}var cycles=new Map();if(needCycles){var _SCCs=new Map();if(_SCCs.size<1){_SCCs=getSCCs();}_SCCs.forEach(function(SCC,low){if(SCC.length>1){cycles.set(low,SCC);}});}return{dfnMap:dfnMap,lowMap:lowMap,bridges:bridges,articulationPoints:articulationPoints,SCCs:SCCs,cycles:cycles};}},{key:\"unionFind\",value:function unionFind(){}}]);return AbstractGraph;}();","map":null,"metadata":{},"sourceType":"module"}