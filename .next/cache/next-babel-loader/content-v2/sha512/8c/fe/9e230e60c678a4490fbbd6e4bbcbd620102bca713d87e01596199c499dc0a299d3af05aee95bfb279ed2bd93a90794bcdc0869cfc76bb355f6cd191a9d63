{"ast":null,"code":"var _s=$RefreshSig$();import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _this=this,_jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/components/RequestLoading/RequestLoading.tsx\";import React,{useEffect,useState}from'react';import{View}from\"../UI\";import{useDispatch,useSelector}from'react-redux';import{makeStyles}from\"./styles\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import{useBunnyKit}from\"../../hooks/bunny-kit\";var RequestLoading=function RequestLoading(){_s();var _useBunnyKit=useBunnyKit(),sizeLabor=_useBunnyKit.sizeLabor,themeLabor=_useBunnyKit.themeLabor;var _useSelector=useSelector(function(store){return store.sysState;}),requestStatuses=_useSelector.requestStatuses;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isShow=_useState2[0],setIsShow=_useState2[1];var styles=makeStyles(sizeLabor,themeLabor);var dispatch=useDispatch();useEffect(function(){var loadingRequests=requestStatuses.filter(function(item){return item.status==='LOADING';});setIsShow(loadingRequests.length>0);},[JSON.stringify(requestStatuses)]);return isShow?React.createElement(View,{style:styles.container,__self:_this,__source:{fileName:_jsxFileName,lineNumber:21,columnNumber:15}},React.createElement(ActivityIndicator,{size:\"large\",__self:_this,__source:{fileName:_jsxFileName,lineNumber:22,columnNumber:17}})):null;};_s(RequestLoading,\"iYNffX4Ru9WMMXp4zd12Q+Tt8kw=\",false,function(){return[useBunnyKit,useSelector,useDispatch];});_c=RequestLoading;export default RequestLoading;var _c;$RefreshReg$(_c,\"RequestLoading\");","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/components/RequestLoading/RequestLoading.tsx"],"names":["RequestLoading","sizeLabor","themeLabor","useBunnyKit","requestStatuses","useSelector","store","isShow","setIsShow","useState","styles","makeStyles","dispatch","useDispatch","useEffect","loadingRequests","item","JSON"],"mappings":"8MAAA,MAAA,CAAA,KAAA,EAAA,SAAA,CAAA,QAAA,KAAA,OAAA,CACA,OAAA,IAAA,aACA,OAAA,WAAA,CAAA,WAAA,KAAA,aAAA,CAEA,OAAA,UAAA,gB,+EAEA,OAAA,WAAA,6BAEA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,MACzB,GAAA,CAAA,YAAA,CAAgCG,WAAhC,EAAA,CAAOF,SAAP,CAAA,YAAA,CAAA,SAAA,CAAkBC,UAAlB,CAAA,YAAA,CAAA,UAAA,CACA,GAAA,CAAA,YAAA,CAA0BG,WAAW,CAAC,SAAA,KAAA,CAAA,CAAA,MAAsBC,CAAAA,KAAK,CAA3B,QAAA,CAAtC,CAAqC,CAArC,CAAOF,eAAP,CAAA,YAAA,CAAA,eAAA,CACA,GAAA,CAAA,SAAA,CAA4BK,QAAQ,CAApC,KAAoC,CAApC,CAAA,UAAA,CAAA,cAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAOF,MAAP,CAAA,UAAA,CAAA,CAAA,CAAA,CAAeC,SAAf,CAAA,UAAA,CAAA,CAAA,CAAA,CACA,GAAME,CAAAA,MAAM,CAAGC,UAAU,CAAA,SAAA,CAAzB,UAAyB,CAAzB,CACA,GAAMC,CAAAA,QAAQ,CAAGC,WAAjB,EAAA,CACAC,SAAS,CAAC,UAAM,CACZ,GAAMC,CAAAA,eAAe,CAAG,eAAe,CAAf,MAAA,CAAuB,SAAA,IAAA,CAAI,CAAA,MAAIC,CAAAA,IAAI,CAAJA,MAAAA,GAAJ,SAAA,CAAnD,CAAwB,CAAxB,CACAR,SAAS,CAACO,eAAe,CAAfA,MAAAA,CAAVP,CAAS,CAATA,CAFK,CAAA,CAGN,CAACS,IAAI,CAAJA,SAAAA,CAHJH,eAGIG,CAAD,CAHM,CAATH,CAIA,MACIP,CAAAA,MAAM,CACA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAEG,MAAM,CAAnB,SAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,iBAAA,CAAA,CAAmB,IAAI,CAAvB,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CADF,CADA,CADV,IAAA,CAVJ,CAAA,C,GAAMV,c,wDAC8BG,W,CACNE,W,CAGTQ,W,QALfb,c,CAkBN,cAAA,CAAA,cAAA,C","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {View} from '../UI';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {RootState} from '../../types';\nimport {makeStyles} from './styles';\nimport {ActivityIndicator} from 'react-native';\nimport {useBunnyKit} from '../../hooks/bunny-kit';\n\nconst RequestLoading = () => {\n    const {sizeLabor, themeLabor} = useBunnyKit();\n    const {requestStatuses} = useSelector((store: RootState) => store.sysState);\n    const [isShow, setIsShow] = useState(false);\n    const styles = makeStyles(sizeLabor, themeLabor);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        const loadingRequests = requestStatuses.filter(item => item.status === 'LOADING');\n        setIsShow(loadingRequests.length > 0);\n    }, [JSON.stringify(requestStatuses)]);\n    return (\n        isShow\n            ? <View style={styles.container}>\n                <ActivityIndicator size=\"large\"/>\n            </View>\n            : null\n    );\n};\nexport default RequestLoading;\n"]},"metadata":{},"sourceType":"module"}