{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";/**\n * @license MIT\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n *\n * @class\n */export var Queue=function(){function Queue(elements){_classCallCheck(this,Queue);this._elements=elements||[];this._offset=0;}_createClass(Queue,[{key:\"enqueue\",value:function enqueue(element){this._elements.push(element);return this;}},{key:\"dequeue\",value:function dequeue(){if(this.size()===0)return null;var first=this.front();this._offset+=1;if(this._offset*2<this._elements.length)return first;this._elements=this._elements.slice(this._offset);this._offset=0;return first;}},{key:\"front\",value:function front(){return this.size()>0?this._elements[this._offset]:null;}},{key:\"back\",value:function back(){return this.size()>0?this._elements[this._elements.length-1]:null;}},{key:\"size\",value:function size(){return this._elements.length-this._offset;}},{key:\"isEmpty\",value:function isEmpty(){return this.size()===0;}},{key:\"toArray\",value:function toArray(){return this._elements.slice(this._offset);}},{key:\"clear\",value:function clear(){this._elements=[];this._offset=0;}},{key:\"clone\",value:function clone(){return new Queue(this._elements.slice(this._offset));}}],[{key:\"fromArray\",value:function fromArray(elements){return new Queue(elements);}}]);return Queue;}();","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/utils/data-structures/queue/queue.ts"],"names":["Queue","elements","first"],"mappings":"gIAAA;AACA;AACA;AACA;AACA;AACA,GACA,MAAA,IAAaA,CAAAA,KAAb,CAAA,UAAA,CAQI,QAAA,CAAA,KAAA,CAAA,QAAA,CAA4B,CAAA,eAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CACxB,KAAA,SAAA,CAAiBC,QAAQ,EAAzB,EAAA,CACA,KAAA,OAAA,CAAA,CAAA,CACH,CAXL,YAAA,CAAA,KAAA,CAAA,CAAA,CAAA,GAAA,CAAA,SAAA,CAAA,KAAA,CAkBI,QAAA,CAAA,OAAA,CAAA,OAAA,CAA8B,CAC1B,KAAA,SAAA,CAAA,IAAA,CAAA,OAAA,EACA,MAAA,KAAA,CACH,CArBL,CAAA,CAAA,CAAA,GAAA,CAAA,SAAA,CAAA,KAAA,CA4BI,QAAA,CAAA,OAAA,EAAoB,CAChB,GAAI,KAAA,IAAA,KAAJ,CAAA,CAAuB,MAAA,KAAA,CAEvB,GAAMC,CAAAA,KAAK,CAAG,KAAd,KAAc,EAAd,CACA,KAAA,OAAA,EAAA,CAAA,CAEA,GAAI,KAAA,OAAA,CAAA,CAAA,CAAmB,KAAA,SAAA,CAAvB,MAAA,CAA8C,MAAA,CAAA,KAAA,CAI9C,KAAA,SAAA,CAAiB,KAAA,SAAA,CAAA,KAAA,CAAqB,KAAtC,OAAiB,CAAjB,CACA,KAAA,OAAA,CAAA,CAAA,CACA,MAAA,CAAA,KAAA,CACH,CAzCL,CAAA,CAAA,CAAA,GAAA,CAAA,OAAA,CAAA,KAAA,CAgDI,QAAA,CAAA,KAAA,EAAkB,CACd,MAAO,MAAA,IAAA,GAAA,CAAA,CAAkB,KAAA,SAAA,CAAe,KAAjC,OAAkB,CAAlB,CAAP,IAAA,CACH,CAlDL,CAAA,CAAA,CAAA,GAAA,CAAA,MAAA,CAAA,KAAA,CAyDI,QAAA,CAAA,IAAA,EAAiB,CACb,MAAO,MAAA,IAAA,GAAA,CAAA,CAAkB,KAAA,SAAA,CAAe,KAAA,SAAA,CAAA,MAAA,CAAjC,CAAkB,CAAlB,CAAP,IAAA,CACH,CA3DL,CAAA,CAAA,CAAA,GAAA,CAAA,MAAA,CAAA,KAAA,CAkEI,QAAA,CAAA,IAAA,EAAe,CACX,MAAO,MAAA,SAAA,CAAA,MAAA,CAAwB,KAA/B,OAAA,CACH,CApEL,CAAA,CAAA,CAAA,GAAA,CAAA,SAAA,CAAA,KAAA,CA2EI,QAAA,CAAA,OAAA,EAAmB,CACf,MAAO,MAAA,IAAA,KAAP,CAAA,CACH,CA7EL,CAAA,CAAA,CAAA,GAAA,CAAA,SAAA,CAAA,KAAA,CAoFI,QAAA,CAAA,OAAA,EAAe,CACX,MAAO,MAAA,SAAA,CAAA,KAAA,CAAqB,KAA5B,OAAO,CAAP,CACH,CAtFL,CAAA,CAAA,CAAA,GAAA,CAAA,OAAA,CAAA,KAAA,CA4FI,QAAA,CAAA,KAAA,EAAc,CACV,KAAA,SAAA,CAAA,EAAA,CACA,KAAA,OAAA,CAAA,CAAA,CACH,CA/FL,CAAA,CAAA,CAAA,GAAA,CAAA,OAAA,CAAA,KAAA,CAsGI,QAAA,CAAA,KAAA,EAAkB,CACd,MAAO,IAAA,CAAA,KAAA,CAAU,KAAA,SAAA,CAAA,KAAA,CAAqB,KAAtC,OAAiB,CAAV,CAAP,CACH,CAxGL,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,WAAA,CAAA,KAAA,CAiHI,QAAA,CAAA,SAAA,CAAA,QAAA,CAA6C,CACzC,MAAO,IAAA,CAAA,KAAA,CAAP,QAAO,CAAP,CACH,CAnHL,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA","sourcesContent":["/**\n * @license MIT\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n *\n * @class\n */\nexport class Queue<T> {\n    protected _elements: T[];\n    protected _offset: number;\n\n    /**\n     * Creates a queue.\n     * @param {array} [elements]\n     */\n    constructor(elements?: T[]) {\n        this._elements = elements || [];\n        this._offset = 0;\n    }\n\n    /**\n     * Adds an element at the back of the queue.\n     * @public\n     * @param {any} element\n     */\n    enqueue(element: T): Queue<T> {\n        this._elements.push(element);\n        return this;\n    }\n\n    /**\n     * Dequeues the front element in the queue.\n     * @public\n     * @returns {any}\n     */\n    dequeue(): T | null {\n        if (this.size() === 0) return null;\n\n        const first = this.front();\n        this._offset += 1;\n\n        if (this._offset * 2 < this._elements.length) return first;\n\n        // only remove dequeued elements when reaching half size\n        // to decrease latency of shifting elements.\n        this._elements = this._elements.slice(this._offset);\n        this._offset = 0;\n        return first;\n    }\n\n    /**\n     * Returns the front element of the queue.\n     * @public\n     * @returns {any}\n     */\n    front(): T | null {\n        return this.size() > 0 ? this._elements[this._offset] : null;\n    }\n\n    /**\n     * Returns the back element of the queue.\n     * @public\n     * @returns {any}\n     */\n    back(): T | null {\n        return this.size() > 0 ? this._elements[this._elements.length - 1] : null;\n    }\n\n    /**\n     * Returns the number of elements in the queue.\n     * @public\n     * @returns {number}\n     */\n    size(): number {\n        return this._elements.length - this._offset;\n    }\n\n    /**\n     * Checks if the queue is empty.\n     * @public\n     * @returns {boolean}\n     */\n    isEmpty(): boolean {\n        return this.size() === 0;\n    }\n\n    /**\n     * Returns the remaining elements in the queue as an array.\n     * @public\n     * @returns {array}\n     */\n    toArray(): T[] {\n        return this._elements.slice(this._offset);\n    }\n\n    /**\n     * Clears the queue.\n     * @public\n     */\n    clear(): void {\n        this._elements = [];\n        this._offset = 0;\n    }\n\n    /**\n     * Creates a shallow copy of the queue.\n     * @public\n     * @return {Queue}\n     */\n    clone(): Queue<T> {\n        return new Queue(this._elements.slice(this._offset));\n    }\n\n    /**\n     * Creates a queue from an existing array.\n     * @public\n     * @static\n     * @param {array} elements\n     * @return {Queue}\n     */\n    static fromArray<T>(elements: T[]): Queue<T> {\n        return new Queue(elements);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}