{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{EDemoCryptoCurrency}from\"../../constants\";var initialState={currentPrice:0,granularity:0,expoPushToken:'',reminder:{times:0,interval:''},dictionaries:{granularity:[{label:'0.1%',value:0.001},{label:'1%',value:0.01},{label:'5%',value:0.05},{label:'10%',value:0.1},{label:'20%',value:0.2},{label:'30%',value:0.3}],times:[{label:'1',value:1},{label:'2',value:2},{label:'3',value:3},{label:'5',value:5},{label:'10',value:10},{label:'20',value:20}],interval:[{label:'1s',value:'1s'},{label:'10s',value:'10s'},{label:'1m',value:'1m'},{label:'5m',value:'5m'},{label:'10m',value:'10m'},{label:'30m',value:'30m'},{label:'1h',value:'1h'},{label:'2h',value:'2h'}]}};export var demoCryptoCurrencyReducer=function demoCryptoCurrencyReducer(){var prevState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var _ref=arguments.length>1?arguments[1]:undefined,type=_ref.type,payload=_ref.payload;switch(type){case EDemoCryptoCurrency.RECEIVE_CURRENT_PRICE:return _objectSpread(_objectSpread({},prevState),payload);default:return prevState;}};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/store/reducers/demo-crypto-currency.ts"],"names":["initialState","currentPrice","granularity","expoPushToken","reminder","times","interval","dictionaries","label","value","demoCryptoCurrencyReducer","prevState","type","payload","EDemoCryptoCurrency"],"mappings":"i2BACA,OAAA,mBAAA,uBAGA,GAAMA,CAAAA,YAAqC,CAAG,CAC1CC,YAAY,CAD8B,CAAA,CAE1CC,WAAW,CAF+B,CAAA,CAG1CC,aAAa,CAH6B,EAAA,CAI1CC,QAAQ,CAAE,CACNC,KAAK,CADC,CAAA,CAENC,QAAQ,CAAE,EAFJ,CAJgC,CAQ1CC,YAAY,CAAE,CACVL,WAAW,CAAE,CACT,CAACM,KAAK,CAAN,MAAA,CAAgBC,KAAK,CAAE,KAAvB,CADS,CAET,CAACD,KAAK,CAAN,IAAA,CAAcC,KAAK,CAAE,IAArB,CAFS,CAGT,CAACD,KAAK,CAAN,IAAA,CAAcC,KAAK,CAAE,IAArB,CAHS,CAIT,CAACD,KAAK,CAAN,KAAA,CAAeC,KAAK,CAAE,GAAtB,CAJS,CAKT,CAACD,KAAK,CAAN,KAAA,CAAeC,KAAK,CAAE,GAAtB,CALS,CAMT,CAACD,KAAK,CAAN,KAAA,CAAeC,KAAK,CAAE,GAAtB,CANS,CADH,CASVJ,KAAK,CAAE,CACH,CAACG,KAAK,CAAN,GAAA,CAAaC,KAAK,CAAE,CAApB,CADG,CAEH,CAACD,KAAK,CAAN,GAAA,CAAaC,KAAK,CAAE,CAApB,CAFG,CAGH,CAACD,KAAK,CAAN,GAAA,CAAaC,KAAK,CAAE,CAApB,CAHG,CAIH,CAACD,KAAK,CAAN,GAAA,CAAaC,KAAK,CAAE,CAApB,CAJG,CAKH,CAACD,KAAK,CAAN,IAAA,CAAcC,KAAK,CAAE,EAArB,CALG,CAMH,CAACD,KAAK,CAAN,IAAA,CAAcC,KAAK,CAAE,EAArB,CANG,CATG,CAiBVH,QAAQ,CAAE,CACN,CAACE,KAAK,CAAN,IAAA,CAAcC,KAAK,CAAE,IAArB,CADM,CAEN,CAACD,KAAK,CAAN,KAAA,CAAeC,KAAK,CAAE,KAAtB,CAFM,CAGN,CAACD,KAAK,CAAN,IAAA,CAAcC,KAAK,CAAE,IAArB,CAHM,CAIN,CAACD,KAAK,CAAN,IAAA,CAAcC,KAAK,CAAE,IAArB,CAJM,CAKN,CAACD,KAAK,CAAN,KAAA,CAAeC,KAAK,CAAE,KAAtB,CALM,CAMN,CAACD,KAAK,CAAN,KAAA,CAAeC,KAAK,CAAE,KAAtB,CANM,CAON,CAACD,KAAK,CAAN,IAAA,CAAcC,KAAK,CAAE,IAArB,CAPM,CAQN,CAACD,KAAK,CAAN,IAAA,CAAcC,KAAK,CAAE,IAArB,CARM,CAjBA,CAR4B,CAA9C,CAqCA,MAAO,IAAMC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,EAGX,CAAA,GAF1BC,CAAAA,SAE0B,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,EAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAFdX,YAEc,CAAA,GAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CADzBY,IACyB,CAAA,IAAA,CADzBA,IACyB,CADnBC,OACmB,CAAA,IAAA,CADnBA,OACmB,CAC1B,OAAA,IAAA,EACI,IAAKC,CAAAA,mBAAmB,CAAxB,qBAAA,CACI,MAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,OAAA,CAAA,CACJ,QACI,MAAA,CAAA,SAAA,CAJR,CAJG,CAAA","sourcesContent":["import {DemoCryptoCurrencyActions} from '../actions';\nimport {EDemoCryptoCurrency} from '../../constants';\nimport {DemoCryptoCurrencyState, ReceiveGetCurrentPricePayload} from '../../types';\n\nconst initialState: DemoCryptoCurrencyState = {\n    currentPrice: 0,\n    granularity: 0,\n    expoPushToken: '',\n    reminder: {\n        times: 0,\n        interval: ''\n    },\n    dictionaries: {\n        granularity: [\n            {label: '0.1%', value: 0.001},\n            {label: '1%', value: 0.01},\n            {label: '5%', value: 0.05},\n            {label: '10%', value: 0.1},\n            {label: '20%', value: 0.2},\n            {label: '30%', value: 0.3},\n        ],\n        times: [\n            {label: '1', value: 1},\n            {label: '2', value: 2},\n            {label: '3', value: 3},\n            {label: '5', value: 5},\n            {label: '10', value: 10},\n            {label: '20', value: 20},\n        ],\n        interval: [\n            {label: '1s', value: '1s'},\n            {label: '10s', value: '10s'},\n            {label: '1m', value: '1m'},\n            {label: '5m', value: '5m'},\n            {label: '10m', value: '10m'},\n            {label: '30m', value: '30m'},\n            {label: '1h', value: '1h'},\n            {label: '2h', value: '2h'},\n        ],\n    }\n};\nexport const demoCryptoCurrencyReducer = (\n    prevState = initialState,\n    {type, payload}: DemoCryptoCurrencyActions,\n): DemoCryptoCurrencyState => {\n    switch (type) {\n        case EDemoCryptoCurrency.RECEIVE_CURRENT_PRICE:\n            return {...prevState, ...<ReceiveGetCurrentPricePayload>payload};\n        default:\n            return prevState;\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}