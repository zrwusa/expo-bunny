{"ast":null,"code":"var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/screens/DemoFCReduxHook/DemoFCReduxHook.tsx\";import React from'react';import{useDispatch,useSelector}from'react-redux';import{demoHello}from\"../../store/actions\";import{Button,Text,View}from\"../../components/UI\";import{shortenTFunctionKey}from\"../../providers/i18n-labor\";import{makeContainerStyles}from\"../../containers\";import{getSharedStyles}from\"../../helpers\";import{useBunnyKit}from\"../../hooks/bunny-kit\";function DemoFCReduxHookScreen(){var _useBunnyKit=useBunnyKit(),sizeLabor=_useBunnyKit.sizeLabor,themeLabor=_useBunnyKit.themeLabor,t=_useBunnyKit.t;var st=shortenTFunctionKey(t,'screens.DemoFCReduxHook');var dispatch=useDispatch();var demoHelloState=useSelector(function(rootState){return rootState.demoHelloState;});var containerStyles=makeContainerStyles(sizeLabor,themeLabor);var _getSharedStyles=getSharedStyles(sizeLabor,themeLabor),sharedStyles=_getSharedStyles.sharedStyles;return React.createElement(View,{style:[containerStyles.Screen,sharedStyles.centralized],__self:this,__source:{fileName:_jsxFileName,lineNumber:20,columnNumber:9}},React.createElement(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:21,columnNumber:13}},st(\"order\"),demoHelloState.order),React.createElement(Button,{title:st(\"dispatchSomething\"),onPress:function onPress(){return dispatch(demoHello({order:demoHelloState.order+1}));},__self:this,__source:{fileName:_jsxFileName,lineNumber:22,columnNumber:13}}));}export default DemoFCReduxHookScreen;","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/screens/DemoFCReduxHook/DemoFCReduxHook.tsx"],"names":["sizeLabor","themeLabor","t","useBunnyKit","st","shortenTFunctionKey","dispatch","useDispatch","demoHelloState","useSelector","rootState","containerStyles","makeContainerStyles","sharedStyles","getSharedStyles","demoHello","order"],"mappings":"2GAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,WAAA,CAAA,WAAA,KAAA,aAAA,CACA,OAAA,SAAA,2BACA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,2BACA,OAAA,mBAAA,kCACA,OAAA,mBAAA,wBAEA,OAAA,eAAA,qBACA,OAAA,WAAA,6BAEA,QAAA,CAAA,qBAAA,EAAiC,CAC7B,GAAA,CAAA,YAAA,CAAmCG,WAAnC,EAAA,CAAOH,SAAP,CAAA,YAAA,CAAA,SAAA,CAAkBC,UAAlB,CAAA,YAAA,CAAA,UAAA,CAA8BC,CAA9B,CAAA,YAAA,CAAA,CAAA,CACA,GAAME,CAAAA,EAAE,CAAGC,mBAAmB,CAAA,CAAA,CAA9B,yBAA8B,CAA9B,CACA,GAAMC,CAAAA,QAAQ,CAAGC,WAAjB,EAAA,CACA,GAAMC,CAAAA,cAAc,CAAGC,WAAW,CAAC,SAAA,SAAA,CAAA,CAAA,MAA0BC,CAAAA,SAAS,CAAnC,cAAA,CAAnC,CAAkC,CAAlC,CACA,GAAMC,CAAAA,eAAe,CAAGC,mBAAmB,CAAA,SAAA,CAA3C,UAA2C,CAA3C,CACA,GAAA,CAAA,gBAAA,CAAuBE,eAAe,CAAA,SAAA,CAAtC,UAAsC,CAAtC,CAAOD,YAAP,CAAA,gBAAA,CAAA,YAAA,CAEA,MACI,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAE,CAACF,eAAe,CAAhB,MAAA,CAAyBE,YAAY,CAAlD,WAAa,CAAb,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CACI,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CAAOT,EAAE,CAAT,OAAS,CAAT,CAAoBI,cAAc,CADtC,KACI,CADJ,CAEI,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,CAAQ,KAAK,CAAEJ,EAAE,CAAjB,mBAAiB,CAAjB,CACQ,OAAO,CAAE,QAAA,CAAA,OAAA,EAAA,CAAA,MAAME,CAAAA,QAAQ,CAACS,SAAS,CAAC,CAACC,KAAK,CAAER,cAAc,CAAdA,KAAAA,CAAuB,CAA/B,CAAD,CAAV,CAAd,CADjB,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CAFJ,CADJ,CAQH,CAED,cAAA,CAAA,qBAAA","sourcesContent":["import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {demoHello} from '../../store/actions';\nimport {Button, Text, View} from '../../components/UI';\nimport {shortenTFunctionKey} from '../../providers/i18n-labor';\nimport {makeContainerStyles} from '../../containers';\nimport {RootState} from '../../types';\nimport {getSharedStyles} from '../../helpers';\nimport {useBunnyKit} from '../../hooks/bunny-kit';\n\nfunction DemoFCReduxHookScreen() {\n    const {sizeLabor, themeLabor, t} = useBunnyKit();\n    const st = shortenTFunctionKey(t, 'screens.DemoFCReduxHook');\n    const dispatch = useDispatch();\n    const demoHelloState = useSelector((rootState: RootState) => rootState.demoHelloState);\n    const containerStyles = makeContainerStyles(sizeLabor, themeLabor);\n    const {sharedStyles} = getSharedStyles(sizeLabor, themeLabor);\n\n    return (\n        <View style={[containerStyles.Screen, sharedStyles.centralized]}>\n            <Text>{st(`order`)}{demoHelloState.order}</Text>\n            <Button title={st(`dispatchSomething`)}\n                    onPress={() => dispatch(demoHello({order: demoHelloState.order + 1}))}/>\n            {/*<Text>This demo shows you to dispatch an action to redux reducer with hook method in Function Component(FC)</Text>*/}\n        </View>\n    );\n}\n\nexport default DemoFCReduxHookScreen;\n"]},"metadata":{},"sourceType":"module"}