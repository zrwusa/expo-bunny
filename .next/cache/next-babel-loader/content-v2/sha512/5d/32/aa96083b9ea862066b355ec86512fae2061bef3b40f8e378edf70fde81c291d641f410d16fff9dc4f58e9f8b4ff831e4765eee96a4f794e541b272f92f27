{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import ExponentAV from\"./ExponentAV\";import{exitFullscreen,requestFullscreen}from\"./FullscreenUtils.web\";export default{get name(){return'ExpoVideoManager';},get ScaleNone(){return'none';},get ScaleToFill(){return'fill';},get ScaleAspectFit(){return'contain';},get ScaleAspectFill(){return'cover';},setFullscreen:function setFullscreen(element,isFullScreenEnabled){return _regeneratorRuntime.async(function setFullscreen$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!isFullScreenEnabled){_context.next=5;break;}_context.next=3;return _regeneratorRuntime.awrap(requestFullscreen(element));case 3:_context.next=7;break;case 5:_context.next=7;return _regeneratorRuntime.awrap(exitFullscreen(element));case 7:return _context.abrupt(\"return\",ExponentAV.getStatusForVideo(element));case 8:case\"end\":return _context.stop();}}},null,null,null,Promise);}};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/packages/expo-av/src/ExpoVideoManager.web.ts"],"names":["setFullscreen","requestFullscreen","exitFullscreen","ExponentAV"],"mappings":"4DACA,MAAA,CAAA,UAAA,oBACA,OAAA,cAAA,CAAA,iBAAA,6BAEA,cAAe,CACX,GAAA,CAAA,IAAA,EAAmB,CACf,MAAA,kBAAA,CAFO,CAAA,CAIX,GAAA,CAAA,SAAA,EAAwB,CACpB,MAAA,MAAA,CALO,CAAA,CAOX,GAAA,CAAA,WAAA,EAA0B,CACtB,MAAA,MAAA,CARO,CAAA,CAUX,GAAA,CAAA,cAAA,EAA6B,CACzB,MAAA,SAAA,CAXO,CAAA,CAaX,GAAA,CAAA,eAAA,EAA8B,CAC1B,MAAA,OAAA,CAdO,CAAA,CAiBLA,aAjBK,CAAA,QAAA,CAAA,aAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,QAAA,CAAA,cAAA,CAAA,QAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,OAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,EAAA,IAAA,EAAA,CAAA,GAAA,CAAA,mBAAA,CAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,KAAA,CAsBGC,iBAAiB,CAtBpB,OAsBoB,CAtBpB,CAAA,CAAA,IAAA,EAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,IAAA,EAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,KAAA,CAwBGC,cAAc,CAxBjB,OAwBiB,CAxBjB,CAAA,CAAA,IAAA,EAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CA0BAC,UAAU,CAAVA,iBAAAA,CA1BA,OA0BAA,CA1BA,CAAA,CAAA,IAAA,EAAA,CAAA,IAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAf","sourcesContent":["import {AVPlaybackStatus} from './AV';\nimport ExponentAV from './ExponentAV';\nimport {exitFullscreen, requestFullscreen} from './FullscreenUtils.web';\n\nexport default {\n    get name(): string {\n        return 'ExpoVideoManager';\n    },\n    get ScaleNone(): string {\n        return 'none';\n    },\n    get ScaleToFill(): string {\n        return 'fill';\n    },\n    get ScaleAspectFit(): string {\n        return 'contain';\n    },\n    get ScaleAspectFill(): string {\n        return 'cover';\n    },\n\n    async setFullscreen(\n        element: HTMLMediaElement,\n        isFullScreenEnabled: boolean\n    ): Promise<AVPlaybackStatus> {\n        if (isFullScreenEnabled) {\n            await requestFullscreen(element);\n        } else {\n            await exitFullscreen(element);\n        }\n        return ExponentAV.getStatusForVideo(element);\n    },\n};\n"]},"metadata":{},"sourceType":"module"}