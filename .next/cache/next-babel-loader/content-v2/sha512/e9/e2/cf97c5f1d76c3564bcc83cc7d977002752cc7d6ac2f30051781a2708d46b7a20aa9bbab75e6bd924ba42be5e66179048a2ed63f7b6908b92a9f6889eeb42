{"ast":null,"code":"var _s=$RefreshSig$();import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useEffect,useState}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import View from\"react-native-web/dist/exports/View\";import{PanGestureHandler,State}from'react-native-gesture-handler';import{useBunnyKit}from\"../../../src/hooks/bunny-kit\";var osRtl=I18nManager.isRTL;var SMALL_SIZE=24;var MEDIUM_SIZE=34;var LARGE_SIZE=44;export var Slider=function Slider(props){_s();var _useBunnyKit=useBunnyKit(),colors=_useBunnyKit.colors;var min=props.min,max=props.max,valueOnChange=props.valueOnChange,_props$step=props.step,step=_props$step===void 0?1:_props$step,_props$styleSize=props.styleSize,styleSize=_props$styleSize===void 0?'medium':_props$styleSize,_props$knobColor=props.knobColor,knobColor=_props$knobColor===void 0?colors.primary:_props$knobColor,_props$inRangeBarColo=props.inRangeBarColor,inRangeBarColor=_props$inRangeBarColo===void 0?colors.primary:_props$inRangeBarColo,_props$outOfRangeBarC=props.outOfRangeBarColor,outOfRangeBarColor=_props$outOfRangeBarC===void 0?colors.divider:_props$outOfRangeBarC,_props$valueLabelsTex=props.valueLabelsTextColor,valueLabelsTextColor=_props$valueLabelsTex===void 0?colors.text2:_props$valueLabelsTex,_props$valueLabelsBac=props.valueLabelsBackgroundColor,valueLabelsBackgroundColor=_props$valueLabelsBac===void 0?'#3a4766':_props$valueLabelsBac,_props$rangeLabelsTex=props.rangeLabelsTextColor,rangeLabelsTextColor=_props$rangeLabelsTex===void 0?'rgb(60,60,60)':_props$rangeLabelsTex,_props$showRangeLabel=props.showRangeLabels,showRangeLabels=_props$showRangeLabel===void 0?true:_props$showRangeLabel,_props$showValueLabel=props.showValueLabels,showValueLabels=_props$showValueLabel===void 0?true:_props$showValueLabel,initialValue=props.initialValue,_props$valueLabelsPos=props.valueLabelsPosition,valueLabelsPosition=_props$valueLabelsPos===void 0?'down':_props$valueLabelsPos,_props$showBubbles=props.showBubbles,showBubbles=_props$showBubbles===void 0?false:_props$showBubbles,_props$showValueLabel2=props.showValueLabelsOnlyWhenDrag,showValueLabelsOnlyWhenDrag=_props$showValueLabel2===void 0?false:_props$showValueLabel2,_props$valueLabelsUni=props.valueLabelsUnit,valueLabelsUnit=_props$valueLabelsUni===void 0?'':_props$valueLabelsUni,_props$invert=props.invert,invert=_props$invert===void 0?false:_props$invert,valueOnIndicated=props.valueOnIndicated;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),stepInPixels=_useState2[0],setStepInPixels=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),knobSize=_useState4[0],setKnobSize=_useState4[1];var _useState5=useState(15),_useState6=_slicedToArray(_useState5,1),fontSize=_useState6[0];var _useState7=useState('row'),_useState8=_slicedToArray(_useState7,2),flexDirection=_useState8[0],setFlexDirection=_useState8[1];var _useState9=useState({left:(knobSize-40)/2}),_useState10=_slicedToArray(_useState9,2),svgOffset=_useState10[0],setSvgOffset=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),valueOffset=_useState12[0],setValueOffset=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),sliderWidth=_useState14[0],setSliderWidth=_useState14[1];var _useState15=useState(new Animated.Value(0)),_useState16=_slicedToArray(_useState15,1),translateX=_useState16[0];var _useState17=useState(new Animated.Value(showValueLabelsOnlyWhenDrag?0.01:1)),_useState18=_slicedToArray(_useState17,1),valueLabelScale=_useState18[0];var _useState19=useState(new Animated.Value(0.01)),_useState20=_slicedToArray(_useState19,1),inRangeScaleX=_useState20[0];var valueTextRef=React.createRef();var opacity=React.useRef(new Animated.Value(0)).current;useEffect(function(){setFlexDirection(osRtl?'row-reverse':'row');setSvgOffset(osRtl?{right:(knobSize-40)/2}:{left:(knobSize-40)/2});},[knobSize]);useEffect(function(){if(sliderWidth>0){var _valueTextRef$current;var stepSize=setStepSize(max,min,step);(_valueTextRef$current=valueTextRef.current)==null?void 0:_valueTextRef$current.setNativeProps({text:min.toString()+valueLabelsUnit});if(typeof initialValue==='number'&&initialValue>=min&&initialValue<=max){var offset=(initialValue-min)/step*stepSize-knobSize/2;setValueStatic(offset,knobSize,stepSize);setValueText(offset);}Animated.timing(opacity,{toValue:1,duration:64,useNativeDriver:true}).start();}},[min,max,step,initialValue,sliderWidth]);useEffect(function(){var size=typeof styleSize==='number'?styleSize:styleSize==='small'?SMALL_SIZE:styleSize==='medium'?MEDIUM_SIZE:LARGE_SIZE;setKnobSize(size);translateX.setValue(-size/4);},[styleSize]);var setValueStatic=function setValueStatic(newOffset,knobSize,stepInPixels){newOffset=Math.round((newOffset+knobSize/2)/stepInPixels)*stepInPixels-knobSize/2;settingValue(newOffset);setValueOffset(newOffset);valueOnChange(Math.round((newOffset+knobSize/2)*(max-min)/sliderWidth/step)*step+min);};var settingValue=function settingValue(newOffset){translateX.setValue(newOffset);inRangeScaleX.setValue((newOffset+knobSize/2)/sliderWidth+0.01);};var setValueText=function setValueText(totalOffset){var _valueTextRef$current2;var numericValue=Math.floor((totalOffset+knobSize/2)*(max-min)/sliderWidth/step)*step+min;(_valueTextRef$current2=valueTextRef.current)==null?void 0:_valueTextRef$current2.setNativeProps({text:numericValue.toString()+valueLabelsUnit});};var setStepSize=function setStepSize(max,min,step){var numberOfSteps=(max-min)/step;var stepSize=sliderWidth/numberOfSteps;setStepInPixels(stepSize);return stepSize;};var onGestureEvent=function onGestureEvent(event){var totalOffset=event.nativeEvent.translationX+valueOffset;if(totalOffset>=-knobSize/2&&totalOffset<=sliderWidth-knobSize/2){translateX.setValue(totalOffset);if(valueTextRef!=null){var _valueTextRef$current3;var _value=Math.round((totalOffset+knobSize/2)*(max-min)/sliderWidth/step)*step+min;(_valueTextRef$current3=valueTextRef.current)==null?void 0:_valueTextRef$current3.setNativeProps({text:_value.toString()+valueLabelsUnit});valueOnIndicated==null?void 0:valueOnIndicated(_value);}inRangeScaleX.setValue((totalOffset+knobSize/2)/sliderWidth+0.01);}};var onHandlerStateChange=function onHandlerStateChange(event){if(event.nativeEvent.state===State.BEGAN){if(showValueLabelsOnlyWhenDrag)scaleTo(valueLabelScale,1);}if(event.nativeEvent.state===State.END){var newOffset=event.nativeEvent.translationX+valueOffset;newOffset=Math.round((newOffset+knobSize/2)/stepInPixels)*stepInPixels-knobSize/2;if(newOffset<-knobSize/2){newOffset=-knobSize/2;}else if(newOffset>=sliderWidth-knobSize/2){newOffset=sliderWidth-knobSize/2;}setValueStatic(newOffset,knobSize,stepInPixels);if(showValueLabelsOnlyWhenDrag)scaleTo(valueLabelScale,0.01);}};var scaleTo=function scaleTo(param,toValue){return Animated.timing(param,{toValue:toValue,duration:150,useNativeDriver:true}).start();};var onLayout=function onLayout(event){setSliderWidth(event.nativeEvent.layout.width);};var bubbleSizeMap={'small':{width:20,height:28},'medium':{width:40,height:56},'large':{width:50,height:70}};var bubbleSize=typeof styleSize==='number'?{width:styleSize,height:styleSize}:bubbleSizeMap[styleSize];var bubbleBottomValue=typeof styleSize==='number'?styleSize:bubbleSizeMap[styleSize].height;var bubbleBottom=valueLabelsPosition==='up'?0:-bubbleBottomValue;var styles=getStyles(knobSize);var renderValueLabels=function renderValueLabels(){return showValueLabels&&React.createElement(View,{style:{width:'100%',height:1,flexDirection:flexDirection}},React.createElement(Animated.View,{style:{position:'absolute',bottom:0,left:0,transform:[{translateX:translateX},{scale:valueLabelScale}]}},showBubbles?React.createElement(View,{style:[svgOffset,_objectSpread(_objectSpread({},bubbleSize),{},{justifyContent:'center',alignItems:'center',position:'absolute',bottom:bubbleBottom,backgroundColor:'red'})]}):null,React.createElement(TextInput,{style:_objectSpread(_objectSpread({position:'absolute',width:40,textAlign:'center'},svgOffset),{},{color:valueLabelsTextColor,bottom:valueLabelsPosition==='up'?18:-18}),ref:valueTextRef})));};var paddingSizeMap={'small':21,'medium':14,'large':7};return React.createElement(Animated.View,{style:[styles.container,{opacity:opacity,paddingHorizontal:typeof styleSize==='number'?styleSize/2:paddingSizeMap[styleSize]}]},valueLabelsPosition==='up'?renderValueLabels():null,React.createElement(View,{style:{width:'100%',height:knobSize,marginVertical:4,position:'relative',flexDirection:flexDirection,alignItems:'center'}},React.createElement(View,{style:[styles.bar,{backgroundColor:invert?inRangeBarColor:outOfRangeBarColor}],onLayout:onLayout}),React.createElement(Animated.View,{style:{width:sliderWidth,height:knobSize/3,backgroundColor:invert?outOfRangeBarColor:inRangeBarColor,transform:[{translateX:-sliderWidth/2},{scaleX:inRangeScaleX},{translateX:sliderWidth/2}]}}),React.createElement(Animated.View,{style:[styles.outOfRangeBar,{backgroundColor:invert?outOfRangeBarColor:inRangeBarColor}]}),React.createElement(PanGestureHandler,{onGestureEvent:onGestureEvent,onHandlerStateChange:onHandlerStateChange},React.createElement(Animated.View,{style:[styles.knob1,{backgroundColor:knobColor,transform:[{translateX:translateX}]}]},React.createElement(Text,{style:styles.knobInnerDivider},\"| | |\")))),valueLabelsPosition==='down'?renderValueLabels():null,showRangeLabels&&React.createElement(View,{style:{width:'100%',flexDirection:flexDirection,justifyContent:'space-between'}},React.createElement(Text,{style:{color:rangeLabelsTextColor,fontWeight:'bold',fontSize:fontSize,marginLeft:-7}},min),React.createElement(Text,{style:{color:rangeLabelsTextColor,fontWeight:'bold',fontSize:fontSize}},max)));};_s(Slider,\"7YwZ1YZRwtOo4msDg+80BYtIAnI=\",false,function(){return[useBunnyKit];});_c=Slider;var getStyles=function getStyles(knobSize){return StyleSheet.create({container:{width:'100%'},knob:{position:'absolute',elevation:4},knob1:{height:knobSize,width:2*knobSize,left:-(0.5*knobSize),borderRadius:0.5*knobSize,position:'absolute',flexDirection:'row',justifyContent:'center',alignItems:'center',elevation:4},knobInnerDivider:{marginHorizontal:3*knobSize/40,fontSize:18*knobSize/40,lineHeight:18*knobSize/40,color:'white'},bar:{position:'absolute',borderBottomRightRadius:100,borderTopRightRadius:100,left:knobSize/4,marginLeft:-knobSize/4,right:knobSize/4,height:knobSize/3},outOfRangeBar:{position:'absolute',left:-knobSize/4,width:knobSize/2.5,height:knobSize/3,borderRadius:knobSize/3}});};var _c;$RefreshReg$(_c,\"Slider\");","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/packages/react-native-range-slider-expo/src/Slider.tsx"],"names":["osRtl","I18nManager","SMALL_SIZE","MEDIUM_SIZE","LARGE_SIZE","Slider","colors","useBunnyKit","min","max","valueOnChange","step","styleSize","knobColor","inRangeBarColor","outOfRangeBarColor","valueLabelsTextColor","valueLabelsBackgroundColor","rangeLabelsTextColor","showRangeLabels","showValueLabels","initialValue","valueLabelsPosition","showBubbles","showValueLabelsOnlyWhenDrag","valueLabelsUnit","invert","valueOnIndicated","props","stepInPixels","setStepInPixels","useState","knobSize","setKnobSize","fontSize","flexDirection","setFlexDirection","svgOffset","setSvgOffset","left","valueOffset","setValueOffset","sliderWidth","setSliderWidth","translateX","Animated","valueLabelScale","inRangeScaleX","valueTextRef","React","opacity","useEffect","right","stepSize","setStepSize","text","offset","setValueStatic","setValueText","toValue","duration","useNativeDriver","size","newOffset","Math","settingValue","numericValue","totalOffset","numberOfSteps","onGestureEvent","event","value","onHandlerStateChange","State","scaleTo","onLayout","bubbleSizeMap","width","height","bubbleSize","bubbleBottomValue","bubbleBottom","styles","getStyles","renderValueLabels","position","bottom","transform","scale","justifyContent","alignItems","backgroundColor","textAlign","color","paddingSizeMap","paddingHorizontal","marginVertical","scaleX","knobInnerDivider","fontWeight","marginLeft","container","knob","elevation","knob1","borderRadius","marginHorizontal","lineHeight","bar","borderBottomRightRadius","borderTopRightRadius","outOfRangeBar"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Animated, I18nManager, LayoutChangeEvent, StyleSheet, Text, TextInput, View} from 'react-native';\nimport {PanGestureHandler, PanGestureHandlerGestureEvent, State} from 'react-native-gesture-handler';\nimport {useBunnyKit} from '../../../src/hooks/bunny-kit';\n\nconst osRtl = I18nManager.isRTL;\n\nconst SMALL_SIZE = 24;\nconst MEDIUM_SIZE = 34;\nconst LARGE_SIZE = 44;\ntype Size = 'small' | 'medium' | 'large';\n\ninterface SliderProps {\n    min: number,\n    max: number,\n    valueOnChange: (value: number) => void,\n    step?: number,\n    styleSize?: 'small' | 'medium' | 'large' | number,\n    knobColor?: string,\n    inRangeBarColor?: string,\n    outOfRangeBarColor?: string,\n    valueLabelsTextColor?: string,\n    valueLabelsBackgroundColor?: string,\n    rangeLabelsTextColor?: string,\n    showRangeLabels?: boolean,\n    showValueLabels?: boolean,\n    initialValue?: number,\n    valueLabelsPosition?: 'up' | 'down',\n    showBubbles?: boolean,\n    showValueLabelsOnlyWhenDrag?: boolean,\n    valueLabelsUnit?: string,\n    invert?: boolean,\n    valueOnIndicated?: (value: number) => void,\n}\n\nexport const Slider = (props: SliderProps) => {\n    const {colors} = useBunnyKit();\n    const {\n        min, max, valueOnChange,\n        step = 1,\n        styleSize = 'medium',\n        knobColor = colors.primary,\n        inRangeBarColor = colors.primary,\n        outOfRangeBarColor = colors.divider,\n        valueLabelsTextColor = colors.text2,\n        valueLabelsBackgroundColor = '#3a4766',\n        rangeLabelsTextColor = 'rgb(60,60,60)',\n        showRangeLabels = true,\n        showValueLabels = true,\n        initialValue,\n        valueLabelsPosition = 'down',\n        showBubbles = false,\n        showValueLabelsOnlyWhenDrag = false,\n        valueLabelsUnit = '',\n        invert = false,\n        valueOnIndicated,\n    } = props;\n    // settings\n    const [stepInPixels, setStepInPixels] = useState(0);\n    const [knobSize, setKnobSize] = useState(0);\n    const [fontSize] = useState(15);\n\n    // rtl settings\n    const [flexDirection, setFlexDirection] = useState<'row' | 'row-reverse' | 'column' | 'column-reverse' | undefined>('row');\n    const [svgOffset, setSvgOffset] = useState<object>({left: (knobSize - 40) / 2});\n\n    const [valueOffset, setValueOffset] = useState(0);\n    const [sliderWidth, setSliderWidth] = useState(0);\n\n    // animation values\n    const [translateX] = useState(new Animated.Value(0));\n    const [valueLabelScale] = useState(new Animated.Value(showValueLabelsOnlyWhenDrag ? 0.01 : 1));\n    const [inRangeScaleX] = useState(new Animated.Value(0.01));\n\n    // refs\n    const valueTextRef = React.createRef<TextInput>();\n    const opacity = React.useRef<Animated.Value>(new Animated.Value(0)).current;\n\n    // initializing settings\n    useEffect(() => {\n        setFlexDirection(osRtl ? 'row-reverse' : 'row');\n        setSvgOffset(osRtl ? {right: (knobSize - 40) / 2} : {left: (knobSize - 40) / 2});\n    }, [knobSize]);\n    useEffect(() => {\n        if (sliderWidth > 0) {\n            const stepSize = setStepSize(max, min, step);\n            valueTextRef.current?.setNativeProps({text: min.toString() + valueLabelsUnit});\n            if (typeof initialValue === 'number' && initialValue >= min && initialValue <= max) {\n                const offset = ((initialValue - min) / step) * stepSize - (knobSize / 2);\n                setValueStatic(offset, knobSize, stepSize);\n                setValueText(offset);\n            }\n            Animated.timing(opacity, {\n                toValue: 1,\n                duration: 64,\n                useNativeDriver: true\n            }).start();\n        }\n    }, [min, max, step, initialValue, sliderWidth]);\n    useEffect(() => {\n        const size = typeof styleSize === 'number' ? styleSize : styleSize === 'small' ? SMALL_SIZE : styleSize === 'medium' ? MEDIUM_SIZE : LARGE_SIZE;\n        setKnobSize(size);\n        translateX.setValue(-size / 4);\n    }, [styleSize]);\n\n    const setValueStatic = (newOffset: number, knobSize: number, stepInPixels: number) => {\n        newOffset = Math.round((newOffset + (knobSize / 2)) / stepInPixels) * stepInPixels - (knobSize / 2);\n        settingValue(newOffset);\n        setValueOffset(newOffset);\n        valueOnChange(Math.round(((newOffset + (knobSize / 2)) * (max - min) / sliderWidth) / step) * step + min);\n    };\n    const settingValue = (newOffset: number) => {\n        translateX.setValue(newOffset);\n        inRangeScaleX.setValue((newOffset + (knobSize / 2)) / sliderWidth + 0.01);\n    };\n    const setValueText = (totalOffset: number) => {\n        const numericValue: number = Math.floor(((totalOffset + (knobSize / 2)) * (max - min) / sliderWidth) / step) * step + min;\n        valueTextRef.current?.setNativeProps({text: numericValue.toString() + valueLabelsUnit});\n    };\n    const setStepSize = (max: number, min: number, step: number) => {\n        const numberOfSteps = ((max - min) / step);\n        const stepSize = sliderWidth / numberOfSteps;\n        setStepInPixels(stepSize);\n        return stepSize;\n    };\n\n    // value gesture events ------------------------------------------------------------------------\n    const onGestureEvent = (event: PanGestureHandlerGestureEvent) => {\n        let totalOffset = event.nativeEvent.translationX + valueOffset;\n        if (totalOffset >= -knobSize / 2 && totalOffset <= sliderWidth - knobSize / 2) {\n            translateX.setValue(totalOffset);\n            if (valueTextRef != null) {\n                const value = (Math.round(((totalOffset + (knobSize / 2)) * (max - min) / sliderWidth) / step) * step + min);\n                valueTextRef.current?.setNativeProps({text: value.toString() + valueLabelsUnit});\n                valueOnIndicated?.(value);\n            }\n            inRangeScaleX.setValue((totalOffset + (knobSize / 2)) / sliderWidth + 0.01);\n        }\n    };\n    const onHandlerStateChange = (event: PanGestureHandlerGestureEvent) => {\n        if (event.nativeEvent.state === State.BEGAN) {\n            if (showValueLabelsOnlyWhenDrag) scaleTo(valueLabelScale, 1);\n        }\n        if (event.nativeEvent.state === State.END) {\n            let newOffset = event.nativeEvent.translationX + valueOffset;\n            newOffset = Math.round((newOffset + (knobSize / 2)) / stepInPixels) * stepInPixels - (knobSize / 2);\n            if (newOffset < -knobSize / 2) {\n                newOffset = -knobSize / 2;\n            } else if (newOffset >= sliderWidth - knobSize / 2) {\n                newOffset = sliderWidth - knobSize / 2;\n            }\n            setValueStatic(newOffset, knobSize, stepInPixels);\n            if (showValueLabelsOnlyWhenDrag) scaleTo(valueLabelScale, 0.01);\n        }\n    };\n    // ------------------------------------------------------------------------------------------------\n\n    // gesture events help functions ------------------------------------------------------------------\n    const scaleTo = (param: Animated.Value, toValue: number) => Animated.timing(param,\n        {\n            toValue,\n            duration: 150,\n            useNativeDriver: true\n        }\n    ).start();\n    // ------------------------------------------------------------------------------------------------\n\n    // setting bar width ------------------------------------------------------------------------------\n    const onLayout = (event: LayoutChangeEvent) => {\n        setSliderWidth(event.nativeEvent.layout.width);\n    };\n    // ------------------------------------------------------------------------------------------------\n    const bubbleSizeMap: { [key in Size]: { width: number, height: number } } = {\n        'small': {width: 20, height: 28},\n        'medium': {width: 40, height: 56},\n        'large': {width: 50, height: 70},\n    };\n    const bubbleSize = typeof styleSize === 'number' ? {width: styleSize, height: styleSize} : bubbleSizeMap[styleSize];\n    const bubbleBottomValue = typeof styleSize === 'number' ? styleSize : bubbleSizeMap[styleSize].height;\n    const bubbleBottom = valueLabelsPosition === 'up' ? 0 : -bubbleBottomValue;\n    const styles = getStyles(knobSize);\n\n    const renderValueLabels = () => {\n        return showValueLabels &&\n            <View style={{width: '100%', height: 1, flexDirection}}>\n                <Animated.View\n                    style={{\n                        position: 'absolute',\n                        bottom: 0,\n                        left: 0,\n                        transform: [{translateX}, {scale: valueLabelScale}]\n                    }}\n                >\n                    {\n                        showBubbles\n                            ?\n                            // <Svg width={40} height={56} style={{...svgOffset, justifyContent: 'center', alignItems: 'center'}}>\n                            //     <Path\n                            //         d=\"M20.368027196163986,55.24077513402203 C20.368027196163986,55.00364778429386 37.12897994729114,42.11537830086061 39.19501224411266,22.754628132990383 C41.26104454093417,3.393877965120147 24.647119286738516,0.571820003300814 20.368027196163986,0.7019902620266703 C16.088935105589453,0.8321519518460209 -0.40167016290734386,3.5393865664909434 0.7742997013327574,21.806127302984205 C1.950269565572857,40.07286803947746 20.368027196163986,55.4779024837502 20.368027196163986,55.24077513402203 z\"\n                            //         strokeWidth={1}\n                            //         fill={valueLabelsBackgroundColor}\n                            //         stroke={valueLabelsBackgroundColor}\n                            //     />\n                            // </Svg>\n                            <View style={[svgOffset, {\n                                ...bubbleSize,\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                position: 'absolute',\n                                bottom: bubbleBottom,\n                                backgroundColor: 'red'\n                            }]}/>\n                            : null\n                    }\n\n                    <TextInput style={{\n                        position: 'absolute',\n                        width: 40,\n                        textAlign: 'center', ...svgOffset,\n                        color: valueLabelsTextColor,\n                        bottom: valueLabelsPosition === 'up' ? 18 : -18,\n                    }} ref={valueTextRef}/>\n                </Animated.View>\n            </View>;\n    };\n    const paddingSizeMap: { [key in Size]: number } = {\n        'small': 21,\n        'medium': 14,\n        'large': 7\n    };\n    return (\n        <Animated.View style={[styles.container, {\n            opacity,\n            paddingHorizontal: typeof styleSize === 'number' ? styleSize / 2 : paddingSizeMap[styleSize]\n        }]}>\n            {\n                valueLabelsPosition === 'up'\n                    ? renderValueLabels()\n                    : null\n            }\n            <View style={{\n                width: '100%',\n                height: knobSize,\n                marginVertical: 4,\n                position: 'relative',\n                flexDirection,\n                alignItems: 'center'\n            }}>\n                <View style={[styles.bar, {\n                    backgroundColor: invert ? inRangeBarColor : outOfRangeBarColor,\n                }]} onLayout={onLayout}/>\n                <Animated.View style={{\n                    width: sliderWidth,\n                    height: knobSize / 3,\n                    backgroundColor: invert ? outOfRangeBarColor : inRangeBarColor,\n                    transform: [{translateX: -sliderWidth / 2}, {scaleX: inRangeScaleX}, {translateX: sliderWidth / 2}]\n                }}/>\n                <Animated.View style={[styles.outOfRangeBar, {\n                    backgroundColor: invert ? outOfRangeBarColor : inRangeBarColor\n                }]}/>\n                <PanGestureHandler {...{onGestureEvent, onHandlerStateChange}}>\n                    <Animated.View style={[styles.knob1, {\n                        // height: knobSize,\n                        // width: knobSize,\n                        // borderRadius: knobSize,\n                        backgroundColor: knobColor,\n                        transform: [{translateX}]\n                    }]}><Text style={styles.knobInnerDivider}>| | |</Text></Animated.View>\n                </PanGestureHandler>\n            </View>\n            {\n                valueLabelsPosition === 'down'\n                    ? renderValueLabels()\n                    : null\n            }\n            {\n                showRangeLabels &&\n                <View style={{width: '100%', flexDirection, justifyContent: 'space-between'}}>\n                    <Text\n                        style={{color: rangeLabelsTextColor, fontWeight: 'bold', fontSize, marginLeft: -7}}>{min}</Text>\n                    <Text style={{color: rangeLabelsTextColor, fontWeight: 'bold', fontSize}}>{max}</Text>\n                </View>\n            }\n        </Animated.View>\n    );\n};\nconst getStyles = (knobSize: number) => {\n    return StyleSheet.create({\n        container: {\n            // height: 100,\n            width: '100%'\n        },\n        knob: {\n            position: 'absolute',\n            elevation: 4\n        },\n        knob1: {\n            height: knobSize,\n            width: 2 * knobSize,\n            left: -(0.5 * knobSize),\n            borderRadius: 0.5 * knobSize,\n            position: 'absolute',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n            elevation: 4\n        },\n        knobInnerDivider: {\n            marginHorizontal: 3 * knobSize / 40,\n            fontSize: 18 * knobSize / 40,\n            lineHeight: 18 * knobSize / 40,\n            color: 'white'\n        },\n        bar: {\n            position: 'absolute',\n            borderBottomRightRadius: 100,\n            borderTopRightRadius: 100,\n            left: knobSize / 4,\n            marginLeft: -knobSize / 4,\n            right: knobSize / 4,\n            height: knobSize / 3\n        },\n        outOfRangeBar: {\n            position: 'absolute',\n            left: -knobSize / 4,\n            width: knobSize / 2.5,\n            height: knobSize / 3,\n            borderRadius: knobSize / 3,\n        }\n    });\n};\n\n"]},"metadata":{},"sourceType":"module"}