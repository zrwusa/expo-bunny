{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/packages/react-native-lightbox/LightBoxOverlay.tsx\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Modal from\"react-native-web/dist/exports/Modal\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import Platform from\"react-native-web/dist/exports/Platform\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";var DRAG_DISMISS_THRESHOLD=150;var STATUS_BAR_OFFSET=Platform.OS==='android'?-25:0;var isIOS=Platform.OS==='ios';var getCurrentWindowDimension=function getCurrentWindowDimension(){return Dimensions.get('window');};var getStyles=function getStyles(){return StyleSheet.create({background:{position:'absolute',top:0,left:0,width:getCurrentWindowDimension().width,height:getCurrentWindowDimension().height},open:{position:'absolute',flex:1,justifyContent:'center',backgroundColor:'transparent'},header:{position:'absolute',top:0,left:0,width:getCurrentWindowDimension().width,backgroundColor:'transparent'},closeButton:{fontSize:35,color:'white',lineHeight:40,width:40,textAlign:'center',shadowOffset:{width:0,height:0},shadowRadius:1.5,shadowColor:'black',shadowOpacity:0.8}});};export var LightBoxOverlay=function(_Component){_inherits(LightBoxOverlay,_Component);var _super=_createSuper(LightBoxOverlay);function LightBoxOverlay(props){var _this;_classCallCheck(this,LightBoxOverlay);_this=_super.call(this,props);_this.open=function(){if(isIOS){StatusBar.setHidden(true,'fade');}_this.state.pan.setValue(0);_this.setState({isAnimating:true,target:{x:0,y:0,opacity:1}});Animated.spring(_this.state.openVal,_objectSpread(_objectSpread({toValue:1},_this.props.springConfig),{},{useNativeDriver:false})).start(function(){_this.setState({isAnimating:false});_this.props.didOpen&&_this.props.didOpen();});};_this.close=function(){_this.props.willClose&&_this.props.willClose();if(isIOS){StatusBar.setHidden(false,'fade');}_this.setState({isAnimating:true});Animated.spring(_this.state.openVal,_objectSpread(_objectSpread({toValue:0},_this.props.springConfig),{},{useNativeDriver:false})).start(function(){_this.setState({isAnimating:false});_this.props.onClose&&_this.props.onClose();});};_this.state={isAnimating:false,isPanning:false,target:{x:0,y:0,opacity:1},pan:new Animated.Value(0),openVal:new Animated.Value(0)};_this._panResponder=PanResponder.create({onStartShouldSetPanResponder:function onStartShouldSetPanResponder(evt,gestureState){return!_this.state.isAnimating;},onStartShouldSetPanResponderCapture:function onStartShouldSetPanResponderCapture(evt,gestureState){return!_this.state.isAnimating;},onMoveShouldSetPanResponder:function onMoveShouldSetPanResponder(evt,gestureState){return!_this.state.isAnimating;},onMoveShouldSetPanResponderCapture:function onMoveShouldSetPanResponderCapture(evt,gestureState){return!_this.state.isAnimating;},onPanResponderGrant:function onPanResponderGrant(evt,gestureState){_this.state.pan.setValue(0);_this.setState({isPanning:true});},onPanResponderMove:Animated.event([null,{dy:_this.state.pan}],{useNativeDriver:false}),onPanResponderTerminationRequest:function onPanResponderTerminationRequest(evt,gestureState){return true;},onPanResponderRelease:function onPanResponderRelease(evt,gestureState){if(Math.abs(gestureState.dy)>DRAG_DISMISS_THRESHOLD){_this.setState({isPanning:false,target:{y:gestureState.dy,x:gestureState.dx,opacity:1-Math.abs(gestureState.dy/getCurrentWindowDimension().height)}});_this.close();}else{Animated.spring(_this.state.pan,_objectSpread(_objectSpread({toValue:0},_this.props.springConfig),{},{useNativeDriver:false})).start(function(){_this.setState({isPanning:false});});}}});return _this;}_createClass(LightBoxOverlay,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.isOpen){this.open();}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.isOpen!==prevProps.isOpen&&this.props.isOpen){this.open();}}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,isOpen=_this$props.isOpen,renderHeader=_this$props.renderHeader,swipeToDismiss=_this$props.swipeToDismiss,origin=_this$props.origin,backgroundColor=_this$props.backgroundColor;var _this$state=this.state,isPanning=_this$state.isPanning,isAnimating=_this$state.isAnimating,openVal=_this$state.openVal,target=_this$state.target;var lightBoxOpacityStyle={opacity:openVal.interpolate({inputRange:[0,1],outputRange:[0,target.opacity]})};var handlers;if(swipeToDismiss){handlers=this._panResponder.panHandlers;}var dragStyle;if(isPanning){dragStyle={top:this.state.pan};lightBoxOpacityStyle.opacity=this.state.pan.interpolate({inputRange:[-getCurrentWindowDimension().height,0,getCurrentWindowDimension().height],outputRange:[0,1,0]});}var styles=getStyles();var openStyle=[styles.open,{left:openVal.interpolate({inputRange:[0,1],outputRange:[origin.x,target.x]}),top:openVal.interpolate({inputRange:[0,1],outputRange:[origin.y+STATUS_BAR_OFFSET,target.y+STATUS_BAR_OFFSET]}),width:openVal.interpolate({inputRange:[0,1],outputRange:[origin.width,getCurrentWindowDimension().width]}),height:openVal.interpolate({inputRange:[0,1],outputRange:[origin.height,getCurrentWindowDimension().height]})}];var background=React.createElement(Animated.View,{style:[styles.background,{backgroundColor:backgroundColor},lightBoxOpacityStyle],__self:this,__source:{fileName:_jsxFileName,lineNumber:268,columnNumber:13}});var header=React.createElement(Animated.View,{style:[styles.header,lightBoxOpacityStyle],__self:this,__source:{fileName:_jsxFileName,lineNumber:269,columnNumber:25}},renderHeader?renderHeader(this.close):React.createElement(TouchableOpacity,{onPress:this.close,__self:this,__source:{fileName:_jsxFileName,lineNumber:272,columnNumber:21}},React.createElement(Text,{style:styles.closeButton,__self:this,__source:{fileName:_jsxFileName,lineNumber:273,columnNumber:25}},\"\\xD7\")));var content=React.createElement(Animated.View,_extends({style:[openStyle,dragStyle]},handlers,{__self:this,__source:{fileName:_jsxFileName,lineNumber:278,columnNumber:13}}),this.props.children);if(this.props.navigator){return React.createElement(View,{__self:this,__source:{fileName:_jsxFileName,lineNumber:285,columnNumber:17}},background,content,header);}return React.createElement(Modal,{visible:isOpen,transparent:true,onRequestClose:function onRequestClose(){return _this2.close();},__self:this,__source:{fileName:_jsxFileName,lineNumber:294,columnNumber:13}},background,content,header);}}]);return LightBoxOverlay;}(Component);LightBoxOverlay.defaultProps={springConfig:{tension:30,friction:7},backgroundColor:'black'};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/packages/react-native-lightbox/LightBoxOverlay.tsx"],"names":["DRAG_DISMISS_THRESHOLD","STATUS_BAR_OFFSET","Platform","isIOS","getCurrentWindowDimension","Dimensions","getStyles","background","position","top","left","width","height","open","flex","justifyContent","backgroundColor","header","closeButton","fontSize","color","lineHeight","textAlign","shadowOffset","shadowRadius","shadowColor","shadowOpacity","LightBoxOverlay","defaultProps","springConfig","tension","friction","isAnimating","isPanning","target","x","y","opacity","pan","Animated","openVal","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","dy","useNativeDriver","onPanResponderTerminationRequest","onPanResponderRelease","Math","gestureState","toValue","StatusBar","prevProps","isOpen","renderHeader","swipeToDismiss","origin","lightBoxOpacityStyle","inputRange","outputRange","handlers","dragStyle","styles","openStyle","content"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n    Animated,\n    Dimensions,\n    Modal,\n    PanResponder,\n    PanResponderInstance,\n    Platform,\n    StatusBar,\n    StyleSheet,\n    Text,\n    TouchableOpacity,\n    View\n} from 'react-native';\n\nconst DRAG_DISMISS_THRESHOLD = 150;\nconst STATUS_BAR_OFFSET = (Platform.OS === 'android' ? -25 : 0);\nconst isIOS = Platform.OS === 'ios';\n\nconst getCurrentWindowDimension = () => {\n    return Dimensions.get('window');\n};\n\nconst getStyles = () => {\n    return StyleSheet.create({\n        background: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: getCurrentWindowDimension().width,\n            height: getCurrentWindowDimension().height,\n        },\n        open: {\n            position: 'absolute',\n            flex: 1,\n            justifyContent: 'center',\n            // Android pan handlers crash without this declaration:\n            backgroundColor: 'transparent',\n        },\n        header: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: getCurrentWindowDimension().width,\n            backgroundColor: 'transparent',\n        },\n        closeButton: {\n            fontSize: 35,\n            color: 'white',\n            lineHeight: 40,\n            width: 40,\n            textAlign: 'center',\n            shadowOffset: {\n                width: 0,\n                height: 0,\n            },\n            shadowRadius: 1.5,\n            shadowColor: 'black',\n            shadowOpacity: 0.8,\n        },\n    });\n};\n\nexport interface LightBoxOverlayProps {\n    origin: {\n        x: number,\n        y: number,\n        width: number,\n        height: number,\n    },\n    springConfig?: {\n        tension: number,\n        friction: number,\n    },\n    backgroundColor?: string,\n    isOpen?: boolean,\n    renderHeader?: Function,\n    onOpen?: () => void,\n    onClose?: () => void,\n    willClose?: () => void,\n    swipeToDismiss?: boolean,\n    didOpen?: () => void,\n    navigator?: object\n}\n\ninterface LightBoxOverlayStates {\n    isAnimating: boolean,\n    isPanning: boolean,\n    target: {\n        x: number,\n        y: number,\n        opacity: number,\n    },\n    pan: Animated.Value,\n    openVal: Animated.Value,\n}\n\nexport class LightBoxOverlay extends Component<LightBoxOverlayProps, LightBoxOverlayStates> {\n\n    static defaultProps = {\n        springConfig: {tension: 30, friction: 7},\n        backgroundColor: 'black',\n    };\n\n    private _panResponder: PanResponderInstance;\n\n    constructor(props: LightBoxOverlayProps) {\n        super(props);\n        this.state = {\n            isAnimating: false,\n            isPanning: false,\n            target: {\n                x: 0,\n                y: 0,\n                opacity: 1,\n            },\n            pan: new Animated.Value(0),\n            openVal: new Animated.Value(0),\n        };\n        this._panResponder = PanResponder.create({\n            // Ask to be the responder:\n            onStartShouldSetPanResponder: (evt, gestureState) => !this.state.isAnimating,\n            onStartShouldSetPanResponderCapture: (evt, gestureState) => !this.state.isAnimating,\n            onMoveShouldSetPanResponder: (evt, gestureState) => !this.state.isAnimating,\n            onMoveShouldSetPanResponderCapture: (evt, gestureState) => !this.state.isAnimating,\n\n            onPanResponderGrant: (evt, gestureState) => {\n                this.state.pan.setValue(0);\n                this.setState({isPanning: true});\n            },\n            onPanResponderMove: Animated.event([\n                null,\n                {dy: this.state.pan}\n            ], {useNativeDriver: false}),\n            onPanResponderTerminationRequest: (evt, gestureState) => true,\n            onPanResponderRelease: (evt, gestureState) => {\n                if (Math.abs(gestureState.dy) > DRAG_DISMISS_THRESHOLD) {\n                    this.setState({\n                        isPanning: false,\n                        target: {\n                            y: gestureState.dy,\n                            x: gestureState.dx,\n                            opacity: 1 - Math.abs(gestureState.dy / getCurrentWindowDimension().height)\n                        }\n                    });\n                    this.close();\n                } else {\n                    Animated.spring(\n                        this.state.pan,\n                        {toValue: 0, ...this.props.springConfig, useNativeDriver: false}\n                    ).start(() => {\n                        this.setState({isPanning: false});\n                    });\n                }\n            },\n        });\n    }\n\n    componentDidMount() {\n        if (this.props.isOpen) {\n            this.open();\n        }\n    }\n\n    open = () => {\n        if (isIOS) {\n            StatusBar.setHidden(true, 'fade');\n        }\n        this.state.pan.setValue(0);\n        this.setState({\n            isAnimating: true,\n            target: {\n                x: 0,\n                y: 0,\n                opacity: 1,\n            }\n        });\n\n        Animated.spring(\n            this.state.openVal,\n            {toValue: 1, ...this.props.springConfig, useNativeDriver: false}\n        ).start(() => {\n            this.setState({isAnimating: false});\n            this.props.didOpen && this.props.didOpen();\n        });\n    };\n\n    close = () => {\n        this.props.willClose && this.props.willClose();\n        if (isIOS) {\n            StatusBar.setHidden(false, 'fade');\n        }\n        this.setState({\n            isAnimating: true,\n        },);\n        Animated.spring(\n            this.state.openVal,\n            {toValue: 0, ...this.props.springConfig, useNativeDriver: false}\n        ).start(() => {\n            this.setState({\n                isAnimating: false,\n            });\n            this.props.onClose && this.props.onClose();\n        });\n    };\n\n    componentDidUpdate(prevProps: LightBoxOverlayProps) {\n        if (this.props.isOpen !== prevProps.isOpen && this.props.isOpen) {\n            this.open();\n        }\n    }\n\n    render() {\n        const {\n            isOpen,\n            renderHeader,\n            swipeToDismiss,\n            origin,\n            backgroundColor,\n        } = this.props;\n\n        const {\n            isPanning,\n            isAnimating,\n            openVal,\n            target,\n        } = this.state;\n\n        const lightBoxOpacityStyle = {\n            opacity: openVal.interpolate({inputRange: [0, 1], outputRange: [0, target.opacity]})\n        };\n\n        let handlers;\n        if (swipeToDismiss) {\n            handlers = this._panResponder.panHandlers;\n        }\n\n        let dragStyle;\n        if (isPanning) {\n            dragStyle = {\n                top: this.state.pan,\n            };\n            lightBoxOpacityStyle.opacity = this.state.pan.interpolate({\n                inputRange: [-getCurrentWindowDimension().height, 0, getCurrentWindowDimension().height],\n                outputRange: [0, 1, 0]\n            });\n        }\n\n        const styles = getStyles();\n\n        const openStyle = [styles.open, {\n            left: openVal.interpolate({inputRange: [0, 1], outputRange: [origin.x, target.x]}),\n            top: openVal.interpolate({\n                inputRange: [0, 1],\n                outputRange: [origin.y + STATUS_BAR_OFFSET, target.y + STATUS_BAR_OFFSET]\n            }),\n            width: openVal.interpolate({\n                inputRange: [0, 1],\n                outputRange: [origin.width, getCurrentWindowDimension().width]\n            }),\n            height: openVal.interpolate({\n                inputRange: [0, 1],\n                outputRange: [origin.height, getCurrentWindowDimension().height]\n            }),\n        }];\n\n        const background = (\n            <Animated.View style={[styles.background, {backgroundColor: backgroundColor}, lightBoxOpacityStyle]}/>);\n        const header = (<Animated.View style={[styles.header, lightBoxOpacityStyle]}>{(renderHeader ?\n                renderHeader(this.close) :\n                (\n                    <TouchableOpacity onPress={this.close}>\n                        <Text style={styles.closeButton}>×</Text>\n                    </TouchableOpacity>\n                )\n        )}</Animated.View>);\n        const content = (\n            <Animated.View style={[openStyle, dragStyle]} {...handlers}>\n                {this.props.children}\n            </Animated.View>\n        );\n\n        if (this.props.navigator) {\n            return (\n                <View>\n                    {background}\n                    {content}\n                    {header}\n                </View>\n            );\n        }\n\n        return (\n            <Modal visible={isOpen} transparent={true} onRequestClose={() => this.close()}>\n                {background}\n                {content}\n                {header}\n            </Modal>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}