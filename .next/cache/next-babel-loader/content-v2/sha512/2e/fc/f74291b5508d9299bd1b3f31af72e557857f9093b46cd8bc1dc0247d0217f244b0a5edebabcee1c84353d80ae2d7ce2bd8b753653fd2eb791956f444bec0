{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/components/BunnyChat/Day.tsx\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React,{PureComponent}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import dayjs from'dayjs';import{isSameDay}from\"./utils\";import{DATE_FORMAT}from\"./Constant\";import{withBunnyKit}from\"../../hooks/bunny-kit\";var makeStyles=function makeStyles(sizeLabor,themeLabor){var wp=sizeLabor.designsBasedOn.iphoneX.wp;var colors=themeLabor.theme.colors;return StyleSheet.create({container:{alignItems:'center',justifyContent:'center',marginTop:wp(5),marginBottom:wp(10)},text:{backgroundColor:colors.transparent,color:colors.text3,fontSize:wp(12),fontWeight:'600'}});};var Day=function(_PureComponent){_inherits(Day,_PureComponent);var _super=_createSuper(Day);function Day(){_classCallCheck(this,Day);return _super.apply(this,arguments);}_createClass(Day,[{key:\"render\",value:function render(){var _this$props=this.props,dateFormat=_this$props.dateFormat,currentMessage=_this$props.currentMessage,previousMessage=_this$props.previousMessage,dayContainerStyle=_this$props.dayContainerStyle,dayWrapperStyle=_this$props.dayWrapperStyle,dayTextStyle=_this$props.dayTextStyle,dayTextProps=_this$props.dayTextProps,bunnyKit=_this$props.bunnyKit;var language=bunnyKit.language;if(currentMessage&&!isSameDay(currentMessage,previousMessage)){var createdAt=currentMessage.createdAt;var sizeLabor=bunnyKit.sizeLabor,themeLabor=bunnyKit.themeLabor;var styles=makeStyles(sizeLabor,themeLabor);return React.createElement(View,{style:[styles.container,dayContainerStyle],__self:this,__source:{fileName:_jsxFileName,lineNumber:73,columnNumber:17}},React.createElement(View,{style:dayWrapperStyle,__self:this,__source:{fileName:_jsxFileName,lineNumber:74,columnNumber:21}},React.createElement(Text,_extends({style:[styles.text,dayTextStyle]},dayTextProps,{__self:this,__source:{fileName:_jsxFileName,lineNumber:75,columnNumber:25}}),dayjs(createdAt).locale(language).format(dateFormat))));}return null;}}]);return Day;}(PureComponent);Day.defaultProps={currentMessage:undefined,previousMessage:undefined,nextMessage:undefined,dayContainerStyle:{},dayWrapperStyle:{},dayTextStyle:{},dayTextProps:{},dateFormat:DATE_FORMAT};export default withBunnyKit(Day);","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/components/BunnyChat/Day.tsx"],"names":["makeStyles","wp","sizeLabor","colors","themeLabor","container","alignItems","justifyContent","marginTop","marginBottom","text","backgroundColor","color","fontSize","fontWeight","Day","PureComponent","defaultProps","currentMessage","previousMessage","nextMessage","dayContainerStyle","dayWrapperStyle","dayTextStyle","dayTextProps","dateFormat","DATE_FORMAT","bunnyKit","language","isSameDay","createdAt","styles","dayjs","withBunnyKit"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\nimport {StyleProp, StyleSheet, Text, TextProps, TextStyle, View, ViewStyle,} from 'react-native';\nimport dayjs from 'dayjs';\n\nimport {isSameDay} from './utils';\nimport {DATE_FORMAT} from './Constant';\nimport {IMessage} from './types';\nimport {WithBunnyKit, withBunnyKit} from '../../hooks/bunny-kit';\nimport {SizeLabor, ThemeLabor} from '../../types';\n\nconst makeStyles = (sizeLabor: SizeLabor, themeLabor: ThemeLabor) => {\n    const {wp} = sizeLabor.designsBasedOn.iphoneX;\n    const {theme: {colors}} = themeLabor;\n    return StyleSheet.create({\n        container: {\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginTop: wp(5),\n            marginBottom: wp(10),\n        },\n        text: {\n            backgroundColor: colors.transparent,\n            color: colors.text3,\n            fontSize: wp(12),\n            fontWeight: '600',\n        },\n    });\n\n};\n\nexport interface DayProps<TMessage extends IMessage> {\n    currentMessage?: TMessage;\n    nextMessage?: TMessage;\n    previousMessage?: TMessage;\n    dayContainerStyle?: StyleProp<ViewStyle>;\n    dayWrapperStyle?: StyleProp<ViewStyle>;\n    dayTextStyle?: StyleProp<TextStyle>;\n    dayTextProps?: TextProps;\n    dateFormat?: string;\n}\n\nclass Day<TMessage extends IMessage> extends PureComponent<DayProps<TMessage> & WithBunnyKit> {\n\n    static defaultProps = {\n        currentMessage: undefined,\n        previousMessage: undefined,\n        nextMessage: undefined,\n        dayContainerStyle: {},\n        dayWrapperStyle: {},\n        dayTextStyle: {},\n        dayTextProps: {},\n        dateFormat: DATE_FORMAT,\n    };\n\n\n    render() {\n        const {\n            dateFormat,\n            currentMessage,\n            previousMessage,\n            dayContainerStyle,\n            dayWrapperStyle,\n            dayTextStyle,\n            dayTextProps,\n            bunnyKit,\n        } = this.props;\n        const {language} = bunnyKit;\n        if (currentMessage && !isSameDay(currentMessage, previousMessage!)) {\n            const {createdAt} = currentMessage;\n            const {sizeLabor, themeLabor} = bunnyKit;\n            const styles = makeStyles(sizeLabor, themeLabor);\n            return (\n                <View style={[styles.container, dayContainerStyle]}>\n                    <View style={dayWrapperStyle}>\n                        <Text style={[styles.text, dayTextStyle]} {...dayTextProps}>\n                            {dayjs(createdAt)\n                                .locale(language)\n                                .format(dateFormat)}\n                        </Text>\n                    </View>\n                </View>\n            );\n        }\n        return null;\n    }\n}\n\nexport default withBunnyKit(Day);\n"]},"metadata":{},"sourceType":"module"}