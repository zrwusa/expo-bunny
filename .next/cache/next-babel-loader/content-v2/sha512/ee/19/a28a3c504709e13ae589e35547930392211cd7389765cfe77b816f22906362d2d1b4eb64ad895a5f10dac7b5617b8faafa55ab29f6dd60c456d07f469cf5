{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";export var SegmentTreeNode=function(){function SegmentTreeNode(start,end,sum,val){_classCallCheck(this,SegmentTreeNode);this._start=0;this._end=0;this._val=null;this._sum=0;this._left=null;this._right=null;this._start=start;this._end=end;this._sum=sum;this._val=val||null;}_createClass(SegmentTreeNode,[{key:\"start\",get:function get(){return this._start;},set:function set(v){this._start=v;}},{key:\"end\",get:function get(){return this._end;},set:function set(v){this._end=v;}},{key:\"val\",get:function get(){return this._val;},set:function set(v){this._val=v;}},{key:\"sum\",get:function get(){return this._sum;},set:function set(v){this._sum=v;}},{key:\"left\",get:function get(){return this._left;},set:function set(v){this._left=v;}},{key:\"right\",get:function get(){return this._right;},set:function set(v){this._right=v;}}]);return SegmentTreeNode;}();export var SegmentTree=function(){function SegmentTree(values,start,end){_classCallCheck(this,SegmentTree);this._values=[];this._start=0;start=start||0;end=end||values.length-1;this._values=values;this._start=start;this._end=end;this._root=this.build(start,end);}_createClass(SegmentTree,[{key:\"root\",get:function get(){return this._root;}},{key:\"build\",value:function build(start,end){if(start===end){return new SegmentTreeNode(start,end,this._values[start]);}var mid=start+Math.floor((end-start)/2);var left=this.build(start,mid);var right=this.build(mid+1,end);var cur=new SegmentTreeNode(start,end,left.sum+right.sum);cur.left=left;cur.right=right;return cur;}},{key:\"updateNode\",value:function updateNode(index,sum,val){var root=this._root||null;if(!root){return;}var dfs=function dfs(cur,index,sum,val){if(cur.start===cur.end&&cur.start===index){cur.sum=sum;return;}var mid=cur.start+Math.floor((cur.end-cur.start)/2);if(index<=mid){dfs(cur.left,index,sum,val);}else{dfs(cur.right,index,sum,val);}cur.sum=cur.left.sum+cur.right.sum;};dfs(root,index,sum);}},{key:\"querySumByRange\",value:function querySumByRange(indexA,indexB){var root=this._root||null;if(!root){return 0;}var dfs=function dfs(cur,i,j){if(cur.start===i&&cur.end===j){return cur.sum;}var mid=cur.start+Math.floor((cur.end-cur.start)/2);if(j<=mid){return dfs(cur.left,i,j);}else if(i>mid){return dfs(cur.right,i,j);}else{return dfs(cur.left,i,mid)+dfs(cur.right,mid+1,j);}};return dfs(root,indexA,indexB);}}]);return SegmentTree;}();","map":null,"metadata":{},"sourceType":"module"}