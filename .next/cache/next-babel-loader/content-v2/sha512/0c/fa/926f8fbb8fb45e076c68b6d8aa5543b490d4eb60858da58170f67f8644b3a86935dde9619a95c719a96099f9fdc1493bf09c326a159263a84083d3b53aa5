{"ast":null,"code":"import dayjs from'dayjs';export function isSameDay(currentMessage,diffMessage){if(!diffMessage||!diffMessage.createdAt){return false;}var currentCreatedAt=dayjs(currentMessage.createdAt);var diffCreatedAt=dayjs(diffMessage.createdAt);if(!currentCreatedAt.isValid()||!diffCreatedAt.isValid()){return false;}return currentCreatedAt.isSame(diffCreatedAt,'day');}export function isSameUser(currentMessage,diffMessage){return!!(diffMessage&&diffMessage.user&&currentMessage.user&&diffMessage.user._id===currentMessage.user._id);}var styleString=function styleString(color){return\"color: \"+color+\"; font-weight: bold\";};var headerLog='%c[bunny-chat]';export var warning=function warning(){var _console;for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return(_console=console).log.apply(_console,[headerLog,styleString('orange')].concat(args));};export var error=function error(){var _console2;for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}return(_console2=console).log.apply(_console2,[headerLog,styleString('red')].concat(args));};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/components/BunnyChat/utils.ts"],"names":["diffMessage","currentCreatedAt","dayjs","currentMessage","diffCreatedAt","styleString","headerLog","warning","args","error"],"mappings":"AAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CAIA,MAAO,SAAA,CAAA,SAAA,CAAA,cAAA,CAAA,WAAA,CAGL,CACE,GAAI,CAAA,WAAA,EAAgB,CAACA,WAAW,CAAhC,SAAA,CAA4C,CACxC,MAAA,MAAA,CACH,CAED,GAAMC,CAAAA,gBAAgB,CAAGC,KAAK,CAACC,cAAc,CAA7C,SAA8B,CAA9B,CACA,GAAMC,CAAAA,aAAa,CAAGF,KAAK,CAACF,WAAW,CAAvC,SAA2B,CAA3B,CAEA,GAAI,CAACC,gBAAgB,CAAjB,OAACA,EAAD,EAA+B,CAACG,aAAa,CAAjD,OAAoCA,EAApC,CAA6D,CACzD,MAAA,MAAA,CACH,CAED,MAAOH,CAAAA,gBAAgB,CAAhBA,MAAAA,CAAAA,aAAAA,CAAP,KAAOA,CAAP,CACH,CAED,MAAO,SAAA,CAAA,UAAA,CAAA,cAAA,CAAA,WAAA,CAGL,CACE,MAAO,CAAC,EACJD,WAAW,EACXA,WAAW,CADXA,IAAAA,EAEAG,cAAc,CAFdH,IAAAA,EAGAA,WAAW,CAAXA,IAAAA,CAAAA,GAAAA,GAAyBG,cAAc,CAAdA,IAAAA,CAJ7B,GAAQ,CAAR,CAMH,CAED,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAA,KAAA,CAAA,CAAA,MAAA,UAAA,KAAA,CAAA,qBAAA,CAApB,CAAA,CAEA,GAAMC,CAAAA,SAAS,CAAf,gBAAA,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,GAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAIC,IAAJ,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,CAAIA,IAAJ,CAAA,IAAA,CAAIA,CAAJ,SAAA,CAAA,IAAA,CAAIA,CAAJ,CAAA,MACnB,CAAA,QAAA,CAAA,OAAA,EAAA,GAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,SAAA,CAAuBH,WAAW,CAAlC,QAAkC,CAAlC,EAAA,MAAA,CADmB,IACnB,CAAA,CADmB,CAAhB,CAAA,CAGP,MAAO,IAAMI,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAA,CAAA,GAAA,CAAA,SAAA,CAAA,IAAA,GAAA,CAAA,KAAA,CAAA,SAAA,CAAA,MAAA,CAAID,IAAJ,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,EAAA,CAAA,CAAIA,IAAJ,CAAA,KAAA,CAAIA,CAAJ,SAAA,CAAA,KAAA,CAAIA,CAAJ,CAAA,MACjB,CAAA,SAAA,CAAA,OAAA,EAAA,GAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CAAA,SAAA,CAAuBH,WAAW,CAAlC,KAAkC,CAAlC,EAAA,MAAA,CADiB,IACjB,CAAA,CADiB,CAAd,CAAA","sourcesContent":["import dayjs from 'dayjs';\n\nimport {IMessage} from './types';\n\nexport function isSameDay<TMessage extends IMessage>(\n    currentMessage: TMessage,\n    diffMessage: TMessage | null | undefined,\n) {\n    if (!diffMessage || !diffMessage.createdAt) {\n        return false;\n    }\n\n    const currentCreatedAt = dayjs(currentMessage.createdAt);\n    const diffCreatedAt = dayjs(diffMessage.createdAt);\n\n    if (!currentCreatedAt.isValid() || !diffCreatedAt.isValid()) {\n        return false;\n    }\n\n    return currentCreatedAt.isSame(diffCreatedAt, 'day');\n}\n\nexport function isSameUser(\n    currentMessage: IMessage,\n    diffMessage: IMessage | null | undefined,\n) {\n    return !!(\n        diffMessage &&\n        diffMessage.user &&\n        currentMessage.user &&\n        diffMessage.user._id === currentMessage.user._id\n    );\n}\n\nconst styleString = (color: string) => `color: ${color}; font-weight: bold`;\n\nconst headerLog = '%c[bunny-chat]';\n\nexport const warning = (...args: any) =>\n    console.log(headerLog, styleString('orange'), ...args);\n\nexport const error = (...args: any) =>\n    console.log(headerLog, styleString('red'), ...args);\n"]},"metadata":{},"sourceType":"module"}