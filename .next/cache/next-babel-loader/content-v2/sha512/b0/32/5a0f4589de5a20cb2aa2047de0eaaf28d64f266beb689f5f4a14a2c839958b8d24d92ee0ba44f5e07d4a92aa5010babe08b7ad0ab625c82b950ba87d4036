{"ast":null,"code":"import{ESys}from\"../../constants\";export var collectSysError=function collectSysError(payload){return{type:ESys.ERROR,payload:payload};};export var sysClearErrors=function sysClearErrors(payload){return{type:ESys.CLEAR_ERRORS,payload:payload};};export var sysWarn=function sysWarn(payload){return{type:ESys.WARN,payload:payload};};export var restoreIsReady=function restoreIsReady(payload){return{type:ESys.RESTORE_IS_READY,payload:payload};};export var requestFailed=function requestFailed(payload){return{type:ESys.REQUEST_FAILED,payload:payload};};export var requesting=function requesting(payload){return{type:ESys.REQUESTING,payload:payload};};export var requestSuccess=function requestSuccess(payload){return{type:ESys.REQUEST_SUCCESS,payload:payload};};export var restoreNavInitialState=function restoreNavInitialState(payload){return{type:ESys.RESTORE_NAV_INITIAL_STATE,payload:payload};};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/store/actions/sys.ts"],"names":["collectSysError","type","ESys","payload","sysClearErrors","sysWarn","restoreIsReady","requestFailed","requesting","requestSuccess","restoreNavInitialState"],"mappings":"AAAA,OAAA,IAAA,uBAkBA,MAAO,IAAMA,CAAAA,eAAmD,CAAG,QAAtDA,CAAAA,eAAsD,CAAA,OAAA,CAAa,CAC5E,MAAO,CACHC,IAAI,CAAEC,IAAI,CADP,KAAA,CAEHC,OAAO,CAAPA,OAFG,CAAP,CADG,CAAA,CAQP,MAAO,IAAMC,CAAAA,cAAuE,CAAG,QAA1EA,CAAAA,cAA0E,CAAA,OAAA,CAAa,CAChG,MAAO,CACHH,IAAI,CAAEC,IAAI,CADP,YAAA,CAEHC,OAAO,CAAPA,OAFG,CAAP,CADG,CAAA,CAQP,MAAO,IAAME,CAAAA,OAAmD,CAAG,QAAtDA,CAAAA,OAAsD,CAAA,OAAA,CAAa,CAC5E,MAAO,CACHJ,IAAI,CAAEC,IAAI,CADP,IAAA,CAEHC,OAAO,CAAPA,OAFG,CAAP,CADG,CAAA,CAQP,MAAO,IAAMG,CAAAA,cAAwE,CAAG,QAA3EA,CAAAA,cAA2E,CAAA,OAAA,CAAa,CACjG,MAAO,CACHL,IAAI,CAAEC,IAAI,CADP,gBAAA,CAEHC,OAAO,CAAPA,OAFG,CAAP,CADG,CAAA,CAQP,MAAO,IAAMI,CAAAA,aAA8D,CAAG,QAAjEA,CAAAA,aAAiE,CAAA,OAAA,CAAa,CACvF,MAAO,CACHN,IAAI,CAAEC,IAAI,CADP,cAAA,CAEHC,OAAO,CAAPA,OAFG,CAAP,CADG,CAAA,CAOP,MAAO,IAAMK,CAAAA,UAAwD,CAAG,QAA3DA,CAAAA,UAA2D,CAAA,OAAA,CAAa,CACjF,MAAO,CACHP,IAAI,CAAEC,IAAI,CADP,UAAA,CAEHC,OAAO,CAAPA,OAFG,CAAP,CADG,CAAA,CAQP,MAAO,IAAMM,CAAAA,cAAgE,CAAG,QAAnEA,CAAAA,cAAmE,CAAA,OAAA,CAAa,CACzF,MAAO,CACHR,IAAI,CAAEC,IAAI,CADP,eAAA,CAEHC,OAAO,CAAPA,OAFG,CAAP,CADG,CAAA,CAQP,MAAO,IAAMO,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAAA,OAAA,CAA0E,CAC5G,MAAO,CACHT,IAAI,CAAEC,IAAI,CADP,yBAAA,CAEHC,OAAO,CAAPA,OAFG,CAAP,CADG,CAAA","sourcesContent":["import {ESys} from '../../constants';\nimport {\n    RequestConfig,\n    RequestFailedAction,\n    RequestingAction,\n    RequestSuccessAction,\n    RestoreIsReadyAction,\n    RestoreIsReadyPayload,\n    RestoreNavInitialStateAction,\n    RestoreNavInitialStatePayload,\n    SysClearErrorPayload,\n    SysClearErrorsAction,\n    SysErrorAction,\n    SysWarnAction,\n    SysWarnPayload\n} from '../../types';\n\n\nexport const collectSysError: (payload: Error) => SysErrorAction = (payload) => {\n    return {\n        type: ESys.ERROR,\n        payload\n    };\n};\n\n\nexport const sysClearErrors: (payload: SysClearErrorPayload) => SysClearErrorsAction = (payload) => {\n    return {\n        type: ESys.CLEAR_ERRORS,\n        payload\n    };\n};\n\n\nexport const sysWarn: (payload: SysWarnPayload) => SysWarnAction = (payload) => {\n    return {\n        type: ESys.WARN,\n        payload\n    };\n};\n\n\nexport const restoreIsReady: (payload: RestoreIsReadyPayload) => RestoreIsReadyAction = (payload) => {\n    return {\n        type: ESys.RESTORE_IS_READY,\n        payload,\n    };\n};\n\n\nexport const requestFailed: (payload: RequestConfig) => RequestFailedAction = (payload) => {\n    return {\n        type: ESys.REQUEST_FAILED,\n        payload\n    };\n};\n\nexport const requesting: (payload: RequestConfig) => RequestingAction = (payload) => {\n    return {\n        type: ESys.REQUESTING,\n        payload,\n    };\n};\n\n\nexport const requestSuccess: (payload: RequestConfig) => RequestSuccessAction = (payload) => {\n    return {\n        type: ESys.REQUEST_SUCCESS,\n        payload,\n    };\n};\n\n\nexport const restoreNavInitialState = (payload: RestoreNavInitialStatePayload): RestoreNavInitialStateAction => {\n    return {\n        type: ESys.RESTORE_NAV_INITIAL_STATE,\n        payload\n    };\n};\n\nexport type SysActions =\n    RestoreIsReadyAction\n    | SysErrorAction\n    | SysWarnAction\n    | RestoreNavInitialStateAction\n    | SysClearErrorsAction\n    | RequestingAction\n    | RequestSuccessAction\n    | RequestFailedAction;\n"]},"metadata":{},"sourceType":"module"}