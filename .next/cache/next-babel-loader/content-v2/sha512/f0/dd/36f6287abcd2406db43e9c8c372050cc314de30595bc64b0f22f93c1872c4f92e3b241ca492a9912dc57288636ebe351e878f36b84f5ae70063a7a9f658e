{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/packages/expo-av/src/ExponentVideo.web.tsx\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import*as React from'react';import createElement from'react-native-web/dist/exports/createElement';import ExponentAV from\"./ExponentAV\";import{addFullscreenListener}from\"./FullscreenUtils.web\";export var FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT=0;export var FULLSCREEN_UPDATE_PLAYER_DID_PRESENT=1;export var FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS=2;export var FULLSCREEN_UPDATE_PLAYER_DID_DISMISS=3;export var IOS_FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT=FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT;export var IOS_FULLSCREEN_UPDATE_PLAYER_DID_PRESENT=FULLSCREEN_UPDATE_PLAYER_DID_PRESENT;export var IOS_FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS=FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS;export var IOS_FULLSCREEN_UPDATE_PLAYER_DID_DISMISS=FULLSCREEN_UPDATE_PLAYER_DID_DISMISS;var Video=React.forwardRef(_c=function _c(props,ref){return createElement('video',_objectSpread(_objectSpread({},props),{},{ref:ref}));});_c2=Video;var ExponentVideo=function(_React$Component){_inherits(ExponentVideo,_React$Component);var _super=_createSuper(ExponentVideo);function ExponentVideo(){var _this;_classCallCheck(this,ExponentVideo);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onFullscreenChange=function(isFullscreen){if(!_this.props.onFullscreenUpdate)return;if(isFullscreen){_this.props.onFullscreenUpdate({nativeEvent:{fullscreenUpdate:FULLSCREEN_UPDATE_PLAYER_DID_PRESENT}});}else{_this.props.onFullscreenUpdate({nativeEvent:{fullscreenUpdate:FULLSCREEN_UPDATE_PLAYER_DID_DISMISS}});}};_this.onStatusUpdate=function _callee(){var nativeEvent;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(_this.props.onStatusUpdate){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.next=4;return _regeneratorRuntime.awrap(ExponentAV.getStatusForVideo(_this._video));case 4:nativeEvent=_context.sent;_this.props.onStatusUpdate({nativeEvent:nativeEvent});case 6:case\"end\":return _context.stop();}}},null,null,null,Promise);};_this.onLoadStart=function(){if(!_this.props.onLoadStart){return;}_this.props.onLoadStart();_this.onStatusUpdate();};_this.onLoadedData=function(event){if(!_this.props.onLoad){return;}_this.props.onLoad(event);_this.onStatusUpdate();};_this.onError=function(event){if(!_this.props.onError){return;}_this.props.onError(event);_this.onStatusUpdate();};_this.onProgress=function(){_this.onStatusUpdate();};_this.onSeeking=function(){_this.onStatusUpdate();};_this.onEnded=function(){_this.onStatusUpdate();};_this.onLoadedMetadata=function(){_this.onStatusUpdate();};_this.onCanPlay=function(event){if(!_this.props.onReadyForDisplay){return;}_this.props.onReadyForDisplay(event);_this.onStatusUpdate();};_this.onStalled=function(){_this.onStatusUpdate();};_this.onRef=function(ref){_this._video=ref;_this._removeFullscreenListener==null?void 0:_this._removeFullscreenListener();_this._removeFullscreenListener=addFullscreenListener(_this._video,_this.onFullscreenChange);_this.onStatusUpdate();};return _this;}_createClass(ExponentVideo,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){var _this$_removeFullscre;(_this$_removeFullscre=this._removeFullscreenListener)==null?void 0:_this$_removeFullscre.call(this);}},{key:\"render\",value:function render(){var _this$props=this.props,source=_this$props.source,_this$props$status=_this$props.status,status=_this$props$status===void 0?{}:_this$props$status,objectFit=_this$props.resizeMode,useNativeControls=_this$props.useNativeControls,style=_this$props.style;var customStyle={position:undefined,objectFit:objectFit,overflow:'hidden'};return React.createElement(Video,{ref:this.onRef,onLoadStart:this.onLoadStart,onLoadedData:this.onLoadedData,onError:this.onError,onTimeUpdate:this.onProgress,onSeeking:this.onSeeking,onEnded:this.onEnded,onLoadedMetadata:this.onLoadedMetadata,onCanPlay:this.onCanPlay,onStalled:this.onStalled,src:(source||{uri:undefined}).uri,muted:status.isMuted,loop:status.isLooping,autoPlay:status.shouldPlay,controls:useNativeControls,style:[style,customStyle],__self:this,__source:{fileName:_jsxFileName,lineNumber:145,columnNumber:13}});}}]);return ExponentVideo;}(React.Component);export{ExponentVideo as default};var _c,_c2;$RefreshReg$(_c,\"Video$React.forwardRef\");$RefreshReg$(_c2,\"Video\");","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/packages/expo-av/src/ExponentVideo.web.tsx"],"names":["FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT","FULLSCREEN_UPDATE_PLAYER_DID_PRESENT","FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS","FULLSCREEN_UPDATE_PLAYER_DID_DISMISS","IOS_FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT","IOS_FULLSCREEN_UPDATE_PLAYER_DID_PRESENT","IOS_FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS","IOS_FULLSCREEN_UPDATE_PLAYER_DID_DISMISS","Video","createElement","ref","ExponentVideo","React","Component","onFullscreenChange","nativeEvent","fullscreenUpdate","onStatusUpdate","ExponentAV","onLoadStart","onLoadedData","onError","onProgress","onSeeking","onEnded","onLoadedMetadata","onCanPlay","onStalled","onRef","addFullscreenListener","source","status","objectFit","useNativeControls","style","customStyle","position","overflow","uri","undefined"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {View} from 'react-native';\n// @ts-ignore\nimport createElement from 'react-native-web/dist/exports/createElement';\n// import {createElement} from \"react\";\nimport {AVPlaybackNativeSource, AVPlaybackStatus, AVPlaybackStatusToSet} from './AV';\nimport ExponentAV from './ExponentAV';\nimport {addFullscreenListener} from './FullscreenUtils.web';\n\n\ntype ExponentVideoProps = {\n    source: AVPlaybackNativeSource | null;\n    resizeMode?: object;\n    status?: AVPlaybackStatusToSet;\n    useNativeControls?: boolean;\n    onStatusUpdate?: (event: { nativeEvent: AVPlaybackStatus }) => void;\n    onReadyForDisplay?: (event: { nativeEvent: object }) => void;\n    onFullscreenUpdate?: (event: { nativeEvent: object }) => void;\n    onLoadStart: () => void;\n    onLoad: (event: { nativeEvent: AVPlaybackStatus }) => void;\n    onError: (event: { nativeEvent: { error: string } }) => void;\n    // Required by react-native\n    scaleX?: number;\n    scaleY?: number;\n    translateX?: number;\n    translateY?: number;\n    rotation?: number;\n} & React.ComponentProps<typeof View>;\n\nexport type NaturalSize = {\n    width: number;\n    height: number;\n    orientation: 'portrait' | 'landscape';\n};\n\nexport const FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = 0;\nexport const FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = 1;\nexport const FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = 2;\nexport const FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = 3;\n\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT;\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = FULLSCREEN_UPDATE_PLAYER_DID_PRESENT;\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS;\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = FULLSCREEN_UPDATE_PLAYER_DID_DISMISS;\n\nconst Video: any = React.forwardRef((props, ref) => createElement('video', {...props, ref}));\n\nexport default class ExponentVideo extends React.Component<ExponentVideoProps> {\n    _video?: HTMLVideoElement;\n    _removeFullscreenListener?: () => any;\n\n    componentWillUnmount() {\n        this._removeFullscreenListener?.();\n    }\n\n    onFullscreenChange = (isFullscreen: boolean) => {\n        if (!this.props.onFullscreenUpdate) return;\n        if (isFullscreen) {\n            this.props.onFullscreenUpdate({\n                nativeEvent: {fullscreenUpdate: FULLSCREEN_UPDATE_PLAYER_DID_PRESENT},\n            });\n        } else {\n            this.props.onFullscreenUpdate({\n                nativeEvent: {fullscreenUpdate: FULLSCREEN_UPDATE_PLAYER_DID_DISMISS},\n            });\n        }\n    };\n\n    onStatusUpdate = async () => {\n        if (!this.props.onStatusUpdate) {\n            return;\n        }\n        const nativeEvent = await ExponentAV.getStatusForVideo(this._video);\n        this.props.onStatusUpdate({nativeEvent});\n    };\n\n    onLoadStart = () => {\n        if (!this.props.onLoadStart) {\n            return;\n        }\n        this.props.onLoadStart();\n        this.onStatusUpdate();\n    };\n\n    onLoadedData = (event: { nativeEvent: AVPlaybackStatus }) => {\n        if (!this.props.onLoad) {\n            return;\n        }\n        this.props.onLoad(event);\n        this.onStatusUpdate();\n    };\n\n    onError = (event: { nativeEvent: { error: string } }) => {\n        if (!this.props.onError) {\n            return;\n        }\n        this.props.onError(event);\n        this.onStatusUpdate();\n    };\n\n    onProgress = () => {\n        this.onStatusUpdate();\n    };\n\n    onSeeking = () => {\n        this.onStatusUpdate();\n    };\n\n    onEnded = () => {\n        this.onStatusUpdate();\n    };\n\n    onLoadedMetadata = () => {\n        this.onStatusUpdate();\n    };\n\n    onCanPlay = (event: { nativeEvent: object }) => {\n        if (!this.props.onReadyForDisplay) {\n            return;\n        }\n        this.props.onReadyForDisplay(event);\n        this.onStatusUpdate();\n    };\n\n    onStalled = () => {\n        this.onStatusUpdate();\n    };\n\n    onRef = (ref: HTMLVideoElement) => {\n        this._video = ref;\n        this._removeFullscreenListener?.();\n        this._removeFullscreenListener = addFullscreenListener(this._video, this.onFullscreenChange);\n        this.onStatusUpdate();\n    };\n\n    render() {\n        const {source, status = {}, resizeMode: objectFit, useNativeControls, style} = this.props;\n\n        const customStyle = {\n            position: undefined,\n            objectFit,\n            overflow: 'hidden',\n        };\n        return (\n            <Video\n                ref={this.onRef}\n                onLoadStart={this.onLoadStart}\n                onLoadedData={this.onLoadedData}\n                onError={this.onError}\n                onTimeUpdate={this.onProgress}\n                onSeeking={this.onSeeking}\n                onEnded={this.onEnded}\n                onLoadedMetadata={this.onLoadedMetadata}\n                onCanPlay={this.onCanPlay}\n                onStalled={this.onStalled}\n                src={(source || {uri: undefined}).uri}\n                muted={status.isMuted}\n                loop={status.isLooping}\n                autoPlay={status.shouldPlay}\n                controls={useNativeControls}\n                style={[style, customStyle]}\n            />\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}