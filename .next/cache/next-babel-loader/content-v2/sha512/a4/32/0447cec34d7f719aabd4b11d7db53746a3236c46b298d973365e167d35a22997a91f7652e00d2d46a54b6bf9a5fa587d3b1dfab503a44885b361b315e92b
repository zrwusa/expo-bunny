{"ast":null,"code":"import _get from\"@babel/runtime/helpers/get\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{BST,BSTNode}from\"./bst\";export var AVLTreeNode=function(_BSTNode){_inherits(AVLTreeNode,_BSTNode);var _super=_createSuper(AVLTreeNode);function AVLTreeNode(){_classCallCheck(this,AVLTreeNode);return _super.apply(this,arguments);}_createClass(AVLTreeNode,[{key:\"clone\",value:function clone(){return new AVLTreeNode(this._id,this._val,this._count);}}]);return AVLTreeNode;}(BSTNode);export var AVLTree=function(_BST){_inherits(AVLTree,_BST);var _super2=_createSuper(AVLTree);function AVLTree(){_classCallCheck(this,AVLTree);return _super2.apply(this,arguments);}_createClass(AVLTree,[{key:\"balanceFactor\",value:function balanceFactor(node){if(node.right===null)return-node.height;else if(node.left===null)return+node.height;else return node.right.height-node.left.height;}},{key:\"updateHeight\",value:function updateHeight(node){if(node.left===null&&node.right===null)node.height=0;else if(node.left===null){var rightHeight=node.right?node.right.height:0;node.height=1+rightHeight;}else if(node.right===null)node.height=1+node.left.height;else node.height=1+Math.max(node.right.height,node.left.height);}},{key:\"balancePath\",value:function balancePath(node){var path=this.getPathToRoot(node);for(var i=path.length-1;i>=0;i--){var _A=path[i];this.updateHeight(_A);switch(this.balanceFactor(_A)){case-2:if(_A&&_A.left){if(this.balanceFactor(_A.left)<=0){this.balanceLL(_A);}else{this.balanceLR(_A);}}break;case+2:if(_A&&_A.right){if(this.balanceFactor(_A.right)>=0){this.balanceRR(_A);}else{this.balanceRL(_A);}}}}}},{key:\"balanceLL\",value:function balanceLL(A){var parentOfA=A.parent;var B=A.left;A.parent=B;if(B&&B.right!==null){B.right.parent=A;}if(B)B.parent=parentOfA;if(A===this.root){this.root=B;}else{if((parentOfA==null?void 0:parentOfA.left)===A){parentOfA.left=B;}else{if(parentOfA)parentOfA.right=B;}}if(B){A.left=B.right;B.right=A;}this.updateHeight(A);if(B)this.updateHeight(B);}},{key:\"balanceLR\",value:function balanceLR(A){var parentOfA=A.parent;var B=A.left;var C=null;if(B){C=B.right;}if(A)A.parent=C;if(B)B.parent=C;if(C){if(C.left!==null){C.left.parent=B;}if(C.right!==null){C.right.parent=A;}C.parent=parentOfA;}if(A===this.root){this.root=C;}else{if(parentOfA){if(parentOfA.left===A){parentOfA.left=C;}else{parentOfA.right=C;}}}if(C){A.left=C.right;if(B)B.right=C.left;C.left=B;C.right=A;}this.updateHeight(A);B&&this.updateHeight(B);C&&this.updateHeight(C);}},{key:\"balanceRR\",value:function balanceRR(A){var parentOfA=A.parent;var B=A.right;A.parent=B;if(B){if(B.left!==null){B.left.parent=A;}B.parent=parentOfA;}if(A===this.root){this.root=B;}else{if(parentOfA){if(parentOfA.left===A){parentOfA.left=B;}else{parentOfA.right=B;}}}if(B){A.right=B.left;B.left=A;}this.updateHeight(A);B&&this.updateHeight(B);}},{key:\"balanceRL\",value:function balanceRL(A){var parentOfA=A.parent;var B=A.right;var C=null;if(B){C=B.left;}A.parent=C;if(B)B.parent=C;if(C){if(C.left!==null){C.left.parent=A;}if(C.right!==null){C.right.parent=B;}C.parent=parentOfA;}if(A===this.root){this.root=C;}else{if(parentOfA){if(parentOfA.left===A){parentOfA.left=C;}else{parentOfA.right=C;}}}if(C)A.right=C.left;if(B&&C)B.left=C.right;if(C)C.left=A;if(C)C.right=B;this.updateHeight(A);B&&this.updateHeight(B);C&&this.updateHeight(C);}},{key:\"createNode\",value:function createNode(id,val,count){return new AVLTreeNode(id,val,count);}},{key:\"insert\",value:function insert(id,val,count){var inserted=_get(_getPrototypeOf(AVLTree.prototype),\"insert\",this).call(this,id,val,count);for(var _iterator=_createForOfIteratorHelperLoose(inserted),_step;!(_step=_iterator()).done;){var _node=_step.value;if(_node){this.balancePath(_node);}}return inserted;}},{key:\"remove\",value:function remove(id,isUpdateAllLeftSum){var deletedResults=_get(_getPrototypeOf(AVLTree.prototype),\"remove\",this).call(this,id,isUpdateAllLeftSum);for(var _iterator2=_createForOfIteratorHelperLoose(deletedResults),_step2;!(_step2=_iterator2()).done;){var _ref=_step2.value;var needBalanced=_ref.needBalanced;if(needBalanced){this.balancePath(needBalanced);}}return deletedResults;}}]);return AVLTree;}(BST);","map":null,"metadata":{},"sourceType":"module"}