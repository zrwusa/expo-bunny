{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/screens/ColorFinder/ColorFinder.tsx\";import React,{useState}from'react';import{ButtonTO,InButtonText,Text,TextInput,View}from\"../../components/UI\";import{checkColor,colorFaultTolerance,deltaEDes,diffColors}from\"../../utils/color\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import{makeStyles}from\"./styles\";import{palette,uuidV4}from\"../../utils\";import{Card,Col,Row}from\"../../containers\";import{collectBizLogicResult}from\"../../store/actions\";import{bizLogicError}from\"../../helpers\";import{useDispatch}from'react-redux';import{ColorTranslator}from'colortranslator';import{CopyableText}from\"../../components/CopyableText\";import{ColorValuesCard}from\"../../components/ColorValuesCard\";import{shortenTFunctionKey}from\"../../providers/i18n-labor\";import{Tab}from\"../../components\";import{useBunnyKit}from\"../../hooks/bunny-kit\";export function ColorFinderScreen(){var _this=this;var _useBunnyKit=useBunnyKit(),sizeLabor=_useBunnyKit.sizeLabor,themeLabor=_useBunnyKit.themeLabor,t=_useBunnyKit.t;var st=shortenTFunctionKey(t,'screens.ColorFinder');var dispatch=useDispatch();var themes=themeLabor.themes;var styles=makeStyles(sizeLabor,themeLabor);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputText=_useState2[0],setInputText=_useState2[1];var _useState3=useState({text:'',Hex:'',RGB:'',HSL:''}),_useState4=_slicedToArray(_useState3,2),colorInput=_useState4[0],setColorInput=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),similarColorsFromTheme=_useState6[0],setSimilarColorsFromTheme=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),similarColorsFromPalette=_useState8[0],setSimilarColorsFromPalette=_useState8[1];var _useState9=useState('Beautiful'),_useState10=_slicedToArray(_useState9,2),uglyType=_useState10[0],setUglyType=_useState10[1];var formatUglyStringToRGB=function formatUglyStringToRGB(colorString){if(colorString&&colorString.substring(0,3).toLowerCase()!=='rgb'){var escaped09=escape(colorString).replaceAll('%09',',');var escaped20=escaped09.replaceAll('%20',',');var truncated=escaped20.split(',').slice(0,3).join(',');return\"rgb(\"+truncated+\")\";}else{return colorString;}};var getIndexedColor=function getIndexedColor(themColorValue,colorKey,inputColorText,themeName,similarIndexed){var themeColor=colorFaultTolerance(themColorValue);if(themeColor&&inputColorText){var diff=diffColors(themeColor,inputColorText);var indexedColor={keyInThemeColors:colorKey,Hex:ColorTranslator.toHEX(themeColor),RGB:ColorTranslator.toRGB(themeColor),HSL:ColorTranslator.toHSL(themeColor),diff:diff,diffDes:deltaEDes(diff),themeName:themeName};similarIndexed.push(indexedColor);}};var getSimilarColor=function getSimilarColor(){var inputColorText=colorFaultTolerance(colorInput.text);var checkColorResult=checkColor(inputColorText);if(!checkColorResult.isColor){dispatch(collectBizLogicResult(bizLogicError('Not a color string',true)));return;}var themesKeys=Object.keys(themes);var _similarColorsFromTheme=[];var _similarColorsFromPalette=[];themesKeys.forEach(function(themeName){var theme=themes[themeName];var colors=theme.colors;var similarIndexed=[];var colorKeys=Object.keys(colors);colorKeys.forEach(function(colorKey){var themColorValue=colors[colorKey];if(themColorValue instanceof Array){}else{getIndexedColor(themColorValue,colorKey,inputColorText,themeName,similarIndexed);}});var sortedSimilarIndexed=similarIndexed.sort(function(a,b){return a.diff-b.diff;});var similarObj=sortedSimilarIndexed[0];_similarColorsFromTheme.push(similarObj);});setSimilarColorsFromTheme(_similarColorsFromTheme);var similarIndexedPalette=[];var colorPaletteKeys=Object.keys(palette);colorPaletteKeys.forEach(function(colorKey){var paletteColor=colorFaultTolerance(palette[colorKey]);if(paletteColor&&inputColorText){var diff=diffColors(paletteColor,inputColorText);var indexedColor={keyInPalette:colorKey,Hex:ColorTranslator.toHEX(paletteColor),RGB:ColorTranslator.toRGB(paletteColor),HSL:ColorTranslator.toHSL(paletteColor),diff:diff,diffDes:deltaEDes(diff)};similarIndexedPalette.push(indexedColor);}});var sortedSimilarIndexedPalette=similarIndexedPalette.sort(function(a,b){return a.diff-b.diff;});var similarObjPalette=sortedSimilarIndexedPalette[0];_similarColorsFromPalette.push(similarObjPalette);_similarColorsFromPalette.push(sortedSimilarIndexedPalette[1]);_similarColorsFromPalette.push(sortedSimilarIndexedPalette[3]);_similarColorsFromPalette.push(sortedSimilarIndexedPalette[4]);_similarColorsFromPalette.push(sortedSimilarIndexedPalette[5]);_similarColorsFromPalette.push(sortedSimilarIndexedPalette[6]);setSimilarColorsFromPalette(_similarColorsFromPalette);};var handleSimilarColor=function handleSimilarColor(){getSimilarColor();};var handleChangeTextFrom=function handleChangeTextFrom(text){setInputText(text);var beautiful='';switch(uglyType){case'RGB':beautiful=formatUglyStringToRGB(text);break;default:beautiful=text;break;}var _text=colorFaultTolerance(beautiful);if(_text){setColorInput({text:_text,Hex:ColorTranslator.toHEX(_text),RGB:ColorTranslator.toRGB(_text),HSL:ColorTranslator.toHSL(_text)});}else{setColorInput({text:'',Hex:'',RGB:'',HSL:''});}};var handleKeyPress=function handleKeyPress(_ref){var nativeEvent=_ref.nativeEvent;if(nativeEvent.key==='Enter'){getSimilarColor();}};return React.createElement(ScrollView,{__self:this,__source:{fileName:_jsxFileName,lineNumber:178,columnNumber:9}},React.createElement(View,{style:styles.container,__self:this,__source:{fileName:_jsxFileName,lineNumber:179,columnNumber:13}},React.createElement(Card,{titleMode:\"OUT\",title:st('colorInput'),__self:this,__source:{fileName:_jsxFileName,lineNumber:180,columnNumber:17}},React.createElement(Tab,{items:['Beautiful','RGB','Hex','HSL'],value:uglyType,onChange:function onChange(item){setUglyType(item);},__self:this,__source:{fileName:_jsxFileName,lineNumber:181,columnNumber:21}}),React.createElement(Row,{paddingVertical:\"l\",__self:this,__source:{fileName:_jsxFileName,lineNumber:186,columnNumber:21}},React.createElement(Col,{size:30,__self:this,__source:{fileName:_jsxFileName,lineNumber:187,columnNumber:25}},React.createElement(TextInput,{style:styles.input,value:inputText,placeholder:st('inputAColorString'),onChangeText:handleChangeTextFrom,onKeyPress:handleKeyPress,autoCapitalize:\"none\",__self:this,__source:{fileName:_jsxFileName,lineNumber:188,columnNumber:29}})),React.createElement(Col,{size:2,__self:this,__source:{fileName:_jsxFileName,lineNumber:195,columnNumber:25}}),React.createElement(Col,{size:20,__self:this,__source:{fileName:_jsxFileName,lineNumber:196,columnNumber:25}},React.createElement(ButtonTO,{onPress:handleSimilarColor,__self:this,__source:{fileName:_jsxFileName,lineNumber:197,columnNumber:29}},React.createElement(InButtonText,{__self:this,__source:{fileName:_jsxFileName,lineNumber:198,columnNumber:33}},st('findSimilarColors'))))),React.createElement(ColorValuesCard,{item:colorInput,__self:this,__source:{fileName:_jsxFileName,lineNumber:202,columnNumber:21}})),React.createElement(Card,{titleMode:\"OUT\",title:st('similarColorFromPalette'),__self:this,__source:{fileName:_jsxFileName,lineNumber:205,columnNumber:17}},similarColorsFromPalette.map(function(similarColorItem){return React.createElement(View,{key:similarColorItem.keyInPalette,__self:_this,__source:{fileName:_jsxFileName,lineNumber:208,columnNumber:36}},React.createElement(Row,{paddingVertical:\"xs\",style:styles.row,__self:_this,__source:{fileName:_jsxFileName,lineNumber:209,columnNumber:33}},React.createElement(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:210,columnNumber:37}},\"Diff\"),React.createElement(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:211,columnNumber:37}},similarColorItem.diff.toFixed(2))),React.createElement(Row,{paddingVertical:\"xs\",style:styles.row,__self:_this,__source:{fileName:_jsxFileName,lineNumber:213,columnNumber:33}},React.createElement(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:214,columnNumber:37}},\"Diff Tip\"),React.createElement(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:215,columnNumber:37}},similarColorItem.diffDes)),React.createElement(Row,{paddingVertical:\"xs\",style:styles.row,__self:_this,__source:{fileName:_jsxFileName,lineNumber:217,columnNumber:33}},React.createElement(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:218,columnNumber:37}},\"Key\"),React.createElement(CopyableText,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:218,columnNumber:53}},similarColorItem.keyInPalette)),React.createElement(ColorValuesCard,{item:similarColorItem,__self:_this,__source:{fileName:_jsxFileName,lineNumber:220,columnNumber:33}}));})),React.createElement(Card,{titleMode:\"OUT\",title:st('similarColorsFromThemes'),__self:this,__source:{fileName:_jsxFileName,lineNumber:225,columnNumber:17}},similarColorsFromTheme.map(function(similarColorItem){return React.createElement(View,{key:uuidV4(),__self:_this,__source:{fileName:_jsxFileName,lineNumber:228,columnNumber:36}},React.createElement(Row,{paddingVertical:\"m\",style:styles.row,__self:_this,__source:{fileName:_jsxFileName,lineNumber:229,columnNumber:33}},React.createElement(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:230,columnNumber:37}},\"Diff\"),React.createElement(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:231,columnNumber:37}},similarColorItem.diff.toFixed(2))),React.createElement(Row,{paddingVertical:\"m\",style:styles.row,__self:_this,__source:{fileName:_jsxFileName,lineNumber:233,columnNumber:33}},React.createElement(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:234,columnNumber:37}},\"Diff Tip\"),React.createElement(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:235,columnNumber:37}},similarColorItem.diffDes)),React.createElement(Row,{paddingVertical:\"m\",style:styles.row,__self:_this,__source:{fileName:_jsxFileName,lineNumber:237,columnNumber:33}},React.createElement(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:238,columnNumber:37}},\"Theme\"),React.createElement(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:238,columnNumber:55}},similarColorItem.themeName)),React.createElement(Row,{paddingVertical:\"m\",style:styles.row,__self:_this,__source:{fileName:_jsxFileName,lineNumber:240,columnNumber:33}},React.createElement(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:241,columnNumber:37}},\"Key\"),React.createElement(CopyableText,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:241,columnNumber:53}},similarColorItem.keyInThemeColors)),React.createElement(ColorValuesCard,{item:similarColorItem,__self:_this,__source:{fileName:_jsxFileName,lineNumber:243,columnNumber:33}}));}))));}","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/screens/ColorFinder/ColorFinder.tsx"],"names":["sizeLabor","themeLabor","t","useBunnyKit","st","shortenTFunctionKey","dispatch","useDispatch","themes","styles","makeStyles","inputText","setInputText","useState","colorInput","setColorInput","text","Hex","RGB","HSL","similarColorsFromTheme","setSimilarColorsFromTheme","similarColorsFromPalette","setSimilarColorsFromPalette","uglyType","setUglyType","formatUglyStringToRGB","colorString","escaped09","escape","escaped20","truncated","getIndexedColor","themeColor","colorFaultTolerance","diff","diffColors","indexedColor","keyInThemeColors","ColorTranslator","diffDes","deltaEDes","themeName","similarIndexed","getSimilarColor","inputColorText","checkColorResult","checkColor","collectBizLogicResult","bizLogicError","themesKeys","Object","_similarColorsFromTheme","_similarColorsFromPalette","theme","colors","colorKeys","themColorValue","sortedSimilarIndexed","a","b","similarObj","similarIndexedPalette","colorPaletteKeys","paletteColor","palette","keyInPalette","sortedSimilarIndexedPalette","similarObjPalette","handleSimilarColor","handleChangeTextFrom","beautiful","_text","handleKeyPress","nativeEvent","similarColorItem","uuidV4"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {ButtonTO, InButtonText, Text, TextInput, View} from '../../components/UI';\nimport {checkColor, colorFaultTolerance, deltaEDes, diffColors} from '../../utils/color';\nimport {\n    ColorDiffWithPaletteItem,\n    ColorDiffWithThemeColorsItem,\n    ColorInputItem,\n    PaletteKeys,\n    ThemeColorKeys,\n    ThemeName\n} from '../../types';\nimport {NativeSyntheticEvent, ScrollView, TextInputKeyPressEventData} from 'react-native';\nimport {makeStyles} from './styles';\nimport {palette, uuidV4} from '../../utils';\nimport {Card, Col, Row} from '../../containers';\nimport {collectBizLogicResult} from '../../store/actions';\nimport {bizLogicError} from '../../helpers';\nimport {useDispatch} from 'react-redux';\nimport {ColorTranslator} from 'colortranslator';\nimport {CopyableText} from '../../components/CopyableText';\nimport {ColorValuesCard} from '../../components/ColorValuesCard';\nimport {shortenTFunctionKey} from '../../providers/i18n-labor';\nimport {Tab} from '../../components';\nimport {useBunnyKit} from '../../hooks/bunny-kit';\n\nexport type UglyColorType = 'Beautiful' | 'RGB' | 'Hex' | 'HSL';\n\nexport function ColorFinderScreen() {\n    const {sizeLabor, themeLabor, t} = useBunnyKit();\n    const st = shortenTFunctionKey(t, 'screens.ColorFinder');\n    const dispatch = useDispatch();\n    const {themes} = themeLabor;\n    const styles = makeStyles(sizeLabor, themeLabor);\n    const [inputText, setInputText] = useState('');\n    const [colorInput, setColorInput] = useState<ColorInputItem>({text: '', Hex: '', RGB: '', HSL: ''});\n    const [similarColorsFromTheme, setSimilarColorsFromTheme] = useState<ColorDiffWithThemeColorsItem[]>([]);\n    const [similarColorsFromPalette, setSimilarColorsFromPalette] = useState<ColorDiffWithPaletteItem[]>([]);\n\n    const [uglyType, setUglyType] = useState<UglyColorType>('Beautiful');\n\n    const formatUglyStringToRGB = (colorString: string) => {\n        if (colorString && colorString.substring(0, 3).toLowerCase() !== 'rgb') {\n            const escaped09 = escape(colorString).replaceAll('%09', ',');\n            const escaped20 = escaped09.replaceAll('%20', ',');\n            const truncated = escaped20.split(',').slice(0, 3).join(',');\n            return `rgb(${truncated})`;\n        } else {\n            return colorString;\n        }\n    };\n\n    const getIndexedColor = (themColorValue: string, colorKey: string, inputColorText: string, themeName: ThemeName, similarIndexed: ColorDiffWithThemeColorsItem[]) => {\n        const themeColor = colorFaultTolerance(themColorValue);\n        if (themeColor && inputColorText) {\n            const diff = diffColors(themeColor, inputColorText);\n            const indexedColor = {\n                keyInThemeColors: colorKey,\n                Hex: ColorTranslator.toHEX(themeColor),\n                RGB: ColorTranslator.toRGB(themeColor),\n                HSL: ColorTranslator.toHSL(themeColor),\n                diff: diff,\n                diffDes: deltaEDes(diff),\n                themeName\n            };\n            similarIndexed.push(indexedColor);\n        }\n    };\n\n    const getSimilarColor = () => {\n\n        const inputColorText = colorFaultTolerance(colorInput.text);\n        const checkColorResult = checkColor(inputColorText);\n        if (!checkColorResult.isColor) {\n            dispatch(collectBizLogicResult(bizLogicError('Not a color string', true)));\n            return;\n        }\n        const themesKeys = Object.keys(themes) as ThemeName [];\n        let _similarColorsFromTheme: ColorDiffWithThemeColorsItem[] = [];\n        let _similarColorsFromPalette: ColorDiffWithPaletteItem[] = [];\n\n        themesKeys.forEach((themeName) => {\n            const theme = themes[themeName];\n            const {colors} = theme;\n            const similarIndexed: ColorDiffWithThemeColorsItem[] = [];\n            const colorKeys = Object.keys(colors) as ThemeColorKeys[];\n            colorKeys.forEach((colorKey) => {\n                const themColorValue = colors[colorKey];\n                if (themColorValue instanceof Array) {\n                    // todo\n                    // themColorValue.forEach((value: string,index) => {\n                    //     getIndexedColor(value, colorKey+`[${index}]`, inputColorText, themeName, similarIndexed)\n                    // })\n                } else {\n                    getIndexedColor(themColorValue, colorKey, inputColorText, themeName, similarIndexed);\n                }\n\n            });\n            const sortedSimilarIndexed = similarIndexed.sort((a, b) => {\n                return a.diff - b.diff;\n            });\n            const similarObj = sortedSimilarIndexed[0];\n            _similarColorsFromTheme.push(similarObj);\n            // _similarColorsFromTheme.push(sortedSimilarIndexed[1]);\n            // _similarColorsFromTheme.push(sortedSimilarIndexed[2]);\n            // _similarColorsFromTheme.push(sortedSimilarIndexed[3]);\n        });\n        setSimilarColorsFromTheme(_similarColorsFromTheme);\n\n        const similarIndexedPalette: ColorDiffWithPaletteItem[] = [];\n        const colorPaletteKeys = Object.keys(palette) as PaletteKeys[];\n        colorPaletteKeys.forEach((colorKey) => {\n            const paletteColor = colorFaultTolerance(palette[colorKey]);\n            if (paletteColor && inputColorText) {\n                const diff = diffColors(paletteColor, inputColorText);\n                const indexedColor = {\n                    keyInPalette: colorKey,\n                    Hex: ColorTranslator.toHEX(paletteColor),\n                    RGB: ColorTranslator.toRGB(paletteColor),\n                    HSL: ColorTranslator.toHSL(paletteColor),\n                    diff: diff,\n                    diffDes: deltaEDes(diff),\n                };\n                similarIndexedPalette.push(indexedColor);\n            }\n        });\n        const sortedSimilarIndexedPalette = similarIndexedPalette.sort((a, b) => {\n            return a.diff - b.diff;\n        });\n        const similarObjPalette = sortedSimilarIndexedPalette[0];\n        _similarColorsFromPalette.push(similarObjPalette);\n        _similarColorsFromPalette.push(sortedSimilarIndexedPalette[1]);\n        _similarColorsFromPalette.push(sortedSimilarIndexedPalette[3]);\n        _similarColorsFromPalette.push(sortedSimilarIndexedPalette[4]);\n        _similarColorsFromPalette.push(sortedSimilarIndexedPalette[5]);\n        _similarColorsFromPalette.push(sortedSimilarIndexedPalette[6]);\n        setSimilarColorsFromPalette(_similarColorsFromPalette);\n    };\n    const handleSimilarColor = () => {\n        getSimilarColor();\n    };\n    const handleChangeTextFrom = (text: string) => {\n        setInputText(text);\n        let beautiful = '';\n        switch (uglyType) {\n            case 'RGB':\n                beautiful = formatUglyStringToRGB(text);\n                break;\n            default:\n                beautiful = text;\n                break;\n        }\n        let _text = colorFaultTolerance(beautiful);\n        if (_text) {\n            setColorInput({\n                text: _text,\n                Hex: ColorTranslator.toHEX(_text),\n                RGB: ColorTranslator.toRGB(_text),\n                HSL: ColorTranslator.toHSL(_text),\n            });\n        } else {\n            setColorInput({\n                text: '',\n                Hex: '',\n                RGB: '',\n                HSL: ''\n            });\n        }\n    };\n\n    const handleKeyPress = ({nativeEvent}: NativeSyntheticEvent<TextInputKeyPressEventData>) => {\n        if (nativeEvent.key === 'Enter') {\n            getSimilarColor();\n        }\n    };\n\n\n    return (\n        <ScrollView>\n            <View style={styles.container}>\n                <Card titleMode=\"OUT\" title={st('colorInput')}>\n                    <Tab items={['Beautiful', 'RGB', 'Hex', 'HSL']}\n                         value={uglyType}\n                         onChange={(item) => {\n                             setUglyType(item);\n                         }}/>\n                    <Row paddingVertical=\"l\">\n                        <Col size={30}>\n                            <TextInput style={styles.input} value={inputText}\n                                       placeholder={st('inputAColorString')}\n                                       onChangeText={handleChangeTextFrom}\n                                       onKeyPress={handleKeyPress}\n                                       autoCapitalize=\"none\"\n                            />\n                        </Col>\n                        <Col size={2}/>\n                        <Col size={20}>\n                            <ButtonTO onPress={handleSimilarColor}>\n                                <InButtonText>{st('findSimilarColors')}</InButtonText>\n                            </ButtonTO>\n                        </Col>\n                    </Row>\n                    <ColorValuesCard item={colorInput}/>\n\n                </Card>\n                <Card titleMode=\"OUT\" title={st('similarColorFromPalette')}>\n                    {\n                        similarColorsFromPalette.map(similarColorItem => {\n                            return <View key={similarColorItem.keyInPalette}>\n                                <Row paddingVertical=\"xs\" style={styles.row}>\n                                    <Text>Diff</Text>\n                                    <Text>{similarColorItem.diff.toFixed(2)}</Text>\n                                </Row>\n                                <Row paddingVertical=\"xs\" style={styles.row}>\n                                    <Text>Diff Tip</Text>\n                                    <Text>{similarColorItem.diffDes}</Text>\n                                </Row>\n                                <Row paddingVertical=\"xs\" style={styles.row}>\n                                    <Text>Key</Text><CopyableText>{similarColorItem.keyInPalette}</CopyableText>\n                                </Row>\n                                <ColorValuesCard item={similarColorItem}/>\n                            </View>;\n                        })\n                    }\n                </Card>\n                <Card titleMode=\"OUT\" title={st('similarColorsFromThemes')}>\n                    {\n                        similarColorsFromTheme.map(similarColorItem => {\n                            return <View key={uuidV4()}>\n                                <Row paddingVertical=\"m\" style={styles.row}>\n                                    <Text>Diff</Text>\n                                    <Text>{similarColorItem.diff.toFixed(2)}</Text>\n                                </Row>\n                                <Row paddingVertical=\"m\" style={styles.row}>\n                                    <Text>Diff Tip</Text>\n                                    <Text>{similarColorItem.diffDes}</Text>\n                                </Row>\n                                <Row paddingVertical=\"m\" style={styles.row}>\n                                    <Text>Theme</Text><Text>{similarColorItem.themeName}</Text>\n                                </Row>\n                                <Row paddingVertical=\"m\" style={styles.row}>\n                                    <Text>Key</Text><CopyableText>{similarColorItem.keyInThemeColors}</CopyableText>\n                                </Row>\n                                <ColorValuesCard item={similarColorItem}/>\n                            </View>;\n                        })\n                    }\n                </Card>\n            </View>\n        </ScrollView>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}