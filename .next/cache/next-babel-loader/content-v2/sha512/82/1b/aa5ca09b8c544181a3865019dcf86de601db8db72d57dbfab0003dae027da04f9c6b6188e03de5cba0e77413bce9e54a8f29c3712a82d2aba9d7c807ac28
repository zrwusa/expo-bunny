{"ast":null,"code":"\"use strict\";exports.__esModule=true;exports.getRouteMatcher=getRouteMatcher;function getRouteMatcher(routeRegex){var re=routeRegex.re,groups=routeRegex.groups;return function(pathname){var routeMatch=re.exec(pathname);if(!routeMatch){return false;}var decode=function decode(param){try{return decodeURIComponent(param);}catch(_){var err=new Error('failed to decode param');err.code='DECODE_FAILED';throw err;}};var params={};Object.keys(groups).forEach(function(slugName){var g=groups[slugName];var m=routeMatch[g.pos];if(m!==undefined){params[slugName]=~m.indexOf('/')?m.split('/').map(function(entry){return decode(entry);}):g.repeat?[decode(m)]:decode(m);}});return params;};}","map":{"version":3,"sources":["../../../../../next-server/lib/router/utils/route-matcher.ts"],"names":["pathname","routeMatch","re","decode","param","decodeURIComponent","err","params","Object","slugName","g","groups","m","entry"],"mappings":"6EAEO,QAAA,CAAA,eAAA,CAAA,UAAA,CAAuE,CAC5E,GAAM,CAAA,EAAN,CAAA,UAAA,CAAM,EAAN,CAAM,MAAN,CAAA,UAAA,CAAM,MAAN,CACA,MAAQA,UAAAA,QAAD,CAAyC,CAC9C,GAAMC,CAAAA,UAAU,CAAGC,EAAE,CAAFA,IAAAA,CAAnB,QAAmBA,CAAnB,CACA,GAAI,CAAJ,UAAA,CAAiB,CACf,MAAA,MAAA,CAGF,IAAMC,CAAAA,MAAM,CAAIC,QAAVD,CAAAA,MAAUC,CAAAA,KAAD,CAAmB,CAChC,GAAI,CACF,MAAOC,CAAAA,kBAAkB,CAAzB,KAAyB,CAAzB,CACA,OAAA,CAAA,CAAU,CACV,GAAMC,CAAAA,GAA8B,CAAG,GAAA,CAAA,KAAA,CAAvC,wBAAuC,CAAvC,CAGAA,GAAG,CAAHA,IAAAA,CAAAA,eAAAA,CACA,KAAA,CAAA,GAAA,CAEH,CAVD,CAAA,CAWA,GAAMC,CAAAA,MAAkD,CAAxD,EAAA,CAEAC,MAAM,CAANA,IAAAA,CAAAA,MAAAA,EAAAA,OAAAA,CAA6BC,SAAAA,QAAD,CAAsB,CAChD,GAAMC,CAAAA,CAAC,CAAGC,MAAM,CAAhB,QAAgB,CAAhB,CACA,GAAMC,CAAAA,CAAC,CAAGX,UAAU,CAACS,CAAC,CAAtB,GAAoB,CAApB,CACA,GAAIE,CAAC,GAAL,SAAA,CAAqB,CACnBL,MAAM,CAANA,QAAM,CAANA,CAAmB,CAACK,CAAC,CAADA,OAAAA,CAAD,GAACA,CAAD,CACfA,CAAC,CAADA,KAAAA,CAAAA,GAAAA,EAAAA,GAAAA,CAAkBC,SAAAA,KAAD,QAAWV,CAAAA,MAAM,CADnB,KACmB,CAAjB,EAAjBS,CADe,CAEfF,CAAC,CAADA,MAAAA,CACA,CAACP,MAAM,CADPO,CACO,CAAP,CADAA,CAEAP,MAAM,CAJVI,CAIU,CAJVA,CAMH,CAVDC,CAAAA,EAWA,MAAA,CAAA,MAAA,CA9BF,CAAA,CAgCD","sourcesContent":["import { getRouteRegex } from './route-regex'\n\nexport function getRouteMatcher(routeRegex: ReturnType<typeof getRouteRegex>) {\n  const { re, groups } = routeRegex\n  return (pathname: string | null | undefined) => {\n    const routeMatch = re.exec(pathname!)\n    if (!routeMatch) {\n      return false\n    }\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch (_) {\n        const err: Error & { code?: string } = new Error(\n          'failed to decode param'\n        )\n        err.code = 'DECODE_FAILED'\n        throw err\n      }\n    }\n    const params: { [paramName: string]: string | string[] } = {}\n\n    Object.keys(groups).forEach((slugName: string) => {\n      const g = groups[slugName]\n      const m = routeMatch[g.pos]\n      if (m !== undefined) {\n        params[slugName] = ~m.indexOf('/')\n          ? m.split('/').map((entry) => decode(entry))\n          : g.repeat\n          ? [decode(m)]\n          : decode(m)\n      }\n    })\n    return params\n  }\n}\n"]},"metadata":{},"sourceType":"script"}