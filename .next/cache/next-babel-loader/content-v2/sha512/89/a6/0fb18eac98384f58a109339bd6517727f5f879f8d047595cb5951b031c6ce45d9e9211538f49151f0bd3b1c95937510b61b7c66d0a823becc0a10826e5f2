{"ast":null,"code":"import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{TypingAnimation}from'react-native-typing-animation';import{useUpdateLayoutEffect}from\"./hooks/useUpdateLayoutEffect\";import config from\"../../config\";import{useBunnyKit}from\"../../hooks/bunny-kit\";var makeStyles=function makeStyles(sizeLabor,themeLabor){var wp=sizeLabor.designsBasedOn.iphoneX.wp;var colors=themeLabor.theme.colors;return StyleSheet.create({container:{marginLeft:wp(8),width:wp(45),borderRadius:wp(15),backgroundColor:colors.backgroundA}});};var TypingIndicator=function TypingIndicator(_ref){var isTyping=_ref.isTyping;var _useBunnyKit=useBunnyKit(),sizeLabor=_useBunnyKit.sizeLabor,themeLabor=_useBunnyKit.themeLabor,wp=_useBunnyKit.wp;var styles=makeStyles(sizeLabor,themeLabor);var _React$useMemo=React.useMemo(function(){return{yCoords:new Animated.Value(wp(200)),heightScale:new Animated.Value(0),marginScale:new Animated.Value(0)};},[]),yCoords=_React$useMemo.yCoords,heightScale=_React$useMemo.heightScale,marginScale=_React$useMemo.marginScale;useUpdateLayoutEffect(function(){if(isTyping){slideIn();}else{slideOut();}},[isTyping]);var slideIn=function slideIn(){Animated.parallel([Animated.spring(yCoords,{toValue:0,useNativeDriver:config.useNativeDriver}),Animated.timing(heightScale,{toValue:wp(35),duration:250,useNativeDriver:config.useNativeDriver}),Animated.timing(marginScale,{toValue:wp(8),duration:250,useNativeDriver:config.useNativeDriver})]).start();};var slideOut=function slideOut(){Animated.parallel([Animated.spring(yCoords,{toValue:wp(200),useNativeDriver:config.useNativeDriver}),Animated.timing(heightScale,{toValue:0,duration:250,useNativeDriver:config.useNativeDriver}),Animated.timing(marginScale,{toValue:0,duration:250,useNativeDriver:config.useNativeDriver})]).start();};return React.createElement(Animated.View,{style:[styles.container,{transform:[{translateY:yCoords}],height:heightScale,marginBottom:marginScale}]},isTyping?React.createElement(TypingAnimation,{style:{marginLeft:wp(6),marginTop:wp(7.2,false)},dotRadius:wp(4),dotMargin:wp(5.5,false),dotColor:'rgba(0, 0, 0, 0.38)'}):null);};export default TypingIndicator;","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/components/BunnyChat/TypingIndicator.tsx"],"names":["makeStyles","wp","sizeLabor","colors","themeLabor","container","marginLeft","width","borderRadius","backgroundColor","backgroundA","TypingIndicator","isTyping","useBunnyKit","styles","yCoords","heightScale","marginScale","Animated","useUpdateLayoutEffect","slideIn","slideOut","toValue","useNativeDriver","config","duration","transform","translateY","height","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Animated, StyleSheet} from 'react-native';\nimport {TypingAnimation} from 'react-native-typing-animation';\nimport {useUpdateLayoutEffect} from './hooks/useUpdateLayoutEffect';\nimport config from '../../config';\nimport {SizeLabor, ThemeLabor} from '../../types';\nimport {useBunnyKit} from '../../hooks/bunny-kit';\n\nconst makeStyles = (sizeLabor: SizeLabor, themeLabor: ThemeLabor) => {\n    const {wp} = sizeLabor.designsBasedOn.iphoneX;\n    const {theme: {colors}} = themeLabor;\n    return StyleSheet.create({\n        container: {\n            marginLeft: wp(8),\n            width: wp(45),\n            borderRadius: wp(15),\n            backgroundColor: colors.backgroundA,\n        },\n    });\n};\n\nexport interface TypingIndicatorProps {\n    isTyping?: boolean;\n}\n\nconst TypingIndicator = ({isTyping}: TypingIndicatorProps) => {\n    const {sizeLabor, themeLabor, wp} = useBunnyKit();\n    const styles = makeStyles(sizeLabor, themeLabor);\n    const {yCoords, heightScale, marginScale} = React.useMemo(\n        () => ({\n            yCoords: new Animated.Value(wp(200)),\n            heightScale: new Animated.Value(0),\n            marginScale: new Animated.Value(0),\n        }),\n        [],\n    );\n\n    // on isTyping fire side effect\n    useUpdateLayoutEffect(() => {\n        if (isTyping) {\n            slideIn();\n        } else {\n            slideOut();\n        }\n    }, [isTyping]);\n\n    // side effect\n    const slideIn = () => {\n        Animated.parallel([\n            Animated.spring(yCoords, {\n                toValue: 0,\n                useNativeDriver: config.useNativeDriver,\n            }),\n            Animated.timing(heightScale, {\n                toValue: wp(35),\n                duration: 250,\n                useNativeDriver: config.useNativeDriver,\n            }),\n            Animated.timing(marginScale, {\n                toValue: wp(8),\n                duration: 250,\n                useNativeDriver: config.useNativeDriver,\n            }),\n        ]).start();\n    };\n\n    // side effect\n    const slideOut = () => {\n        Animated.parallel([\n            Animated.spring(yCoords, {\n                toValue: wp(200),\n                useNativeDriver: config.useNativeDriver,\n            }),\n            Animated.timing(heightScale, {\n                toValue: 0,\n                duration: 250,\n                useNativeDriver: config.useNativeDriver,\n            }),\n            Animated.timing(marginScale, {\n                toValue: 0,\n                duration: 250,\n                useNativeDriver: config.useNativeDriver,\n            }),\n        ]).start();\n    };\n    return (\n        <Animated.View\n            style={[\n                styles.container,\n                {\n                    transform: [\n                        {\n                            translateY: yCoords,\n                        },\n                    ],\n                    height: heightScale,\n                    marginBottom: marginScale,\n                },\n            ]}\n        >\n            {isTyping ? (\n                <TypingAnimation\n                    style={{marginLeft: wp(6), marginTop: wp(7.2, false)}}\n                    dotRadius={wp(4)}\n                    dotMargin={wp(5.5, false)}\n                    dotColor={'rgba(0, 0, 0, 0.38)'}\n                />\n            ) : null}\n        </Animated.View>\n    );\n};\n\n\nexport default TypingIndicator;\n"]},"metadata":{},"sourceType":"module"}