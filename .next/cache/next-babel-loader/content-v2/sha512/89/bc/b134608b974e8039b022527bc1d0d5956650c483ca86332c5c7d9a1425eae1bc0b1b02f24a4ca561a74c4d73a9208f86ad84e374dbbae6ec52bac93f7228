{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";var _this=this,_jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/containers/DraggableView/DraggableView.tsx\";import React,{useRef}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import config from\"../../config\";export var DraggableView=function DraggableView(){var pan=useRef(new Animated.ValueXY()).current;var panResponder=PanResponder.create({onStartShouldSetPanResponder:function onStartShouldSetPanResponder(){return true;},onPanResponderMove:Animated.event([null,{dx:pan.x,dy:pan.y}],{useNativeDriver:config.useNativeDriver}),onPanResponderRelease:function onPanResponderRelease(){Animated.spring(pan,{toValue:{x:0,y:0},useNativeDriver:config.useNativeDriver}).start();}});return React.createElement(Animated.View,_extends({},panResponder.panHandlers,{style:[pan.getLayout(),styles.box],__self:_this,__source:{fileName:_jsxFileName,lineNumber:26,columnNumber:9}}));};var styles=StyleSheet.create({box:{backgroundColor:'#61dafb',width:80,height:80,borderRadius:4}});","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/containers/DraggableView/DraggableView.tsx"],"names":["DraggableView","pan","useRef","Animated","panResponder","onStartShouldSetPanResponder","onPanResponderMove","dx","dy","y","useNativeDriver","config","onPanResponderRelease","toValue","x","styles","box","backgroundColor","width","height","borderRadius"],"mappings":"0KAAA,MAAA,CAAA,KAAA,EAAA,MAAA,KAAA,OAAA,C,mMAEA,MAAA,CAAA,MAAA,oBAEA,MAAO,IAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC/B,GAAMC,CAAAA,GAAG,CAAGC,MAAM,CAAC,GAAIC,CAAAA,QAAQ,CAAnBD,OAAO,EAAD,CAANA,CAAZ,OAAA,CAEA,GAAME,CAAAA,YAAY,CAAG,YAAY,CAAZ,MAAA,CAAoB,CACrCC,4BAA4B,CAAE,QAAA,CAAA,4BAAA,EAAA,CAAA,MAAA,KAAA,CADO,CAAA,CAErCC,kBAAkB,CAAE,QAAQ,CAAR,KAAA,CAAe,CAAA,IAAA,CAE/B,CACIC,EAAE,CAAEN,GAAG,CADX,CAAA,CAEIO,EAAE,CAAEP,GAAG,CAACQ,CAFZ,CAF+B,CAAf,CAMjB,CAACC,eAAe,CAAEC,MAAM,CAACD,eAAzB,CANiB,CAFiB,CASrCE,qBAAqB,CAAE,QAAA,CAAA,qBAAA,EAAM,CACzBT,QAAQ,CAARA,MAAAA,CAAAA,GAAAA,CAEI,CAACU,OAAO,CAAE,CAACC,CAAC,CAAF,CAAA,CAAOL,CAAC,CAAE,CAAV,CAAV,CAAwBC,eAAe,CAAEC,MAAM,CAACD,eAAhD,CAFJP,EAAAA,KAAAA,GAIH,CAdoC,CAApB,CAArB,CAiBA,MACI,CAAA,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA,CACQC,YAAY,CADpB,WAAA,CAAA,CAEI,KAAK,CAAE,CAACH,GAAG,CAAJ,SAACA,EAAD,CAAkBc,MAAM,CAFnC,GAEW,CAFX,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CADJ,CApBG,CAAA,CA4BP,GAAMA,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC7BC,GAAG,CAAE,CACDC,eAAe,CADd,SAAA,CAEDC,KAAK,CAFJ,EAAA,CAGDC,MAAM,CAHL,EAAA,CAIDC,YAAY,CAAE,CAJb,CADwB,CAAlB,CAAf","sourcesContent":["import React, {useRef} from 'react';\nimport {Animated, PanResponder, StyleSheet} from 'react-native';\nimport config from '../../config';\n\nexport const DraggableView = () => {\n    const pan = useRef(new Animated.ValueXY()).current;\n\n    const panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: () => true,\n        onPanResponderMove: Animated.event([\n            null,\n            {\n                dx: pan.x, // x,y are Animated.Value\n                dy: pan.y,\n            },\n        ], {useNativeDriver: config.useNativeDriver}),\n        onPanResponderRelease: () => {\n            Animated.spring(\n                pan, // Auto-multiplexed\n                {toValue: {x: 0, y: 0}, useNativeDriver: config.useNativeDriver} // Back to zero\n            ).start();\n        },\n    });\n\n    return (\n        <Animated.View\n            {...panResponder.panHandlers}\n            style={[pan.getLayout(), styles.box]}\n        />\n    );\n};\n\nconst styles = StyleSheet.create({\n    box: {\n        backgroundColor: '#61dafb',\n        width: 80,\n        height: 80,\n        borderRadius: 4,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}