{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect,useMemo,useState}from'react';import{InButtonText,LinearGradientButton,SwitchP,Text,TextInput,View}from\"../../components/UI\";import{useDispatch,useSelector}from'react-redux';import{saveDemoSagaFirebaseTodo}from\"../../store/actions\";import{getSharedStyles}from\"../../helpers\";import{Col,makeContainerStyles,Row}from\"../../containers\";import{useFirebaseConnect}from'react-redux-firebase';import{makeStyles}from\"./styles\";import{randomText}from\"../../utils\";import FlatList from\"react-native-web/dist/exports/FlatList\";import{shortenTFunctionKey}from\"../../providers/i18n-labor\";import{useBunnyKit}from\"../../hooks/bunny-kit\";export function DemoSagaFirebaseScreen(){var _useBunnyKit=useBunnyKit(),sizeLabor=_useBunnyKit.sizeLabor,themeLabor=_useBunnyKit.themeLabor,t=_useBunnyKit.t;var dispatch=useDispatch();useFirebaseConnect([{path:'todoList',queryParams:['limitToLast=100']}]);var todoList=useSelector(function(rootState){return rootState.firebaseState.ordered.todoList;});var st=shortenTFunctionKey(t,'screens.DemoSagaFirebase');var containerStyles=makeContainerStyles(sizeLabor,themeLabor);var styles=makeStyles(sizeLabor,themeLabor);var _getSharedStyles=getSharedStyles(sizeLabor,themeLabor),sharedStyles=_getSharedStyles.sharedStyles;var _useState=useState(\"text-\"+randomText(3)),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(Math.random()>0.5),_useState4=_slicedToArray(_useState3,2),done=_useState4[0],setDone=_useState4[1];var memorizedTodo=useMemo(function(){if(todoList&&todoList.length>0){return todoList.reverse();}else{return[];}},[todoList&&todoList.length]);useEffect(function(){});return React.createElement(View,{style:[containerStyles.Screen,sharedStyles.centralizeHorizontal]},React.createElement(View,{style:styles.todoContainer},React.createElement(Row,{paddingVertical:\"l\"},React.createElement(Col,null,React.createElement(TextInput,{value:text,onChangeText:function onChangeText(value){setText(value);}})),React.createElement(Col,{align:\"flex-end\"},React.createElement(SwitchP,{value:done,onValueChange:function onValueChange(value){setDone(value);}}))),React.createElement(LinearGradientButton,{onPress:function onPress(){dispatch(saveDemoSagaFirebaseTodo({text:text,done:done}));}},React.createElement(InButtonText,null,st('saveDemoSagaFirebaseTodo'))),React.createElement(View,{style:styles.table},React.createElement(View,null,React.createElement(Row,{paddingVertical:\"l\"},React.createElement(Col,null,React.createElement(Text,null,\"Text\")),React.createElement(Col,{align:\"flex-end\"},React.createElement(Text,null,\"Done\")))),memorizedTodo&&memorizedTodo.length>0?React.createElement(FlatList,{style:styles.flatList,data:todoList,renderItem:function renderItem(_ref){var item=_ref.item;return React.createElement(View,{key:item.key},React.createElement(Row,{paddingVertical:\"l\"},React.createElement(Col,null,React.createElement(Text,null,item.value.text)),React.createElement(Col,{align:\"flex-end\"},React.createElement(Text,null,item.value.done.toString()))));}}):null)));}","map":null,"metadata":{},"sourceType":"module"}