{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/components/Avatar/Avatar.tsx\";import React from'react';import Image from\"react-native-web/dist/exports/Image\";import{makeStyles}from\"./styles\";import{ImageUploader}from\"../ImageUploader\";import{useBunnyKit}from\"../../hooks/bunny-kit\";export function Avatar(props){var _useBunnyKit=useBunnyKit(),sizeLabor=_useBunnyKit.sizeLabor,themeLabor=_useBunnyKit.themeLabor,wp=_useBunnyKit.wp;var styles=makeStyles(sizeLabor,themeLabor);var size=props.size,source=props.source,style=props.style,_props$shouldUpload=props.shouldUpload,shouldUpload=_props$shouldUpload===void 0?false:_props$shouldUpload,uploaderProps=props.uploaderProps,_props$isBorder=props.isBorder,isBorder=_props$isBorder===void 0?true:_props$isBorder;var finalSize=size||'m';var sizeAvatarMap={xxs:wp(16),xs:wp(20),s:wp(26),m:wp(32),l:wp(40),xl:wp(56),xxl:wp(78)};var borderDiff=isBorder?wp(2):0;var borderWidth=isBorder?wp(1):0;return shouldUpload?React.createElement(ImageUploader,_extends({style:[styles.Avatar,{borderWidth:borderWidth,width:sizeAvatarMap[finalSize],height:sizeAvatarMap[finalSize],borderRadius:sizeAvatarMap[finalSize]/2}],imageStyle:[{width:sizeAvatarMap[finalSize]-borderDiff,height:sizeAvatarMap[finalSize]-borderDiff,borderRadius:sizeAvatarMap[finalSize]/2},style],width:sizeAvatarMap[finalSize]-borderDiff,height:sizeAvatarMap[finalSize]-borderDiff,source:source},uploaderProps,{__self:this,__source:{fileName:_jsxFileName,lineNumber:40,columnNumber:9}})):React.createElement(Image,{style:[styles.Avatar,{borderWidth:borderWidth,width:sizeAvatarMap[finalSize],height:sizeAvatarMap[finalSize],borderRadius:sizeAvatarMap[finalSize]/2},style],width:sizeAvatarMap[finalSize],height:sizeAvatarMap[finalSize],source:source,__self:this,__source:{fileName:_jsxFileName,lineNumber:57,columnNumber:11}});}","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/components/Avatar/Avatar.tsx"],"names":["sizeLabor","themeLabor","wp","useBunnyKit","styles","makeStyles","size","source","style","shouldUpload","uploaderProps","isBorder","props","finalSize","sizeAvatarMap","xxs","xs","s","m","l","xl","xxl","borderDiff","borderWidth","width","height","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Image, ImageSourcePropType, ImageStyle, ImageURISource, StyleProp} from 'react-native';\nimport {makeStyles} from './styles';\nimport {SizeKeys} from '../../types';\nimport {ImageUploader, ImageUploaderProps} from '../ImageUploader';\nimport {useBunnyKit} from '../../hooks/bunny-kit';\n\nexport interface AvatarProps {\n    source: ImageSourcePropType,\n    size?: SizeKeys,\n    style?: StyleProp<ImageStyle>,\n    shouldUpload?: boolean,\n    uploaderProps?: ImageUploaderProps,\n    isBorder?: boolean\n}\n\nexport type SizeAvatarMap = {\n    [key in SizeKeys]: number\n}\n\nexport function Avatar(props: AvatarProps) {\n    const {sizeLabor, themeLabor, wp} = useBunnyKit();\n    const styles = makeStyles(sizeLabor, themeLabor);\n    const {size, source, style, shouldUpload = false, uploaderProps, isBorder = true} = props;\n    const finalSize: SizeKeys = size || 'm';\n    const sizeAvatarMap: SizeAvatarMap = {\n        xxs: wp(16),\n        xs: wp(20),\n        s: wp(26),\n        m: wp(32),\n        l: wp(40),\n        xl: wp(56),\n        xxl: wp(78)\n    };\n    const borderDiff: number = isBorder ? wp(2) : 0;\n    const borderWidth: number = isBorder ? wp(1) : 0;\n\n    return shouldUpload\n        ?\n        <ImageUploader\n            style={[styles.Avatar, {\n                borderWidth,\n                width: sizeAvatarMap[finalSize],\n                height: sizeAvatarMap[finalSize],\n                borderRadius: sizeAvatarMap[finalSize] / 2,\n            }]}\n            imageStyle={[{\n                width: sizeAvatarMap[finalSize] - borderDiff,\n                height: sizeAvatarMap[finalSize] - borderDiff,\n                borderRadius: sizeAvatarMap[finalSize] / 2,\n            }, style]}\n            width={sizeAvatarMap[finalSize] - borderDiff}\n            height={sizeAvatarMap[finalSize] - borderDiff}\n            source={source as ImageURISource}\n            {...uploaderProps}\n        />\n        : <Image\n            style={[styles.Avatar, {\n                borderWidth,\n                width: sizeAvatarMap[finalSize],\n                height: sizeAvatarMap[finalSize],\n                borderRadius: sizeAvatarMap[finalSize] / 2,\n            }, style]}\n            width={sizeAvatarMap[finalSize]}\n            height={sizeAvatarMap[finalSize]}\n            source={source}/>;\n}\n"]},"metadata":{},"sourceType":"module"}