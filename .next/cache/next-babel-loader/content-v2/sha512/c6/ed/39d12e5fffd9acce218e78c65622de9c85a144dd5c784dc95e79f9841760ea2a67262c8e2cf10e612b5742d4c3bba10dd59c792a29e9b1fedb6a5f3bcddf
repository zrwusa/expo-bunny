{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useEffect,useRef,useState}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Keyboard from\"react-native-web/dist/exports/Keyboard\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import{makeStyles}from\"./styles\";import{IcoMoon,Text,TextInput,TouchableOpacity,View}from\"../UI\";import{useBunnyKit}from\"../../hooks/bunny-kit\";export var FollowUpSearchBar=function FollowUpSearchBar(props){var _useBunnyKit=useBunnyKit(),sizeLabor=_useBunnyKit.sizeLabor,themeLabor=_useBunnyKit.themeLabor,wp=_useBunnyKit.wp;var scrollYValue=props.scrollYValue,defaultKeywords=props.defaultKeywords,onSearch=props.onSearch;var styles=makeStyles(sizeLabor,themeLabor);var colors=themeLabor.theme.colors;var zi=sizeLabor.ms.zi;var clampedScroll=Animated.diffClamp(Animated.add(scrollYValue.interpolate({inputRange:[0,10],outputRange:[0,1],extrapolateLeft:'clamp'}),new Animated.Value(0)),0,50);var searchBarTranslate=clampedScroll.interpolate({inputRange:[0,50],outputRange:[0,-250],extrapolate:'clamp'});var searchBarOpacity=clampedScroll.interpolate({inputRange:[0,6],outputRange:[1,0],extrapolate:'clamp'});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isFocus=_useState2[0],setIsFocus=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchText=_useState4[0],setSearchText=_useState4[1];var defaultWidth=wp(320);var focusWidth=wp(290);var invokeSearch=function invokeSearch(){return _regeneratorRuntime.async(function invokeSearch$(_context){while(1){switch(_context.prev=_context.next){case 0:if(onSearch){onSearch(searchText);}case 1:case\"end\":return _context.stop();}}},null,null,null,Promise);};var handleFocus=function handleFocus(){setIsFocus(true);};var handleBlur=function handleBlur(){setIsFocus(false);};var handleInputTextChange=function handleInputTextChange(value){setSearchText(value);};var handleKeyPress=function handleKeyPress(_ref){var nativeEvent=_ref.nativeEvent;if(nativeEvent.key==='Enter'){invokeSearch().then();}};var handleCancel=function handleCancel(){Keyboard.dismiss();setSearchText('');};var handleEndEditing=function handleEndEditing(){return _regeneratorRuntime.async(function handleEndEditing$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:invokeSearch().then();case 1:case\"end\":return _context2.stop();}}},null,null,null,Promise);};var handleCameraIconPress=function handleCameraIconPress(){};var _useState5=useState(defaultWidth),_useState6=_slicedToArray(_useState5,2),toWidth=_useState6[0],setToWidth=_useState6[1];var widthAnim=useRef(new Animated.Value(defaultWidth)).current;useEffect(function(){if(defaultKeywords&&defaultKeywords.length>0){setSearchText(defaultKeywords.join(' ').toString());}},[JSON.stringify(defaultKeywords)]);useEffect(function(){var timingAnimConfig={toValue:toWidth,duration:300,useNativeDriver:false};Animated.timing(widthAnim,timingAnimConfig).start();},[toWidth]);useEffect(function(){if(isFocus){setToWidth(focusWidth);}else{setToWidth(defaultWidth);}},[isFocus]);return React.createElement(SafeAreaView,{style:{zIndex:zi.s}},React.createElement(Animated.View,{style:[styles.container,{transform:[{translateY:searchBarTranslate}],opacity:searchBarOpacity}]},React.createElement(Animated.View,{style:{width:widthAnim}},React.createElement(TextInput,{placeholder:\"Search\",style:[styles.formField],placeholderTextColor:colors.placeholder,value:searchText,onChangeText:handleInputTextChange,onFocus:handleFocus,onBlur:handleBlur,onKeyPress:handleKeyPress,onEndEditing:handleEndEditing,returnKeyType:\"done\"})),React.createElement(View,{style:styles.barRight},isFocus?React.createElement(TouchableOpacity,{onPress:handleCancel},React.createElement(Text,null,\"Cancel\")):React.createElement(IcoMoon,{name:\"image\",size:20,color:colors.text,onPress:handleCameraIconPress}))));};","map":null,"metadata":{},"sourceType":"module"}