{"ast":null,"code":"var _s=$RefreshSig$();import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/screens/DemoSagaFirebase/DemoSagaFirebase.tsx\";import React,{useEffect,useMemo,useState}from'react';import{InButtonText,LinearGradientButton,SwitchP,Text,TextInput,View}from\"../../components/UI\";import{useDispatch,useSelector}from'react-redux';import{saveDemoSagaFirebaseTodo}from\"../../store/actions\";import{getSharedStyles}from\"../../helpers\";import{Col,makeContainerStyles,Row}from\"../../containers\";import{useFirebaseConnect}from'react-redux-firebase';import{makeStyles}from\"./styles\";import{randomText}from\"../../utils\";import FlatList from\"react-native-web/dist/exports/FlatList\";import{shortenTFunctionKey}from\"../../providers/i18n-labor\";import{useBunnyKit}from\"../../hooks/bunny-kit\";export function DemoSagaFirebaseScreen(){_s();var _this=this;var _useBunnyKit=useBunnyKit(),sizeLabor=_useBunnyKit.sizeLabor,themeLabor=_useBunnyKit.themeLabor,t=_useBunnyKit.t;var dispatch=useDispatch();useFirebaseConnect([{path:'todoList',queryParams:['limitToLast=100']}]);var todoList=useSelector(function(rootState){return rootState.firebaseState.ordered.todoList;});var st=shortenTFunctionKey(t,'screens.DemoSagaFirebase');var containerStyles=makeContainerStyles(sizeLabor,themeLabor);var styles=makeStyles(sizeLabor,themeLabor);var _getSharedStyles=getSharedStyles(sizeLabor,themeLabor),sharedStyles=_getSharedStyles.sharedStyles;var _useState=useState(\"text-\"+randomText(3)),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(Math.random()>0.5),_useState4=_slicedToArray(_useState3,2),done=_useState4[0],setDone=_useState4[1];var memorizedTodo=useMemo(function(){if(todoList&&todoList.length>0){return todoList.reverse();}else{return[];}},[todoList&&todoList.length]);useEffect(function(){});return React.createElement(View,{style:[containerStyles.Screen,sharedStyles.centralizeHorizontal],__self:this,__source:{fileName:_jsxFileName,lineNumber:49,columnNumber:9}},React.createElement(View,{style:styles.todoContainer,__self:this,__source:{fileName:_jsxFileName,lineNumber:50,columnNumber:13}},React.createElement(Row,{paddingVertical:\"l\",__self:this,__source:{fileName:_jsxFileName,lineNumber:51,columnNumber:17}},React.createElement(Col,{__self:this,__source:{fileName:_jsxFileName,lineNumber:52,columnNumber:21}},React.createElement(TextInput,{value:text,onChangeText:function onChangeText(value){setText(value);},__self:this,__source:{fileName:_jsxFileName,lineNumber:53,columnNumber:25}})),React.createElement(Col,{align:\"flex-end\",__self:this,__source:{fileName:_jsxFileName,lineNumber:57,columnNumber:21}},React.createElement(SwitchP,{value:done,onValueChange:function onValueChange(value){setDone(value);},__self:this,__source:{fileName:_jsxFileName,lineNumber:58,columnNumber:25}}))),React.createElement(LinearGradientButton,{onPress:function onPress(){dispatch(saveDemoSagaFirebaseTodo({text:text,done:done}));},__self:this,__source:{fileName:_jsxFileName,lineNumber:65,columnNumber:17}},React.createElement(InButtonText,{__self:this,__source:{fileName:_jsxFileName,lineNumber:71,columnNumber:21}},st('saveDemoSagaFirebaseTodo'))),React.createElement(View,{style:styles.table,__self:this,__source:{fileName:_jsxFileName,lineNumber:73,columnNumber:17}},React.createElement(View,{__self:this,__source:{fileName:_jsxFileName,lineNumber:74,columnNumber:21}},React.createElement(Row,{paddingVertical:\"l\",__self:this,__source:{fileName:_jsxFileName,lineNumber:75,columnNumber:25}},React.createElement(Col,{__self:this,__source:{fileName:_jsxFileName,lineNumber:76,columnNumber:29}},React.createElement(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:77,columnNumber:33}},\"Text\")),React.createElement(Col,{align:\"flex-end\",__self:this,__source:{fileName:_jsxFileName,lineNumber:79,columnNumber:29}},React.createElement(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:80,columnNumber:33}},\"Done\")))),memorizedTodo&&memorizedTodo.length>0?React.createElement(FlatList,{style:styles.flatList,data:todoList,renderItem:function renderItem(_ref){var item=_ref.item;return React.createElement(View,{key:item.key,__self:_this,__source:{fileName:_jsxFileName,lineNumber:91,columnNumber:44}},React.createElement(Row,{paddingVertical:\"l\",__self:_this,__source:{fileName:_jsxFileName,lineNumber:92,columnNumber:41}},React.createElement(Col,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:93,columnNumber:45}},React.createElement(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:94,columnNumber:49}},item.value.text)),React.createElement(Col,{align:\"flex-end\",__self:_this,__source:{fileName:_jsxFileName,lineNumber:96,columnNumber:45}},React.createElement(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:97,columnNumber:49}},item.value.done.toString()))));},__self:this,__source:{fileName:_jsxFileName,lineNumber:86,columnNumber:31}}):null)));}_s(DemoSagaFirebaseScreen,\"FQvpBN9Vh2Xmzp3ucwOI63oZBns=\",false,function(){return[useBunnyKit,useDispatch,useFirebaseConnect,useSelector];});_c=DemoSagaFirebaseScreen;var _c;$RefreshReg$(_c,\"DemoSagaFirebaseScreen\");","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/screens/DemoSagaFirebase/DemoSagaFirebase.tsx"],"names":["sizeLabor","themeLabor","t","useBunnyKit","dispatch","useDispatch","useFirebaseConnect","path","queryParams","todoList","useSelector","rootState","st","shortenTFunctionKey","containerStyles","makeContainerStyles","styles","makeStyles","sharedStyles","getSharedStyles","text","setText","useState","randomText","done","setDone","Math","memorizedTodo","useMemo","useEffect","saveDemoSagaFirebaseTodo","item"],"mappings":"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","sourcesContent":["import React, {useEffect, useMemo, useState} from 'react';\nimport {InButtonText, LinearGradientButton, SwitchP, Text, TextInput, View} from '../../components/UI';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {saveDemoSagaFirebaseTodo} from '../../store/actions';\nimport {RootState} from '../../types';\nimport {getSharedStyles} from '../../helpers';\nimport {Col, makeContainerStyles, Row} from '../../containers';\nimport {useFirebaseConnect} from 'react-redux-firebase';\nimport {makeStyles} from './styles';\nimport {randomText} from '../../utils';\nimport {FlatList} from 'react-native';\nimport {shortenTFunctionKey} from '../../providers/i18n-labor';\nimport {useBunnyKit} from '../../hooks/bunny-kit';\n\n\nexport function DemoSagaFirebaseScreen() {\n    const {sizeLabor, themeLabor, t} = useBunnyKit();\n    const dispatch = useDispatch();\n    useFirebaseConnect([{path: 'todoList', queryParams: ['limitToLast=100']}]);\n    const todoList = useSelector((rootState: RootState) => rootState.firebaseState.ordered.todoList);\n    const st = shortenTFunctionKey(t, 'screens.DemoSagaFirebase');\n    const containerStyles = makeContainerStyles(sizeLabor, themeLabor);\n    const styles = makeStyles(sizeLabor, themeLabor);\n    const {sharedStyles} = getSharedStyles(sizeLabor, themeLabor);\n    const [text, setText] = useState(`text-${randomText(3)}`);\n    const [done, setDone] = useState(Math.random() > 0.5);\n\n    const memorizedTodo = useMemo(() => {\n        if (todoList && todoList.length > 0) {\n            return todoList.reverse();\n        } else {\n            return [];\n        }\n    }, [todoList && todoList.length]);\n    useEffect(() => {\n        // async function storeHighScore(userId: string, score: number) {\n        //     await firebase\n        //         .database()\n        //         .ref('users/' + userId)\n        //         .set({\n        //             highscore: score,\n        //         });\n        // }\n        //\n        // storeHighScore('001', 200)\n        //     .then()\n    });\n    return (\n        <View style={[containerStyles.Screen, sharedStyles.centralizeHorizontal]}>\n            <View style={styles.todoContainer}>\n                <Row paddingVertical=\"l\">\n                    <Col>\n                        <TextInput value={text} onChangeText={(value) => {\n                            setText(value);\n                        }}/>\n                    </Col>\n                    <Col align=\"flex-end\">\n                        <SwitchP value={done} onValueChange={(value) => {\n                            setDone(value);\n                        }}/>\n                    </Col>\n                </Row>\n\n\n                <LinearGradientButton onPress={() => {\n                    dispatch(saveDemoSagaFirebaseTodo({\n                        text,\n                        done\n                    }));\n                }}>\n                    <InButtonText>{st('saveDemoSagaFirebaseTodo')}</InButtonText>\n                </LinearGradientButton>\n                <View style={styles.table}>\n                    <View>\n                        <Row paddingVertical=\"l\">\n                            <Col>\n                                <Text>Text</Text>\n                            </Col>\n                            <Col align=\"flex-end\">\n                                <Text>Done</Text>\n                            </Col>\n                        </Row>\n                    </View>\n                    {\n                        memorizedTodo && memorizedTodo.length > 0\n                            ? <FlatList\n                                style={styles.flatList}\n                                data={todoList}\n                                renderItem={({item}) => {\n\n                                    return <View key={item.key}>\n                                        <Row paddingVertical=\"l\">\n                                            <Col>\n                                                <Text>{item.value.text}</Text>\n                                            </Col>\n                                            <Col align=\"flex-end\">\n                                                <Text>{item.value.done.toString()}</Text>\n                                            </Col>\n                                        </Row>\n                                    </View>;\n                                }}\n                            />\n                            : null\n                    }\n                </View>\n            </View>\n        </View>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}