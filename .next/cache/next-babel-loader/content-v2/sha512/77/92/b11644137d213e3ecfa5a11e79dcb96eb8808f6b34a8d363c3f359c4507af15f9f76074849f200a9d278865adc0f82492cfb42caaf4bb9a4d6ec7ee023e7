{"ast":null,"code":"import{useLayoutEffect,useRef}from'react';export function useUpdateLayoutEffect(effect){var dependencies=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var isInitialMount=useRef(true);useLayoutEffect(function(){if(isInitialMount.current){isInitialMount.current=false;}else{effect();}},dependencies);}","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/components/BunnyChat/hooks/useUpdateLayoutEffect.ts"],"names":["dependencies","isInitialMount","useRef","useLayoutEffect","effect"],"mappings":"AAAA,OAAA,eAAA,CAAA,MAAA,KAAA,OAAA,CAQA,MAAO,SAAA,CAAA,qBAAA,CAAA,MAAA,CAGL,CAAA,GADEA,CAAAA,YACF,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,EAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CADwB,EACxB,CACE,GAAMC,CAAAA,cAAc,CAAGC,MAAM,CAA7B,IAA6B,CAA7B,CAEAC,eAAe,CAAC,UAAM,CAClB,GAAIF,cAAc,CAAlB,OAAA,CAA4B,CACxBA,cAAc,CAAdA,OAAAA,CAAAA,KAAAA,CADJ,CAAA,IAEO,CACHG,MAAM,GACT,CALU,CAAA,CAAfD,YAAe,CAAfA,CAOH","sourcesContent":["import {useLayoutEffect, useRef} from 'react';\n\n/**\n * A custom useEffect hook that only triggers on updates, not on initial mount\n * Idea stolen from: https://stackoverflow.com/a/55075818/1526448\n * @param {()=>void} effect the function to call\n * @param {Array<any>} dependencies the state(s) that fires the update\n */\nexport function useUpdateLayoutEffect(\n    effect: () => void,\n    dependencies: any[] = [],\n) {\n    const isInitialMount = useRef(true);\n\n    useLayoutEffect(() => {\n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n        } else {\n            effect();\n        }\n    }, dependencies);\n}\n"]},"metadata":{},"sourceType":"module"}