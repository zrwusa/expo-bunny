{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/components/BunnyChat/Send.tsx\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import{withBunnyKit}from\"../../hooks/bunny-kit\";var makeStyles=function makeStyles(sizeLabor,themeLabor){var wp=sizeLabor.designsBasedOn.iphoneX.wp;var colors=themeLabor.theme.colors;return StyleSheet.create({container:{height:wp(44),justifyContent:'flex-end'},text:{color:colors.accent,fontWeight:'600',fontSize:wp(17),backgroundColor:colors.transparent,marginBottom:wp(12),marginLeft:wp(10),marginRight:wp(10)}});};var Send=function(_Component){_inherits(Send,_Component);var _super=_createSuper(Send);function Send(){var _this;_classCallCheck(this,Send);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.handleOnPress=function(){var _this$props=_this.props,text=_this$props.text,onSend=_this$props.onSend;if(text&&onSend){onSend({text:text.trim()},true);}};return _this;}_createClass(Send,[{key:\"render\",value:function render(){var _this$props2=this.props,text=_this$props2.text,sendContainerStyle=_this$props2.sendContainerStyle,children=_this$props2.children,sendTextStyle=_this$props2.sendTextStyle,sendLabel=_this$props2.sendLabel,alwaysShowSend=_this$props2.alwaysShowSend,disabled=_this$props2.disabled,sendButtonProps=_this$props2.sendButtonProps;if(alwaysShowSend||text&&text.trim().length>0){var _this$props$bunnyKit=this.props.bunnyKit,sizeLabor=_this$props$bunnyKit.sizeLabor,themeLabor=_this$props$bunnyKit.themeLabor;var styles=makeStyles(sizeLabor,themeLabor);return React.createElement(TouchableOpacity,_extends({testID:\"send\",accessible:true,accessibilityLabel:\"send\",style:[styles.container,sendContainerStyle],onPress:this.handleOnPress,accessibilityTraits:\"button\",disabled:disabled},sendButtonProps,{__self:this,__source:{fileName:_jsxFileName,lineNumber:88,columnNumber:17}}),React.createElement(View,{__self:this,__source:{fileName:_jsxFileName,lineNumber:99,columnNumber:21}},children||React.createElement(Text,{style:[styles.text,sendTextStyle],__self:this,__source:{fileName:_jsxFileName,lineNumber:100,columnNumber:38}},sendLabel)));}return React.createElement(View,{__self:this,__source:{fileName:_jsxFileName,lineNumber:105,columnNumber:16}});}}]);return Send;}(Component);Send.defaultProps={text:'',onSend:function onSend(){},sendLabel:'Send',sendContainerStyle:{},sendTextStyle:{},children:null,alwaysShowSend:false,disabled:false,sendButtonProps:undefined};export default withBunnyKit(Send);","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/components/BunnyChat/Send.tsx"],"names":["makeStyles","wp","sizeLabor","colors","themeLabor","container","height","justifyContent","text","color","fontWeight","fontSize","backgroundColor","marginBottom","marginLeft","marginRight","Send","Component","defaultProps","onSend","sendLabel","sendContainerStyle","sendTextStyle","children","alwaysShowSend","disabled","sendButtonProps","undefined","handleOnPress","styles","withBunnyKit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n    StyleProp,\n    StyleSheet,\n    Text,\n    TextStyle,\n    TouchableOpacity,\n    TouchableOpacityProps,\n    View,\n    ViewStyle,\n} from 'react-native';\nimport {IMessage} from './types';\nimport {SizeLabor, ThemeLabor} from '../../types';\nimport {WithBunnyKit, withBunnyKit} from '../../hooks/bunny-kit';\n\nconst makeStyles = (sizeLabor: SizeLabor, themeLabor: ThemeLabor) => {\n    const {wp} = sizeLabor.designsBasedOn.iphoneX;\n    const {theme: {colors}} = themeLabor;\n    return StyleSheet.create({\n        container: {\n            height: wp(44),\n            justifyContent: 'flex-end',\n        },\n        text: {\n            color: colors.accent,\n            fontWeight: '600',\n            fontSize: wp(17),\n            backgroundColor: colors.transparent,\n            marginBottom: wp(12),\n            marginLeft: wp(10),\n            marginRight: wp(10),\n        },\n    });\n};\n\nexport interface SendProps<TMessage extends IMessage> {\n    text?: string;\n    sendLabel?: string;\n    sendContainerStyle?: StyleProp<ViewStyle>;\n    sendTextStyle?: StyleProp<TextStyle>;\n    children?: React.ReactNode;\n    alwaysShowSend?: boolean;\n    disabled?: boolean;\n    sendButtonProps?: Partial<TouchableOpacityProps>;\n\n    onSend?(\n        messages: TMessage | TMessage[],\n        shouldResetInputToolbar: boolean,\n    ): void;\n}\n\nclass Send<TMessage extends IMessage> extends Component<SendProps<TMessage> & WithBunnyKit> {\n    static defaultProps = {\n        text: '',\n        onSend: () => {\n        },\n        sendLabel: 'Send',\n        sendContainerStyle: {},\n        sendTextStyle: {},\n        children: null,\n        alwaysShowSend: false,\n        disabled: false,\n        sendButtonProps: undefined,\n    };\n\n    handleOnPress = () => {\n        const {text, onSend} = this.props;\n        if (text && onSend) {\n            onSend({text: text.trim()} as TMessage, true);\n        }\n    };\n\n    render() {\n        const {\n            text,\n            sendContainerStyle,\n            children,\n            sendTextStyle,\n            sendLabel,\n            alwaysShowSend,\n            disabled,\n            sendButtonProps,\n        } = this.props;\n        if (alwaysShowSend || (text && text.trim().length > 0)) {\n            const {bunnyKit: {sizeLabor, themeLabor}} = this.props;\n            const styles = makeStyles(sizeLabor, themeLabor);\n            return (\n                <TouchableOpacity\n                    testID=\"send\"\n                    accessible\n                    accessibilityLabel=\"send\"\n                    style={[styles.container, sendContainerStyle]}\n                    onPress={this.handleOnPress}\n                    // @ts-ignore\n                    accessibilityTraits=\"button\"\n                    disabled={disabled}\n                    {...sendButtonProps}\n                >\n                    <View>\n                        {children || <Text style={[styles.text, sendTextStyle]}>{sendLabel}</Text>}\n                    </View>\n                </TouchableOpacity>\n            );\n        }\n        return <View/>;\n    }\n}\n\nexport default withBunnyKit(Send);\n"]},"metadata":{},"sourceType":"module"}