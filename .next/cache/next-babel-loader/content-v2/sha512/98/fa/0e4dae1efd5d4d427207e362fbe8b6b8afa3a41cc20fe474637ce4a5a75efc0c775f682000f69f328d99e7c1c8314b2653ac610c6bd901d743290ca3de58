{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import axios from'axios';import{getApiInstanceConfig}from\"./helpers\";import{checkAuthAPIProtocol}from\"./api-protocols\";export var apiAuth=axios.create(getApiInstanceConfig('auth'));apiAuth.interceptors.request.use(function _callee(config){return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:config.headers['Content-Type']='application/json';return _context.abrupt(\"return\",config);case 2:case\"end\":return _context.stop();}}},null,null,null,Promise);},function _callee2(error){return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",Promise.reject(error));case 1:case\"end\":return _context2.stop();}}},null,null,null,Promise);});apiAuth.interceptors.response.use(function(response){checkAuthAPIProtocol(response.data);return response;},function _callee3(error){var response,request;return _regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:response=error.response,request=error.request;if(!response){_context3.next=6;break;}checkAuthAPIProtocol(response.data);return _context3.abrupt(\"return\",response);case 6:if(!request){_context3.next=10;break;}throw error;case 10:throw error;case 11:case\"end\":return _context3.stop();}}},null,null,null,Promise);});export default apiAuth;","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/helpers/auth-api.ts"],"names":["apiAuth","axios","getApiInstanceConfig","config","Promise","checkAuthAPIProtocol","response","request","error"],"mappings":"4DAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CAEA,OAAA,oBAAA,iBACA,OAAA,oBAAA,uBAEA,MAAO,IAAMA,CAAAA,OAAO,CAAGC,KAAK,CAALA,MAAAA,CAAaC,oBAAoB,CAAjD,MAAiD,CAAjCD,CAAhB,CAEPD,OAAO,CAAPA,YAAAA,CAAAA,OAAAA,CAAAA,GAAAA,CACI,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,OAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,EAAA,IAAA,EAAA,CACIG,MAAM,CAANA,OAAAA,CAAAA,cAAAA,EAAAA,kBAAAA,CADJ,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EAAA,CAAA,IAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CADJH,CAAAA,CAKI,QAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,QAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,OAAA,SAAA,CAAA,IAAA,CAAA,SAAA,CAAA,IAAA,EAAA,IAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,QAAA,CACWI,OAAO,CAAPA,MAAAA,CADX,KACWA,CADX,CAAA,CAAA,IAAA,EAAA,CAAA,IAAA,KAAA,CAAA,MAAA,CAAA,SAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CALJJ,CAAAA,EASAA,OAAO,CAAPA,YAAAA,CAAAA,QAAAA,CAAAA,GAAAA,CACI,SAAA,QAAA,CAAmD,CAE/CK,oBAAoB,CAACC,QAAQ,CAA7BD,IAAoB,CAApBA,CACA,MAAA,CAAA,QAAA,CAJRL,CAAAA,CAMI,QAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,QAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,OAAA,SAAA,CAAA,IAAA,CAAA,SAAA,CAAA,IAAA,EAAA,IAAA,EAAA,CACWM,QADX,CACgCE,KADhC,CAAA,QACWF,CAAUC,OADrB,CACgCC,KADhC,CAAA,OACWF,CADX,GAAA,CAAA,QAAA,CAAA,CAAA,SAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAIQD,oBAAoB,CAACC,QAAQ,CAA7BD,IAAoB,CAApBA,CAJR,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,IAAA,EAAA,CAAA,GAAA,CAAA,OAAA,CAAA,CAAA,SAAA,CAAA,IAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,IAAA,GAAA,CAAA,KAAA,CAAA,KAAA,CAAA,IAAA,GAAA,CAAA,IAAA,KAAA,CAAA,MAAA,CAAA,SAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CANJL,CAAAA,EAqBA,cAAA,CAAA,OAAA","sourcesContent":["import axios, {AxiosResponse} from 'axios';\nimport {AuthAPIProtocol} from '../types';\nimport {getApiInstanceConfig} from './helpers';\nimport {checkAuthAPIProtocol} from './api-protocols';\n\nexport const apiAuth = axios.create(getApiInstanceConfig('auth'));\n\napiAuth.interceptors.request.use(\n    async (config) => {\n        config.headers['Content-Type'] = 'application/json';\n        return config;\n    },\n    async error => {\n        return Promise.reject(error);\n    });\n\napiAuth.interceptors.response.use(\n    (response: AxiosResponse<AuthAPIProtocol<any>>) => {\n        // status 200-300\n        checkAuthAPIProtocol(response.data);\n        return response;\n    },\n    async (error) => {\n        const {response, request} = error;\n        if (response) {\n            // status 300-600 The request was made and the server responded with a status code that falls out of the range of 2xx\n            checkAuthAPIProtocol(response.data);\n            return response;\n        } else if (request) {\n            // status 100-200 timeout The request was made but no response was received, `error.request` is an instance of XMLHttpRequest in the browser and an instance of http.ClientRequest in Node.js\n            throw error;\n        } else {\n            // Something happened in setting up the request and triggered an error\n            throw error;\n        }\n    });\n\nexport default apiAuth;\n"]},"metadata":{},"sourceType":"module"}