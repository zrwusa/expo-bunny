{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/screens/DemoMap/DemoMap.tsx\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import _regeneratorRuntime from\"@babel/runtime/regenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Component,createRef}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import{Image,Text,TouchableOpacity,View}from\"../../components/UI\";import*as Location from'expo-location';import{collectSysError as _collectSysError,getNearbyFilms as _getNearbyFilms,restoreRegion as _restoreRegion}from\"../../store/actions\";import{connect}from'react-redux';import MapView,{PROVIDER_DEFAULT}from'react-native-maps';import BunnyConstants from\"../../constants/constants\";import makeStyles,{getCardSize}from\"./styles\";import{makeContainerStyles}from\"../../containers\";import config from\"../../config\";import{withBunnyKit}from\"../../hooks/bunny-kit\";var _ref=MapView,Marker=_ref.Marker;var mapStateToProps=function mapStateToProps(rootState){return _objectSpread({},rootState.demoMapState);};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getNearbyFilms:function getNearbyFilms(reqParams){return _regeneratorRuntime.async(function getNearbyFilms$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",dispatch(_getNearbyFilms(reqParams)));case 1:case\"end\":return _context.stop();}}},null,null,null,Promise);},restoreRegion:function restoreRegion(region){return dispatch(_restoreRegion(region));},collectSysError:function collectSysError(err){return dispatch(_collectSysError(err));}};};var DemoMapScreen=function(_Component){_inherits(DemoMapScreen,_Component);var _super=_createSuper(DemoMapScreen);function DemoMapScreen(props){var _this;_classCallCheck(this,DemoMapScreen);_this=_super.call(this,props);_this.mapView=createRef();_this.index=0;_this.regionTimeout=setTimeout(function(){return'';},1000);_this.animation=new Animated.Value(0);_this.getCurLocation=_this.getCurLocation.bind(_assertThisInitialized(_this));_this.onMarkerPress=_this.onMarkerPress.bind(_assertThisInitialized(_this));return _this;}_createClass(DemoMapScreen,[{key:\"getCurLocation\",value:function getCurLocation(){var _await$Location$reque,status,location;return _regeneratorRuntime.async(function getCurLocation$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());case 3:_await$Location$reque=_context2.sent;status=_await$Location$reque.status;if(!(status!=='granted')){_context2.next=7;break;}return _context2.abrupt(\"return\");case 7:_context2.next=9;return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));case 9:location=_context2.sent;this.props.restoreRegion(_objectSpread({latitude:location.coords.latitude,longitude:location.coords.longitude},BunnyConstants.latLngDeltaGrace));_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](0);this.props.collectSysError(_context2.t0);case 16:case\"end\":return _context2.stop();}}},null,this,[[0,13]],Promise);}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var bunnyKit,sizeLabor,themeLabor,wp;return _regeneratorRuntime.async(function componentDidMount$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:bunnyKit=this.props.bunnyKit;sizeLabor=bunnyKit.sizeLabor,themeLabor=bunnyKit.themeLabor,wp=bunnyKit.wp;this.animation.addListener(function(_ref2){var value=_ref2.value;var index=Math.floor(value/getCardSize(sizeLabor,themeLabor).width+wp(0.3));if(index>=_this2.props.demoNearbyFilms.length){index=_this2.props.demoNearbyFilms.length-1;}if(index<=0){index=0;}clearTimeout(_this2.regionTimeout);_this2.regionTimeout=setTimeout(function(){if(_this2.index!==index){_this2.index=index;var coordinate=_this2.props.demoNearbyFilms[index].coordinate;_this2.mapView.current&&_this2.mapView.current.animateToRegion(_objectSpread(_objectSpread({},coordinate),{},{latitudeDelta:_this2.props.region.latitudeDelta,longitudeDelta:_this2.props.region.longitudeDelta}),wp(350));}},10);});_context3.next=5;return _regeneratorRuntime.awrap(this.props.getNearbyFilms(_objectSpread({latitude:this.props.region.latitude,longitude:this.props.region.longitude},BunnyConstants.latLngDeltaGrace)));case 5:case\"end\":return _context3.stop();}}},null,this,null,Promise);}},{key:\"onMarkerPress\",value:function onMarkerPress(marker){var mapView=this.mapView.current;mapView&&mapView.animateToRegion(_objectSpread({latitude:marker.coordinate.latitude,longitude:marker.coordinate.longitude},BunnyConstants.latLngDeltaGrace));}},{key:\"render\",value:function render(){var _this3=this;var bunnyKit=this.props.bunnyKit;var sizeLabor=bunnyKit.sizeLabor,themeLabor=bunnyKit.themeLabor,wp=bunnyKit.wp;var containerStyles=makeContainerStyles(sizeLabor,themeLabor);var styles=makeStyles(sizeLabor,themeLabor);var _getCardSize=getCardSize(sizeLabor,themeLabor),width=_getCardSize.width;var interpolations=this.props.demoNearbyFilms.map(function(marker,index){var inputRange=[(index-1)*width,index*width,(index+1)*width];var scale=_this3.animation.interpolate({inputRange:inputRange,outputRange:[1,2.5,1],extrapolate:'clamp'});var opacity=_this3.animation.interpolate({inputRange:inputRange,outputRange:[0.35,1,0.35],extrapolate:'clamp'});return{scale:scale,opacity:opacity};});return React.createElement(View,{style:containerStyles.Screen,__self:this,__source:{fileName:_jsxFileName,lineNumber:134,columnNumber:13}},React.createElement(MapView,{ref:this.mapView,initialRegion:this.props.region,style:styles.mapView,provider:PROVIDER_DEFAULT,__self:this,__source:{fileName:_jsxFileName,lineNumber:135,columnNumber:17}},this.props.demoNearbyFilms.length>0&&this.props.demoNearbyFilms.map(function(marker,index){var scaleStyle={transform:[{scale:interpolations[index].scale}]};var opacityStyle={opacity:interpolations[index].opacity};return React.createElement(Marker,{key:index,coordinate:marker.coordinate,onPress:function onPress(){_this3.onMarkerPress(marker);},__self:_this3,__source:{fileName:_jsxFileName,lineNumber:153,columnNumber:29}},React.createElement(Animated.View,{style:[styles.markerWrap,opacityStyle],__self:_this3,__source:{fileName:_jsxFileName,lineNumber:156,columnNumber:33}},React.createElement(Animated.View,{style:[styles.ring,scaleStyle],__self:_this3,__source:{fileName:_jsxFileName,lineNumber:157,columnNumber:37}}),React.createElement(View,{style:styles.marker,__self:_this3,__source:{fileName:_jsxFileName,lineNumber:158,columnNumber:37}})));})),React.createElement(Animated.ScrollView,{horizontal:true,scrollEventThrottle:1,showsHorizontalScrollIndicator:false,snapToInterval:width,onScroll:Animated.event([{nativeEvent:{contentOffset:{x:this.animation}}}],{useNativeDriver:config.useNativeDriver}),style:styles.scrollView,contentContainerStyle:styles.endPadding,__self:this,__source:{fileName:_jsxFileName,lineNumber:164,columnNumber:17}},this.props.demoNearbyFilms.length>0&&this.props.demoNearbyFilms.map(function(marker,index){return React.createElement(TouchableOpacity,{onPress:function onPress(){_this3.onMarkerPress(marker);},key:marker.id,__self:_this3,__source:{fileName:_jsxFileName,lineNumber:179,columnNumber:25}},React.createElement(View,{style:styles.card,__self:_this3,__source:{fileName:_jsxFileName,lineNumber:182,columnNumber:29}},React.createElement(Image,{source:marker.image,style:styles.cardImage,resizeMode:\"cover\",__self:_this3,__source:{fileName:_jsxFileName,lineNumber:183,columnNumber:33}}),React.createElement(View,{style:styles.textContent,__self:_this3,__source:{fileName:_jsxFileName,lineNumber:184,columnNumber:33}},React.createElement(Text,{numberOfLines:1,style:styles.cardTitle,__self:_this3,__source:{fileName:_jsxFileName,lineNumber:185,columnNumber:37}},marker.title),React.createElement(Text,{numberOfLines:1,style:styles.cardDescription,__self:_this3,__source:{fileName:_jsxFileName,lineNumber:186,columnNumber:37}},marker.description))));})));}}]);return DemoMapScreen;}(Component);export default connect(mapStateToProps,mapDispatchToProps)(withBunnyKit(DemoMapScreen));","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/screens/DemoMap/DemoMap.tsx"],"names":["collectSysError","getNearbyFilms","restoreRegion","Marker","mapStateToProps","rootState","mapDispatchToProps","dispatch","DemoMapScreen","Component","mapView","createRef","index","regionTimeout","setTimeout","animation","Animated","status","Location","location","latitude","longitude","BunnyConstants","bunnyKit","sizeLabor","themeLabor","wp","value","Math","getCardSize","clearTimeout","coordinate","latitudeDelta","longitudeDelta","marker","containerStyles","makeContainerStyles","styles","makeStyles","width","interpolations","inputRange","scale","outputRange","extrapolate","opacity","scaleStyle","transform","opacityStyle","nativeEvent","contentOffset","x","useNativeDriver","config","connect","withBunnyKit"],"mappings":"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","sourcesContent":["import React, {Component, createRef} from 'react';\nimport {Animated} from 'react-native';\nimport {Image, Text, TouchableOpacity, View} from '../../components/UI';\nimport * as Location from 'expo-location';\nimport {ThunkDispatch} from 'redux-thunk';\nimport {DemoMapState, GetNearbyFilmsReqParams, NearbyFilm, Region, RootState} from '../../types';\nimport {Action} from 'redux';\nimport {collectSysError, getNearbyFilms, restoreRegion} from '../../store/actions';\nimport {connect} from 'react-redux';\nimport MapView, {PROVIDER_DEFAULT} from 'react-native-maps';\nimport BunnyConstants from '../../constants/constants';\nimport makeStyles, {getCardSize} from './styles';\nimport {makeContainerStyles} from '../../containers';\nimport config from '../../config';\nimport {WithBunnyKit, withBunnyKit} from '../../hooks/bunny-kit';\n\nconst {Marker} = MapView as any; // react-native-maps under typescript bug trick\n\ntype BareProps = { title?: string }\nconst mapStateToProps = (rootState: RootState) => ({...rootState.demoMapState});\nconst mapDispatchToProps = (dispatch: ThunkDispatch<DemoMapState, void, Action>) => ({\n    getNearbyFilms: async (reqParams: GetNearbyFilmsReqParams) => dispatch(getNearbyFilms(reqParams)),\n    restoreRegion: (region: Region) => dispatch(restoreRegion(region)),\n    collectSysError: (err: Error) => dispatch(collectSysError(err))\n});\n\nexport interface DemoMapProps extends ReturnType<typeof mapDispatchToProps>,\n    ReturnType<typeof mapStateToProps>,\n    BareProps, WithBunnyKit {\n}\n\nclass DemoMapScreen extends Component<DemoMapProps> {\n\n    private mapView = createRef<MapView>();\n    private index: number = 0;\n    private regionTimeout: ReturnType<typeof setTimeout> = setTimeout(() => '', 1000);\n    private animation: Animated.Value = new Animated.Value(0);\n\n    constructor(props: DemoMapProps) {\n        super(props);\n        this.getCurLocation = this.getCurLocation.bind(this);\n        this.onMarkerPress = this.onMarkerPress.bind(this);\n        // this.onMapviewMarkerPress = this.onMapviewMarkerPress.bind(this);\n    }\n\n    async getCurLocation() {\n        try {\n            let {status} = await Location.requestPermissionsAsync();\n            if (status !== 'granted') {\n                return;\n            }\n            let location = await Location.getCurrentPositionAsync({});\n            this.props.restoreRegion({\n                latitude: location.coords.latitude,\n                longitude: location.coords.longitude,\n                ...BunnyConstants.latLngDeltaGrace\n            });\n        } catch (e: any) {\n            this.props.collectSysError(e);\n        }\n    }\n\n    async componentDidMount() {\n        const {bunnyKit} = this.props;\n        const {sizeLabor, themeLabor, wp} = bunnyKit;\n        this.animation.addListener(({value}) => {\n            let index = Math.floor(value / getCardSize(sizeLabor, themeLabor).width + wp(0.3)); // animate 30% away from landing on the next item\n            if (index >= this.props.demoNearbyFilms.length) {\n                index = this.props.demoNearbyFilms.length - 1;\n            }\n            if (index <= 0) {\n                index = 0;\n            }\n            clearTimeout(this.regionTimeout);\n            this.regionTimeout = setTimeout(() => {\n                if (this.index !== index) {\n                    this.index = index;\n                    const {coordinate} = this.props.demoNearbyFilms[index];\n                    this.mapView.current && this.mapView.current.animateToRegion(\n                        {\n                            ...coordinate,\n                            latitudeDelta: this.props.region.latitudeDelta,\n                            longitudeDelta: this.props.region.longitudeDelta,\n                        },\n                        wp(350)\n                    );\n                }\n            }, 10);\n        });\n        // await this.getCurLocation();\n        await this.props.getNearbyFilms({\n            latitude: this.props.region.latitude,\n            longitude: this.props.region.longitude,\n            ...BunnyConstants.latLngDeltaGrace\n        });\n    }\n\n    onMarkerPress(marker: NearbyFilm) {\n        const mapView = this.mapView.current;\n        mapView && mapView.animateToRegion({\n            latitude: marker.coordinate.latitude,\n            longitude: marker.coordinate.longitude,\n            ...BunnyConstants.latLngDeltaGrace\n        });\n    }\n\n\n    render(): React.ReactNode {\n        const {bunnyKit} = this.props;\n        const {sizeLabor, themeLabor, wp} = bunnyKit;\n        const containerStyles = makeContainerStyles(sizeLabor, themeLabor);\n        const styles = makeStyles(sizeLabor, themeLabor);\n        const {width} = getCardSize(sizeLabor, themeLabor);\n        const interpolations = this.props.demoNearbyFilms.map((marker, index) => {\n            const inputRange = [\n                (index - 1) * width,\n                index * width,\n                ((index + 1) * width),\n            ];\n            const scale = this.animation.interpolate({\n                inputRange,\n                outputRange: [1, 2.5, 1],\n                extrapolate: 'clamp',\n            });\n            const opacity = this.animation.interpolate({\n                inputRange,\n                outputRange: [0.35, 1, 0.35],\n                extrapolate: 'clamp',\n            });\n            return {scale, opacity};\n        });\n\n        return (\n            <View style={containerStyles.Screen}>\n                <MapView\n                    ref={this.mapView}\n                    initialRegion={this.props.region}\n                    style={styles.mapView}\n                    provider={PROVIDER_DEFAULT}\n                >\n                    {this.props.demoNearbyFilms.length > 0 && this.props.demoNearbyFilms.map((marker, index) => {\n                        const scaleStyle = {\n                            transform: [\n                                {\n                                    scale: interpolations[index].scale,\n                                },\n                            ],\n                        };\n                        const opacityStyle = {\n                            opacity: interpolations[index].opacity,\n                        };\n                        return (\n                            <Marker key={index} coordinate={marker.coordinate} onPress={() => {\n                                this.onMarkerPress(marker);\n                            }}>\n                                <Animated.View style={[styles.markerWrap, opacityStyle]}>\n                                    <Animated.View style={[styles.ring, scaleStyle]}/>\n                                    <View style={styles.marker}/>\n                                </Animated.View>\n                            </Marker>\n                        );\n                    })}\n                </MapView>\n                <Animated.ScrollView horizontal scrollEventThrottle={1}\n                                     showsHorizontalScrollIndicator={false}\n                                     snapToInterval={width}\n                                     onScroll={Animated.event([{\n                                             nativeEvent: {\n                                                 contentOffset: {\n                                                     x: this.animation,\n                                                 },\n                                             }\n                                         }],\n                                         {useNativeDriver: config.useNativeDriver}\n                                     )}\n                                     style={styles.scrollView}\n                                     contentContainerStyle={styles.endPadding}>\n                    {this.props.demoNearbyFilms.length > 0 && this.props.demoNearbyFilms.map((marker, index) => (\n                        <TouchableOpacity onPress={() => {\n                            this.onMarkerPress(marker);\n                        }} key={marker.id}>\n                            <View style={styles.card}>\n                                <Image source={marker.image} style={styles.cardImage} resizeMode=\"cover\"/>\n                                <View style={styles.textContent}>\n                                    <Text numberOfLines={1} style={styles.cardTitle}>{marker.title}</Text>\n                                    <Text numberOfLines={1} style={styles.cardDescription}>\n                                        {marker.description}\n                                    </Text>\n                                </View>\n                            </View>\n                        </TouchableOpacity>\n                    ))}\n                </Animated.ScrollView>\n            </View>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withBunnyKit(DemoMapScreen));\n"]},"metadata":{},"sourceType":"module"}