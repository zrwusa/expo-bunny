{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/components/BunnyChat/ChatAvatar.tsx\";var _excluded=[\"renderAvatar\"];function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import BunnyAvatar from\"./BunnyAvatar\";import{isSameDay,isSameUser}from\"./utils\";import{withBunnyKit}from\"../../hooks/bunny-kit\";var makeStyles=function makeStyles(sizeLabor,themeLabor){var wp=sizeLabor.designsBasedOn.iphoneX.wp;return{left:StyleSheet.create({container:{marginRight:wp(8)},onTop:{alignSelf:'flex-start'},onBottom:{},image:{height:wp(36),width:wp(36),borderRadius:wp(18)}}),right:StyleSheet.create({container:{marginLeft:wp(8)},onTop:{alignSelf:'flex-start'},onBottom:{},image:{height:wp(36),width:wp(36),borderRadius:wp(18)}})};};var ChatAvatar=function(_React$Component){_inherits(ChatAvatar,_React$Component);var _super=_createSuper(ChatAvatar);function ChatAvatar(){_classCallCheck(this,ChatAvatar);return _super.apply(this,arguments);}_createClass(ChatAvatar,[{key:\"renderAvatar\",value:function renderAvatar(){var _this=this;if(this.props.renderAvatar){var _this$props=this.props,_renderAvatar=_this$props.renderAvatar,avatarProps=_objectWithoutProperties(_this$props,_excluded);return this.props.renderAvatar(avatarProps);}if(this.props.currentMessage){var _this$props$bunnyKit=this.props.bunnyKit,sizeLabor=_this$props$bunnyKit.sizeLabor,themeLabor=_this$props$bunnyKit.themeLabor;var styles=makeStyles(sizeLabor,themeLabor);return React.createElement(BunnyAvatar,{avatarStyle:[styles[this.props.position].image,this.props.avatarImageStyle&&this.props.avatarImageStyle[this.props.position]],textStyle:this.props.avatarTextStyle?this.props.avatarTextStyle:{},user:this.props.currentMessage.user,onPress:function onPress(){return _this.props.onPressAvatar&&_this.props.onPressAvatar(_this.props.currentMessage.user);},onLongPress:function onLongPress(){return _this.props.onLongPressAvatar&&_this.props.onLongPressAvatar(_this.props.currentMessage.user);},__self:this,__source:{fileName:_jsxFileName,lineNumber:88,columnNumber:17}});}return null;}},{key:\"render\",value:function render(){var _this$props2=this.props,renderAvatarOnTop=_this$props2.renderAvatarOnTop,showAvatarForEveryMessage=_this$props2.showAvatarForEveryMessage,avatarContainerStyle=_this$props2.avatarContainerStyle,position=_this$props2.position,currentMessage=_this$props2.currentMessage,renderAvatar=_this$props2.renderAvatar,previousMessage=_this$props2.previousMessage,nextMessage=_this$props2.nextMessage,avatarImageStyle=_this$props2.avatarImageStyle;var messageToCompare=renderAvatarOnTop?previousMessage:nextMessage;var computedStyle=renderAvatarOnTop?'onTop':'onBottom';if(renderAvatar===null){return null;}var _this$props$bunnyKit2=this.props.bunnyKit,sizeLabor=_this$props$bunnyKit2.sizeLabor,themeLabor=_this$props$bunnyKit2.themeLabor;var styles=makeStyles(sizeLabor,themeLabor);if(!showAvatarForEveryMessage&&currentMessage&&messageToCompare&&isSameUser(currentMessage,messageToCompare)&&isSameDay(currentMessage,messageToCompare)){return React.createElement(View,{style:[styles[position].container,avatarContainerStyle&&avatarContainerStyle[position]],__self:this,__source:{fileName:_jsxFileName,lineNumber:142,columnNumber:17}},React.createElement(BunnyAvatar,{avatarStyle:[styles[position].image,avatarImageStyle&&avatarImageStyle[position]],__self:this,__source:{fileName:_jsxFileName,lineNumber:148,columnNumber:21}}));}return React.createElement(View,{style:[styles[position].container,styles[position][computedStyle],avatarContainerStyle&&avatarContainerStyle[position]],__self:this,__source:{fileName:_jsxFileName,lineNumber:161,columnNumber:13}},this.renderAvatar());}}]);return ChatAvatar;}(React.Component);ChatAvatar.defaultProps={renderAvatarOnTop:false,showAvatarForEveryMessage:false,position:'left',currentMessage:undefined,previousMessage:undefined,nextMessage:undefined,avatarContainerStyle:{},avatarImageStyle:{},onPressAvatar:function onPressAvatar(){},onLongPressAvatar:function onLongPressAvatar(){}};export default withBunnyKit(ChatAvatar);","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/components/BunnyChat/ChatAvatar.tsx"],"names":["makeStyles","wp","sizeLabor","left","container","marginRight","onTop","alignSelf","onBottom","image","height","width","borderRadius","right","marginLeft","ChatAvatar","React","Component","defaultProps","renderAvatarOnTop","showAvatarForEveryMessage","position","currentMessage","previousMessage","nextMessage","avatarContainerStyle","avatarImageStyle","onPressAvatar","onLongPressAvatar","renderAvatar","avatarProps","themeLabor","styles","messageToCompare","computedStyle","isSameUser","isSameDay","withBunnyKit"],"mappings":"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","sourcesContent":["import React, {ReactNode} from 'react';\nimport {ImageStyle, StyleSheet, TextStyle, View, ViewStyle,} from 'react-native';\nimport BunnyAvatar from './BunnyAvatar';\nimport {isSameDay, isSameUser} from './utils';\nimport {IMessage, LeftRightStyle, PositionLeftOrRight, User} from './types';\nimport {WithBunnyKit, withBunnyKit} from '../../hooks/bunny-kit';\nimport {SizeLabor, ThemeLabor} from '../../types';\n\nconst makeStyles = (sizeLabor: SizeLabor, themeLabor: ThemeLabor) => {\n    const {wp} = sizeLabor.designsBasedOn.iphoneX;\n    return {\n        left: StyleSheet.create({\n            container: {\n                marginRight: wp(8),\n            },\n            onTop: {\n                alignSelf: 'flex-start',\n            },\n            onBottom: {},\n            image: {\n                height: wp(36),\n                width: wp(36),\n                borderRadius: wp(18),\n            },\n        }),\n        right: StyleSheet.create({\n            container: {\n                marginLeft: wp(8),\n            },\n            onTop: {\n                alignSelf: 'flex-start',\n            },\n            onBottom: {},\n            image: {\n                height: wp(36),\n                width: wp(36),\n                borderRadius: wp(18),\n            },\n        }),\n    };\n};\n\n\nexport interface ChatAvatarProps<TMessage extends IMessage> {\n    currentMessage?: TMessage;\n    previousMessage?: TMessage;\n    nextMessage?: TMessage;\n    position: PositionLeftOrRight;\n    renderAvatarOnTop?: boolean;\n    showAvatarForEveryMessage?: boolean;\n    avatarImageStyle?: LeftRightStyle<ImageStyle>;\n    avatarContainerStyle?: LeftRightStyle<ViewStyle>;\n    avatarTextStyle?: TextStyle;\n\n    renderAvatar?(props: Omit<ChatAvatarProps<TMessage>, 'renderAvatar'>): ReactNode;\n\n    onPressAvatar?(user: User): void;\n\n    onLongPressAvatar?(user: User): void;\n}\n\nclass ChatAvatar<TMessage extends IMessage> extends React.Component<ChatAvatarProps<TMessage> & WithBunnyKit> {\n    static defaultProps = {\n        renderAvatarOnTop: false,\n        showAvatarForEveryMessage: false,\n        position: 'left' as PositionLeftOrRight,\n        currentMessage: undefined,\n        previousMessage: undefined,\n        nextMessage: undefined,\n        avatarContainerStyle: {},\n        avatarImageStyle: {},\n        onPressAvatar: () => {\n        },\n        onLongPressAvatar: () => {\n        },\n    };\n\n\n    renderAvatar() {\n        if (this.props.renderAvatar) {\n            const {renderAvatar, ...avatarProps} = this.props;\n            return this.props.renderAvatar(avatarProps);\n        }\n        if (this.props.currentMessage) {\n            const {bunnyKit: {sizeLabor, themeLabor}} = this.props;\n            const styles = makeStyles(sizeLabor, themeLabor);\n            return (\n                <BunnyAvatar\n                    avatarStyle={\n                        [\n                            styles[this.props.position].image,\n                            this.props.avatarImageStyle &&\n                            this.props.avatarImageStyle[this.props.position],\n                        ] as ImageStyle\n                    }\n                    textStyle={this.props.avatarTextStyle ? this.props.avatarTextStyle : {}}\n                    user={this.props.currentMessage.user}\n                    onPress={() =>\n                        this.props.onPressAvatar &&\n                        this.props.onPressAvatar(this.props.currentMessage!.user)\n                    }\n                    onLongPress={() =>\n                        this.props.onLongPressAvatar &&\n                        this.props.onLongPressAvatar(this.props.currentMessage!.user)\n                    }\n                />\n            );\n        }\n        return null;\n    }\n\n    render() {\n        const {\n            renderAvatarOnTop,\n            showAvatarForEveryMessage,\n            avatarContainerStyle,\n            position,\n            currentMessage,\n            renderAvatar,\n            previousMessage,\n            nextMessage,\n            avatarImageStyle,\n        } = this.props;\n        const messageToCompare = renderAvatarOnTop ? previousMessage : nextMessage;\n        const computedStyle = renderAvatarOnTop ? 'onTop' : 'onBottom';\n\n        if (renderAvatar === null) {\n            return null;\n        }\n        const {bunnyKit: {sizeLabor, themeLabor}} = this.props;\n        const styles = makeStyles(sizeLabor, themeLabor);\n\n        if (\n            !showAvatarForEveryMessage &&\n            currentMessage &&\n            messageToCompare &&\n            isSameUser(currentMessage, messageToCompare) &&\n            isSameDay(currentMessage, messageToCompare)\n        ) {\n\n            return (\n                <View\n                    style={[\n                        styles[position].container,\n                        avatarContainerStyle && avatarContainerStyle[position],\n                    ]}\n                >\n                    <BunnyAvatar\n                        avatarStyle={\n                            [\n                                styles[position].image,\n                                avatarImageStyle && avatarImageStyle[position],\n                            ] as ImageStyle\n                        }\n                    />\n                </View>\n            );\n        }\n\n        return (\n            <View\n                style={[\n                    styles[position].container,\n                    styles[position][computedStyle],\n                    avatarContainerStyle && avatarContainerStyle[position],\n                ]}\n            >\n                {this.renderAvatar()}\n            </View>\n        );\n    }\n}\n\nexport default withBunnyKit(ChatAvatar);\n"]},"metadata":{},"sourceType":"module"}