{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import axios from'axios';import{authLaborContext}from\"../providers/auth-labor\";import{getApiInstanceConfig}from\"./helpers\";import{checkBunnyAPIProtocol}from\"./api-protocols\";export var bunnyAPI=axios.create(getApiInstanceConfig('bunny'));bunnyAPI.interceptors.request.use(function _callee(config){var _await$authLaborConte,accessToken;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:config.headers['Content-Type']='application/json';_context.next=3;return _regeneratorRuntime.awrap(authLaborContext.authFunctions.getPersistenceAuth());case 3:_await$authLaborConte=_context.sent;accessToken=_await$authLaborConte.accessToken;if(accessToken){config.headers['Authorization']=\"Bearer \"+accessToken;}return _context.abrupt(\"return\",config);case 7:case\"end\":return _context.stop();}}},null,null,null,Promise);},function _callee2(error){return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",Promise.reject(error));case 1:case\"end\":return _context2.stop();}}},null,null,null,Promise);});bunnyAPI.interceptors.response.use(function(response){checkBunnyAPIProtocol(response.data);return response;},function _callee3(error){var response,request,config,status,data,business_logic,error_code,authFunctions,bunnyRefreshAuth,logOut,_await$bunnyRefreshAu,success,originalRequest;return _regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:response=error.response,request=error.request,config=error.config;if(!response){_context3.next=38;break;}status=response.status,data=response.data;_context3.t0=status;_context3.next=_context3.t0===401?6:_context3.t0===500?32:33;break;case 6:business_logic=data.business_logic;error_code=business_logic.error_code;if(!['01_001_B_002','01_001_B_003','01_001_B_004','01_001_B_005','01_001_B_012'].includes(error_code)){_context3.next=31;break;}authFunctions=authLaborContext.authFunctions;bunnyRefreshAuth=authFunctions.bunnyRefreshAuth,logOut=authFunctions.logOut;_context3.prev=11;_context3.next=14;return _regeneratorRuntime.awrap(bunnyRefreshAuth());case 14:_await$bunnyRefreshAu=_context3.sent;success=_await$bunnyRefreshAu.success;if(success){_context3.next=21;break;}_context3.next=19;return _regeneratorRuntime.awrap(logOut('API'));case 19:_context3.next=24;break;case 21:originalRequest=config;originalRequest._retry=true;return _context3.abrupt(\"return\",bunnyAPI(originalRequest));case 24:_context3.next=31;break;case 26:_context3.prev=26;_context3.t1=_context3[\"catch\"](11);_context3.next=30;return _regeneratorRuntime.awrap(logOut('API'));case 30:throw _context3.t1;case 31:return _context3.abrupt(\"break\",34);case 32:throw error;case 33:return _context3.abrupt(\"break\",34);case 34:checkBunnyAPIProtocol(response.data);return _context3.abrupt(\"return\",response);case 38:if(!request){_context3.next=42;break;}throw error;case 42:throw error;case 43:case\"end\":return _context3.stop();}}},null,null,[[11,26]],Promise);});export default bunnyAPI;","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/helpers/bunny-api.ts"],"names":["bunnyAPI","axios","getApiInstanceConfig","config","accessToken","authLaborContext","Promise","checkBunnyAPIProtocol","response","request","error","status","data","business_logic","error_code","authFunctions","bunnyRefreshAuth","logOut","success","originalRequest"],"mappings":"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","sourcesContent":["import axios, {AxiosResponse} from 'axios';\nimport {authLaborContext} from '../providers/auth-labor';\nimport {BunnyAPIProtocol} from '../types';\nimport {getApiInstanceConfig} from './helpers';\nimport {checkBunnyAPIProtocol} from './api-protocols';\n\nexport const bunnyAPI = axios.create(getApiInstanceConfig('bunny'));\n\nbunnyAPI.interceptors.request.use(\n    async (config) => {\n        config.headers['Content-Type'] = 'application/json';\n        const {accessToken} = await authLaborContext.authFunctions.getPersistenceAuth();\n        if (accessToken) {\n            config.headers['Authorization'] = `Bearer ${accessToken}`;\n        }\n        return config;\n    },\n    async error => {\n        return Promise.reject(error);\n    });\n\nbunnyAPI.interceptors.response.use(\n    (response: AxiosResponse<BunnyAPIProtocol<any>>) => {\n        // status 200-299\n        checkBunnyAPIProtocol(response.data);\n        return response;\n    },\n    async (error) => {\n        const {response, request, config} = error;\n        if (response) {\n            // status 300-599 The request was made and the server responded with a status code that falls out of the range of 2xx\n            const {status, data} = response;\n            switch (status) {\n                case 401:\n                    const {business_logic} = data;\n                    const {error_code} = business_logic;\n                    if (['01_001_B_002', '01_001_B_003', '01_001_B_004', '01_001_B_005', '01_001_B_012'].includes(error_code)) {\n                        const {authFunctions} = authLaborContext;\n                        const {bunnyRefreshAuth, logOut} = authFunctions;\n                        try {\n\n                            const {success} = await bunnyRefreshAuth();\n                            if (!success) {\n                                await logOut('API');\n                            } else {\n                                const originalRequest = config;\n                                originalRequest._retry = true;\n                                return bunnyAPI(originalRequest);\n                            }\n                        } catch (e: any) {\n                            await logOut('API');\n                            throw e;\n                        }\n                    }\n                    break;\n                case 500:\n                    throw error;\n                default:\n                    break;\n            }\n            checkBunnyAPIProtocol(response.data);\n            return response;\n        } else if (request) {\n            // status 100-199 timeout The request was made but no response was received, `error.request` is an instance of XMLHttpRequest in the browser and an instance of http.ClientRequest in Node.js\n            throw error;\n        } else {\n            // Something happened in setting up the request and triggered an error\n            throw error;\n        }\n    });\n\nexport default bunnyAPI;\n\n"]},"metadata":{},"sourceType":"module"}