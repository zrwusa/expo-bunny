{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/hooks/bunny-kit/withBunnyKit.tsx\";import React from'react';import{useBunnyKit}from\"./useBunnyKit\";export var withBunnyKit=function withBunnyKit(Component){var _s=$RefreshSig$();var displayName=Component.displayName||Component.name||'Component';var GenericComponent=Component;var ComponentWithBunnyKit=function ComponentWithBunnyKit(props){_s();var bunnyKit=useBunnyKit();return React.createElement(GenericComponent,_extends({},props,{bunnyKit:bunnyKit,__self:this,__source:{fileName:_jsxFileName,lineNumber:22,columnNumber:16}}));};_s(ComponentWithBunnyKit,\"CwdnAqQ0dmh4pBx9rQLwvYbcQN8=\",false,function(){return[useBunnyKit];});ComponentWithBunnyKit.displayName=\"withBunnyKit(\"+displayName+\")\";return ComponentWithBunnyKit;};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/hooks/bunny-kit/withBunnyKit.tsx"],"names":["withBunnyKit","displayName","Component","GenericComponent","ComponentWithBunnyKit","bunnyKit","useBunnyKit"],"mappings":"qJAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,WAAA,qBAMA,MAAO,IAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAA,SAAA,CAEvB,uBAED,GAAMC,CAAAA,WAAW,CAAGC,SAAS,CAATA,WAAAA,EAAyBA,SAAS,CAAlCA,IAAAA,EAApB,WAAA,CAGA,GAAMC,CAAAA,gBAAgB,CAAtB,SAAA,CAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAAA,KAAA,CAAwE,MAElG,GAAMC,CAAAA,QAAQ,CAAGC,WAAjB,EAAA,CAGA,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAA+C,QAAQ,CAAvD,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAP,CALJ,CAAA,CAPC,GAOKF,qBAPL,wDASoBE,WATpB,KAeDF,qBAAqB,CAArBA,WAAAA,CAAAA,gBAAAA,WAAAA,CAAAA,GAAAA,CAEA,MAAA,CAAA,qBAAA,CAnBG,CAAA","sourcesContent":["import React from 'react';\nimport {BunnyKit, useBunnyKit} from './useBunnyKit';\n\nexport interface WithBunnyKit {\n    bunnyKit: BunnyKit;\n}\n\nexport const withBunnyKit = <T extends any>(\n    Component: React.ComponentType<T>\n) => {\n    // Try to create a nice displayName for React Dev Tools.\n    const displayName = Component.displayName || Component.name || 'Component';\n\n    // TODO not very well for supporting generic components\n    const GenericComponent = Component as <ArgumentT extends object>(props: T) => JSX.Element;\n    // Creating the inner component. The calculated Props type here is the where the magic happens.\n    const ComponentWithBunnyKit = function <ArgumentT extends object>(props: Omit<T, keyof WithBunnyKit>) {\n        // Fetch the props you want to inject. This could be done with context instead.\n        const bunnyKit = useBunnyKit();\n        // props comes afterwards so the can override the default ones.\n        // TODO HOC support generic component\n        return <GenericComponent<ArgumentT> {...(props as T)} bunnyKit={bunnyKit}/>;\n    };\n\n    ComponentWithBunnyKit.displayName = `withBunnyKit(${displayName})`;\n\n    return ComponentWithBunnyKit;\n};\n"]},"metadata":{},"sourceType":"module"}