{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import{compose}from'redux';var createDynamicMiddlewares=function createDynamicMiddlewares(){var allDynamicMiddlewares=[];var allAppliedDynamicMiddlewares=[];var store;var enhancer=function enhancer(_store){store=_store;return function(next){return function(action){return compose.apply(void 0,_toConsumableArray(allAppliedDynamicMiddlewares))(next)(action);};};};var addMiddleware=function addMiddleware(){var _allAppliedDynamicMid,_allDynamicMiddleware;for(var _len=arguments.length,middlewares=new Array(_len),_key=0;_key<_len;_key++){middlewares[_key]=arguments[_key];}(_allAppliedDynamicMid=allAppliedDynamicMiddlewares).push.apply(_allAppliedDynamicMid,_toConsumableArray(middlewares.map(function(middleware){return middleware(store);})));(_allDynamicMiddleware=allDynamicMiddlewares).push.apply(_allDynamicMiddleware,middlewares);};var removeMiddleware=function removeMiddleware(middleware){var index=allDynamicMiddlewares.findIndex(function(d){return d===middleware;});if(index===-1){console.error('Middleware does not exist!',middleware);return;}allDynamicMiddlewares=allDynamicMiddlewares.filter(function(_,mdwIndex){return mdwIndex!==index;});allAppliedDynamicMiddlewares=allAppliedDynamicMiddlewares.filter(function(_,mdwIndex){return mdwIndex!==index;});};var resetMiddlewares=function resetMiddlewares(){allAppliedDynamicMiddlewares=[];allDynamicMiddlewares=[];};return{enhancer:enhancer,addMiddleware:addMiddleware,removeMiddleware:removeMiddleware,resetMiddlewares:resetMiddlewares};};var dynamicMiddlewaresInstance=createDynamicMiddlewares();export default dynamicMiddlewaresInstance.enhancer;var addMiddleware=dynamicMiddlewaresInstance.addMiddleware,removeMiddleware=dynamicMiddlewaresInstance.removeMiddleware,resetMiddlewares=dynamicMiddlewaresInstance.resetMiddlewares;export{addMiddleware,removeMiddleware,resetMiddlewares};export{createDynamicMiddlewares};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/packages/redux-dynamic-middlewares/src/index.ts"],"names":["createDynamicMiddlewares","allDynamicMiddlewares","allAppliedDynamicMiddlewares","enhancer","store","compose","addMiddleware","middlewares","middleware","removeMiddleware","index","d","console","mdwIndex","resetMiddlewares","dynamicMiddlewaresInstance"],"mappings":"yEAAA,OAAA,OAAA,KAAA,OAAA,CAEA,GAAMA,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,EAAM,CACnC,GAAIC,CAAAA,qBAAmC,CAAvC,EAAA,CACA,GAAIC,CAAAA,4BAA0C,CAA9C,EAAA,CACA,GAAA,CAAA,KAAA,CAEA,GAAMC,CAAAA,QAAoB,CAAG,QAAvBA,CAAAA,QAAuB,CAAA,MAAA,CAAqC,CAC9DC,KAAK,CAALA,MAAAA,CACA,MAAO,UAAA,IAAA,CAAI,CAAA,MAAI,UAAA,MAAA,CAAY,CAEvB,MAAOC,CAAAA,OAAO,CAAPA,KAAAA,CAAAA,IAAAA,EAAAA,CAAAA,kBAAAA,CAAAA,4BAAAA,CAAAA,EAAAA,IAAAA,EAAP,MAAOA,CAAP,CAFO,CAAA,CAAX,CAAA,CAFJ,CAAA,CAQA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAkC,CAAA,GAAA,CAAA,qBAAA,CAAA,qBAAA,CAAA,IAAA,GAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAA9BC,WAA8B,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,CAA9BA,WAA8B,CAAA,IAAA,CAA9BA,CAA8B,SAAA,CAAA,IAAA,CAA9BA,CAA8B,CAEpD,CAAA,qBAAA,CAAA,4BAAA,EAAA,IAAA,CAAA,KAAA,CAAA,qBAAA,CAAA,kBAAA,CAAqC,WAAW,CAAX,GAAA,CAAgB,SAAA,UAAA,CAAU,CAAA,MAAIC,CAAAA,UAAU,CAAd,KAAc,CAAd,CAA/D,CAAqC,CAArC,CAAA,EACA,CAAA,qBAAA,CAAA,qBAAA,EAAA,IAAA,CAAA,KAAA,CAAA,qBAAA,CAAA,WAAA,EAHJ,CAAA,CAMA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAA,UAAA,CAA4B,CACjD,GAAMC,CAAAA,KAAK,CAAG,qBAAqB,CAArB,SAAA,CAAgC,SAAA,CAAA,CAAC,CAAA,MAAIC,CAAAA,CAAC,GAAL,UAAA,CAA/C,CAAc,CAAd,CAEA,GAAID,KAAK,GAAK,CAAd,CAAA,CAAkB,CACdE,OAAO,CAAPA,KAAAA,CAAAA,4BAAAA,CAAAA,UAAAA,EACA,OACH,CAEDX,qBAAqB,CAAG,qBAAqB,CAArB,MAAA,CAA6B,SAAA,CAAA,CAAA,QAAA,CAAA,CAAA,MAAiBY,CAAAA,QAAQ,GAAzB,KAAA,CAArDZ,CAAwB,CAAxBA,CACAC,4BAA4B,CAAG,4BAA4B,CAA5B,MAAA,CACnB,SAAA,CAAA,CAAA,QAAA,CAAA,CAAA,MAAiBW,CAAAA,QAAQ,GAAzB,KAAA,CADZX,CAA+B,CAA/BA,CATJ,CAAA,CAaA,GAAMY,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3BZ,4BAA4B,CAA5BA,EAAAA,CACAD,qBAAqB,CAArBA,EAAAA,CAFJ,CAAA,CAKA,MAAO,CACHE,QAAQ,CADL,QAAA,CAEHG,aAAa,CAFV,aAAA,CAGHG,gBAAgB,CAHb,gBAAA,CAIHK,gBAAgB,CAAhBA,gBAJG,CAAP,CArCJ,CAAA,CA6CA,GAAMC,CAAAA,0BAA0B,CAAGf,wBAAnC,EAAA,CAEA,cAAee,CAAAA,0BAA0B,CAAzC,QAAA,CAEO,GACHT,CAAAA,aADG,CAIHS,0BAJG,CAAA,aAAA,CAEHN,gBAFG,CAIHM,0BAJG,CAAA,gBAAA,CAGHD,gBAHG,CAIHC,0BAJG,CAAA,gBAAA,C,wDAMP,OAAA,wBAAA","sourcesContent":["import {compose, Middleware, MiddlewareAPI} from 'redux';\n\nconst createDynamicMiddlewares = () => {\n    let allDynamicMiddlewares: Middleware[] = [];\n    let allAppliedDynamicMiddlewares: Middleware[] = [];\n    let store: MiddlewareAPI<any, any>;\n\n    const enhancer: Middleware = (_store: MiddlewareAPI<any, any>) => {\n        store = _store;\n        return next => (action) => {\n            // @ts-ignore\n            return compose(...allAppliedDynamicMiddlewares)(next)(action);\n        };\n    };\n\n    const addMiddleware = (...middlewares: Middleware[]) => {\n        // @ts-ignore\n        allAppliedDynamicMiddlewares.push(...middlewares.map(middleware => middleware(store)));\n        allDynamicMiddlewares.push(...middlewares);\n    };\n\n    const removeMiddleware = (middleware: Middleware) => {\n        const index = allDynamicMiddlewares.findIndex(d => d === middleware);\n\n        if (index === -1) {\n            console.error('Middleware does not exist!', middleware);\n            return;\n        }\n\n        allDynamicMiddlewares = allDynamicMiddlewares.filter((_, mdwIndex) => mdwIndex !== index);\n        allAppliedDynamicMiddlewares = allAppliedDynamicMiddlewares\n            .filter((_, mdwIndex) => mdwIndex !== index);\n    };\n\n    const resetMiddlewares = () => {\n        allAppliedDynamicMiddlewares = [];\n        allDynamicMiddlewares = [];\n    };\n\n    return {\n        enhancer,\n        addMiddleware,\n        removeMiddleware,\n        resetMiddlewares,\n    };\n};\n\nconst dynamicMiddlewaresInstance = createDynamicMiddlewares();\n\nexport default dynamicMiddlewaresInstance.enhancer;\n\nexport const {\n    addMiddleware,\n    removeMiddleware,\n    resetMiddlewares,\n} = dynamicMiddlewaresInstance;\n\nexport {\n    createDynamicMiddlewares,\n};\n"]},"metadata":{},"sourceType":"module"}