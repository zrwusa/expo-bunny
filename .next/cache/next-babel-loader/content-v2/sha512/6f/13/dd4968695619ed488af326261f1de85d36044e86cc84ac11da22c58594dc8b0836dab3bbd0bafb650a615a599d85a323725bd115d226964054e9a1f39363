{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{EDemoThunk}from\"../../constants\";export function demoThunkStateReducer(){var prevState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{id:0,text:'initialed text'};var _ref=arguments.length>1?arguments[1]:undefined,type=_ref.type,payload=_ref.payload;switch(type){case EDemoThunk.DEMO_THUNK_SUCCESS:{return _objectSpread(_objectSpread({},prevState),payload);}default:return prevState;}}","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/store/reducers/demo-thunk.ts"],"names":["prevState","id","text","type","payload","EDemoThunk"],"mappings":"i2BAEA,OAAA,UAAA,uBAGA,MAAO,SAAA,CAAA,qBAAA,EAG+C,CAAA,GAHhBA,CAAAA,SAGgB,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,EAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAHY,CAC9DC,EAAE,CAD4D,CAAA,CAE9DC,IAAI,CAAE,gBAFwD,CAGZ,CAAA,GAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAlDC,IAAkD,CAAA,IAAA,CAAlDA,IAAkD,CAA5CC,OAA4C,CAAA,IAAA,CAA5CA,OAA4C,CAClD,OAAA,IAAA,EACI,IAAKC,CAAAA,UAAU,CAAf,kBAAA,CAAoC,CAChC,MAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,OAAA,CAAA,CAIH,CACD,QACI,MAAA,CAAA,SAAA,CARR,CAUH","sourcesContent":["import {DemoThunkActions} from '../actions';\nimport {DemoThunkState} from '../../types';\nimport {EDemoThunk} from '../../constants';\n\n\nexport function demoThunkStateReducer(prevState: DemoThunkState = {\n    id: 0,\n    text: 'initialed text'\n}, {type, payload}: DemoThunkActions): DemoThunkState {\n    switch (type) {\n        case EDemoThunk.DEMO_THUNK_SUCCESS: {\n            return {\n                ...prevState,\n                ...payload,\n            };\n        }\n        default:\n            return prevState;\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}