{"ast":null,"code":"\"use strict\";exports.__esModule=true;exports.cancelIdleCallback=exports.requestIdleCallback=void 0;var requestIdleCallback=typeof self!=='undefined'&&self.requestIdleCallback||function(cb){var start=Date.now();return setTimeout(function(){cb({didTimeout:false,timeRemaining:function timeRemaining(){return Math.max(0,50-(Date.now()-start));}});},1);};exports.requestIdleCallback=requestIdleCallback;var cancelIdleCallback=typeof self!=='undefined'&&self.cancelIdleCallback||function(id){return clearTimeout(id);};exports.cancelIdleCallback=cancelIdleCallback;","map":{"version":3,"sources":["../../client/request-idle-callback.ts"],"names":["requestIdleCallback","self","start","Date","setTimeout","cb","didTimeout","timeRemaining","Math","cancelIdleCallback","clearTimeout"],"mappings":"mGAmBO,GAAMA,CAAAA,mBAAmB,CAC7B,MAAA,CAAA,IAAA,GAAA,WAAA,EAA+BC,IAAI,CAApC,mBAAC,EACD,SAAA,EAAA,CAEkB,CAChB,GAAIC,CAAAA,KAAK,CAAGC,IAAI,CAAhB,GAAYA,EAAZ,CACA,MAAOC,CAAAA,UAAU,CAAC,UAAY,CAC5BC,EAAE,CAAC,CACDC,UAAU,CADT,KAAA,CAEDC,aAAa,CAAE,wBAAY,CACzB,MAAOC,CAAAA,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,CAAY,IAAML,IAAI,CAAJA,GAAAA,GAAzB,KAAmB,CAAZK,CAAP,CAHJH,CAAG,CAAD,CAAFA,CADe,CAAA,CAAjB,CAAiB,CAAjB,CANG,CAAA,C,gDAgBA,GAAMI,CAAAA,kBAAkB,CAC5B,MAAA,CAAA,IAAA,GAAA,WAAA,EAA+BR,IAAI,CAApC,kBAAC,EACD,SAAA,EAAA,CAAyC,CACvC,MAAOS,CAAAA,YAAY,CAAnB,EAAmB,CAAnB,CAHG,CAAA,C","sourcesContent":["type RequestIdleCallbackHandle = any\ntype RequestIdleCallbackOptions = {\n  timeout: number\n}\ntype RequestIdleCallbackDeadline = {\n  readonly didTimeout: boolean\n  timeRemaining: () => number\n}\n\ndeclare global {\n  interface Window {\n    requestIdleCallback: (\n      callback: (deadline: RequestIdleCallbackDeadline) => void,\n      opts?: RequestIdleCallbackOptions\n    ) => RequestIdleCallbackHandle\n    cancelIdleCallback: (id: RequestIdleCallbackHandle) => void\n  }\n}\n\nexport const requestIdleCallback =\n  (typeof self !== 'undefined' && self.requestIdleCallback) ||\n  function (\n    cb: (deadline: RequestIdleCallbackDeadline) => void\n  ): NodeJS.Timeout {\n    let start = Date.now()\n    return setTimeout(function () {\n      cb({\n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start))\n        },\n      })\n    }, 1)\n  }\n\nexport const cancelIdleCallback =\n  (typeof self !== 'undefined' && self.cancelIdleCallback) ||\n  function (id: RequestIdleCallbackHandle) {\n    return clearTimeout(id)\n  }\n"]},"metadata":{},"sourceType":"script"}