{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{Platform}from'@unimodules/core';import{Asset}from'expo-asset';import ExponentAV from\"./ExponentAV\";export var PitchCorrectionQuality;(function(PitchCorrectionQuality){PitchCorrectionQuality[PitchCorrectionQuality[\"Low\"]=ExponentAV&&ExponentAV.Qualities&&ExponentAV.Qualities.Low]=\"Low\";PitchCorrectionQuality[PitchCorrectionQuality[\"Medium\"]=ExponentAV&&ExponentAV.Qualities&&ExponentAV.Qualities.Medium]=\"Medium\";PitchCorrectionQuality[PitchCorrectionQuality[\"High\"]=ExponentAV&&ExponentAV.Qualities&&ExponentAV.Qualities.High]=\"High\";})(PitchCorrectionQuality||(PitchCorrectionQuality={}));export var _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS=500;export var _DEFAULT_INITIAL_PLAYBACK_STATUS={positionMillis:0,progressUpdateIntervalMillis:_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,shouldPlay:false,rate:1.0,shouldCorrectPitch:false,volume:1.0,isMuted:false,isLooping:false};export function getNativeSourceFromSource(source){var uri=null;var overridingExtension=null;var headers;if(typeof source==='string'&&Platform.OS==='web'){return{uri:source,overridingExtension:overridingExtension,headers:headers};}var asset=_getAssetFromPlaybackSource(source);if(asset!=null){uri=asset.localUri||asset.uri;}else if(source!=null&&typeof source!=='number'&&'uri'in source&&typeof source.uri==='string'){uri=source.uri;}if(uri==null){return null;}if(source!=null&&typeof source!=='number'&&'overrideFileExtensionAndroid'in source&&typeof source.overrideFileExtensionAndroid==='string'){overridingExtension=source.overrideFileExtensionAndroid;}if(source!=null&&typeof source!=='number'&&'headers'in source&&typeof source.headers==='object'){headers=source.headers;}return{uri:uri,overridingExtension:overridingExtension,headers:headers};}function _getAssetFromPlaybackSource(source){if(source==null){return null;}var asset=null;if(typeof source==='number'){asset=Asset.fromModule(source);}else if(source instanceof Asset){asset=source;}return asset;}export function assertStatusValuesInBounds(status){if(typeof status.rate==='number'&&(status.rate<0||status.rate>32)){throw new RangeError('Rate value must be between 0.0 and 32.0');}if(typeof status.volume==='number'&&(status.volume<0||status.volume>1)){throw new RangeError('Volume value must be between 0.0 and 1.0');}}export function getNativeSourceAndFullInitialStatusForLoadAsync(source,initialStatus,downloadFirst){var fullInitialStatus,asset,nativeSource;return _regeneratorRuntime.async(function getNativeSourceAndFullInitialStatusForLoadAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:fullInitialStatus=initialStatus==null?_DEFAULT_INITIAL_PLAYBACK_STATUS:_objectSpread(_objectSpread({},_DEFAULT_INITIAL_PLAYBACK_STATUS),initialStatus);assertStatusValuesInBounds(fullInitialStatus);if(!(typeof source==='string'&&Platform.OS==='web')){_context.next=4;break;}return _context.abrupt(\"return\",{nativeSource:{uri:source,overridingExtension:null},fullInitialStatus:fullInitialStatus});case 4:asset=_getAssetFromPlaybackSource(source);if(!(downloadFirst&&asset)){_context.next=8;break;}_context.next=8;return _regeneratorRuntime.awrap(asset.downloadAsync());case 8:nativeSource=getNativeSourceFromSource(source);if(!(nativeSource===null)){_context.next=11;break;}throw new Error(\"Cannot load an AV asset from a null playback source\");case 11:return _context.abrupt(\"return\",{nativeSource:nativeSource,fullInitialStatus:fullInitialStatus});case 12:case\"end\":return _context.stop();}}},null,null,null,Promise);}export function getUnloadedStatus(){var error=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;return _objectSpread({isLoaded:false},error?{error:error}:null);}export var PlaybackMixin={playAsync:function playAsync(){return _regeneratorRuntime.async(function playAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",this.setStatusAsync({shouldPlay:true}));case 1:case\"end\":return _context2.stop();}}},null,this,null,Promise);},playFromPositionAsync:function playFromPositionAsync(positionMillis){var tolerances,_args3=arguments;return _regeneratorRuntime.async(function playFromPositionAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:tolerances=_args3.length>1&&_args3[1]!==undefined?_args3[1]:{};return _context3.abrupt(\"return\",this.setStatusAsync({positionMillis:positionMillis,shouldPlay:true,seekMillisToleranceAfter:tolerances.toleranceMillisAfter,seekMillisToleranceBefore:tolerances.toleranceMillisBefore}));case 2:case\"end\":return _context3.stop();}}},null,this,null,Promise);},pauseAsync:function pauseAsync(){return _regeneratorRuntime.async(function pauseAsync$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",this.setStatusAsync({shouldPlay:false}));case 1:case\"end\":return _context4.stop();}}},null,this,null,Promise);},stopAsync:function stopAsync(){return _regeneratorRuntime.async(function stopAsync$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:return _context5.abrupt(\"return\",this.setStatusAsync({positionMillis:0,shouldPlay:false}));case 1:case\"end\":return _context5.stop();}}},null,this,null,Promise);},setPositionAsync:function setPositionAsync(positionMillis){var tolerances,_args6=arguments;return _regeneratorRuntime.async(function setPositionAsync$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:tolerances=_args6.length>1&&_args6[1]!==undefined?_args6[1]:{};return _context6.abrupt(\"return\",this.setStatusAsync({positionMillis:positionMillis,seekMillisToleranceAfter:tolerances.toleranceMillisAfter,seekMillisToleranceBefore:tolerances.toleranceMillisBefore}));case 2:case\"end\":return _context6.stop();}}},null,this,null,Promise);},setRateAsync:function setRateAsync(rate){var shouldCorrectPitch,pitchCorrectionQuality,_args7=arguments;return _regeneratorRuntime.async(function setRateAsync$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:shouldCorrectPitch=_args7.length>1&&_args7[1]!==undefined?_args7[1]:false;pitchCorrectionQuality=_args7.length>2&&_args7[2]!==undefined?_args7[2]:PitchCorrectionQuality.Low;return _context7.abrupt(\"return\",this.setStatusAsync({rate:rate,shouldCorrectPitch:shouldCorrectPitch,pitchCorrectionQuality:pitchCorrectionQuality}));case 3:case\"end\":return _context7.stop();}}},null,this,null,Promise);},setVolumeAsync:function setVolumeAsync(volume){return _regeneratorRuntime.async(function setVolumeAsync$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:return _context8.abrupt(\"return\",this.setStatusAsync({volume:volume}));case 1:case\"end\":return _context8.stop();}}},null,this,null,Promise);},setIsMutedAsync:function setIsMutedAsync(isMuted){return _regeneratorRuntime.async(function setIsMutedAsync$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:return _context9.abrupt(\"return\",this.setStatusAsync({isMuted:isMuted}));case 1:case\"end\":return _context9.stop();}}},null,this,null,Promise);},setIsLoopingAsync:function setIsLoopingAsync(isLooping){return _regeneratorRuntime.async(function setIsLoopingAsync$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:return _context10.abrupt(\"return\",this.setStatusAsync({isLooping:isLooping}));case 1:case\"end\":return _context10.stop();}}},null,this,null,Promise);},setProgressUpdateIntervalAsync:function setProgressUpdateIntervalAsync(progressUpdateIntervalMillis){return _regeneratorRuntime.async(function setProgressUpdateIntervalAsync$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:return _context11.abrupt(\"return\",this.setStatusAsync({progressUpdateIntervalMillis:progressUpdateIntervalMillis}));case 1:case\"end\":return _context11.stop();}}},null,this,null,Promise);}};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/packages/expo-av/src/AV.ts"],"names":["PitchCorrectionQuality","ExponentAV","Low","Medium","High","_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS","_DEFAULT_INITIAL_PLAYBACK_STATUS","positionMillis","progressUpdateIntervalMillis","shouldPlay","rate","shouldCorrectPitch","volume","isMuted","isLooping","uri","overridingExtension","Platform","headers","asset","_getAssetFromPlaybackSource","source","Asset","status","fullInitialStatus","initialStatus","assertStatusValuesInBounds","nativeSource","downloadFirst","getNativeSourceFromSource","error","isLoaded","PlaybackMixin","playAsync","playFromPositionAsync","tolerances","seekMillisToleranceAfter","seekMillisToleranceBefore","toleranceMillisBefore","pauseAsync","stopAsync","setPositionAsync","setRateAsync","pitchCorrectionQuality","setVolumeAsync","setIsMutedAsync","setIsLoopingAsync","setProgressUpdateIntervalAsync"],"mappings":"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","sourcesContent":["import {Platform} from '@unimodules/core';\nimport {Asset} from 'expo-asset';\n\nimport ExponentAV from './ExponentAV';\n// TODO add:\n//  disableFocusOnAndroid\n//  audio routes (at least did become noisy on android)\n//  pan\n//  pitch\n//  API to explicitly request audio focus / session\n//  API to select stream type on Android\n//  subtitles API\n\nexport enum PitchCorrectionQuality {\n    Low = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.Low,\n    Medium = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.Medium,\n    High = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.High,\n}\n\nexport type AVPlaybackSource =\n    | number\n    | {\n    uri: string;\n    overrideFileExtensionAndroid?: string;\n    headers?: { [fieldName: string]: string };\n}\n    | Asset;\n\nexport type AVPlaybackNativeSource = {\n    uri: string;\n    overridingExtension?: string | null;\n    headers?: { [fieldName: string]: string };\n};\n\nexport type AVPlaybackStatus =\n    | {\n    isLoaded: false;\n    androidImplementation?: string;\n    error?: string; // populated exactly once when an error forces the object to unload\n}\n    | {\n    isLoaded: true;\n    androidImplementation?: string;\n\n    uri: string;\n\n    progressUpdateIntervalMillis: number;\n    durationMillis?: number;\n    positionMillis: number;\n    playableDurationMillis?: number;\n    seekMillisToleranceBefore?: number;\n    seekMillisToleranceAfter?: number;\n\n    shouldPlay: boolean;\n    isPlaying: boolean;\n    isBuffering: boolean;\n\n    rate: number;\n    shouldCorrectPitch: boolean;\n    volume: number;\n    isMuted: boolean;\n    isLooping: boolean;\n\n    didJustFinish: boolean; // true exactly once when the track plays to finish\n};\n\nexport type AVPlaybackStatusToSet = {\n    androidImplementation?: string;\n    progressUpdateIntervalMillis?: number;\n    positionMillis?: number;\n    seekMillisToleranceBefore?: number;\n    seekMillisToleranceAfter?: number;\n    shouldPlay?: boolean;\n    rate?: number;\n    shouldCorrectPitch?: boolean;\n    volume?: number;\n    isMuted?: boolean;\n    isLooping?: boolean;\n    pitchCorrectionQuality?: PitchCorrectionQuality;\n};\n\nexport const _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS: number = 500;\nexport const _DEFAULT_INITIAL_PLAYBACK_STATUS: AVPlaybackStatusToSet = {\n    positionMillis: 0,\n    progressUpdateIntervalMillis: _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n    shouldPlay: false,\n    rate: 1.0,\n    shouldCorrectPitch: false,\n    volume: 1.0,\n    isMuted: false,\n    isLooping: false,\n};\n\nexport function getNativeSourceFromSource(\n    source?: AVPlaybackSource | null\n): AVPlaybackNativeSource | null {\n    let uri: string | null = null;\n    let overridingExtension: string | null = null;\n    let headers: { [fieldName: string]: string } | undefined;\n\n    if (typeof source === 'string' && Platform.OS === 'web') {\n        return {\n            uri: source,\n            overridingExtension,\n            headers,\n        };\n    }\n\n    const asset: Asset | null = _getAssetFromPlaybackSource(source);\n    if (asset != null) {\n        uri = asset.localUri || asset.uri;\n    } else if (\n        source != null &&\n        typeof source !== 'number' &&\n        'uri' in source &&\n        typeof source.uri === 'string'\n    ) {\n        uri = source.uri;\n    }\n\n    if (uri == null) {\n        return null;\n    }\n\n    if (\n        source != null &&\n        typeof source !== 'number' &&\n        'overrideFileExtensionAndroid' in source &&\n        typeof source.overrideFileExtensionAndroid === 'string'\n    ) {\n        overridingExtension = source.overrideFileExtensionAndroid;\n    }\n\n    if (\n        source != null &&\n        typeof source !== 'number' &&\n        'headers' in source &&\n        typeof source.headers === 'object'\n    ) {\n        headers = source.headers;\n    }\n    return {uri, overridingExtension, headers};\n}\n\nfunction _getAssetFromPlaybackSource(source?: AVPlaybackSource | null): Asset | null {\n    if (source == null) {\n        return null;\n    }\n\n    let asset: Asset | null = null;\n    if (typeof source === 'number') {\n        asset = Asset.fromModule(source);\n    } else if (source instanceof Asset) {\n        asset = source;\n    }\n    return asset;\n}\n\nexport function assertStatusValuesInBounds(status: AVPlaybackStatusToSet): void {\n    if (typeof status.rate === 'number' && (status.rate < 0 || status.rate > 32)) {\n        throw new RangeError('Rate value must be between 0.0 and 32.0');\n    }\n    if (typeof status.volume === 'number' && (status.volume < 0 || status.volume > 1)) {\n        throw new RangeError('Volume value must be between 0.0 and 1.0');\n    }\n}\n\nexport async function getNativeSourceAndFullInitialStatusForLoadAsync(\n    source: AVPlaybackSource | null,\n    initialStatus: AVPlaybackStatusToSet | null,\n    downloadFirst: boolean\n): Promise<{\n    nativeSource: AVPlaybackNativeSource;\n    fullInitialStatus: AVPlaybackStatusToSet;\n}> {\n    // Get the full initial status\n    const fullInitialStatus: AVPlaybackStatusToSet =\n        initialStatus == null\n            ? _DEFAULT_INITIAL_PLAYBACK_STATUS\n            : {\n                ..._DEFAULT_INITIAL_PLAYBACK_STATUS,\n                ...initialStatus,\n            };\n    assertStatusValuesInBounds(fullInitialStatus);\n\n    if (typeof source === 'string' && Platform.OS === 'web') {\n        return {\n            nativeSource: {\n                uri: source,\n                overridingExtension: null,\n            },\n            fullInitialStatus,\n        };\n    }\n\n    // Download first if necessary.\n    const asset = _getAssetFromPlaybackSource(source);\n    if (downloadFirst && asset) {\n        // TODO we can download remote uri too once @nikki93 has integrated this into Asset\n        await asset.downloadAsync();\n    }\n\n    // Get the native source\n    const nativeSource: AVPlaybackNativeSource | null = getNativeSourceFromSource(source);\n\n    if (nativeSource === null) {\n        throw new Error(`Cannot load an AV asset from a null playback source`);\n    }\n\n    return {nativeSource, fullInitialStatus};\n}\n\nexport function getUnloadedStatus(error: string | null = null): AVPlaybackStatus {\n    return {\n        isLoaded: false,\n        ...(error ? {error} : null),\n    };\n}\n\nexport interface AV {\n    setStatusAsync(status: AVPlaybackStatusToSet): Promise<AVPlaybackStatus>;\n\n    getStatusAsync(): Promise<AVPlaybackStatus>;\n}\n\nexport interface Playback extends AV {\n    playAsync(): Promise<AVPlaybackStatus>;\n\n    loadAsync(\n        source: AVPlaybackSource,\n        initialStatus: AVPlaybackStatusToSet,\n        downloadAsync: boolean\n    ): Promise<AVPlaybackStatus>;\n\n    unloadAsync(): Promise<AVPlaybackStatus>;\n\n    playFromPositionAsync(\n        positionMillis: number,\n        tolerances?: { toleranceMillisBefore?: number; toleranceMillisAfter?: number }\n    ): Promise<AVPlaybackStatus>;\n\n    pauseAsync(): Promise<AVPlaybackStatus>;\n\n    stopAsync(): Promise<AVPlaybackStatus>;\n\n    replayAsync(status: AVPlaybackStatusToSet): Promise<AVPlaybackStatus>;\n\n    setPositionAsync(\n        positionMillis: number,\n        tolerances?: { toleranceMillisBefore?: number; toleranceMillisAfter?: number }\n    ): Promise<AVPlaybackStatus>;\n\n    setRateAsync(\n        rate: number,\n        shouldCorrectPitch: boolean,\n        pitchCorrectionQuality?: PitchCorrectionQuality\n    ): Promise<AVPlaybackStatus>;\n\n    setVolumeAsync(volume: number): Promise<AVPlaybackStatus>;\n\n    setIsMutedAsync(isMuted: boolean): Promise<AVPlaybackStatus>;\n\n    setIsLoopingAsync(isLooping: boolean): Promise<AVPlaybackStatus>;\n\n    setProgressUpdateIntervalAsync(progressUpdateIntervalMillis: number): Promise<AVPlaybackStatus>;\n}\n\n/**\n * A mixin that defines common playback methods for A/V classes so they implement the `Playback`\n * interface\n */\nexport const PlaybackMixin = {\n    async playAsync(): Promise<AVPlaybackStatus> {\n        return ((this as any) as Playback).setStatusAsync({shouldPlay: true});\n    },\n\n    async playFromPositionAsync(\n        positionMillis: number,\n        tolerances: { toleranceMillisBefore?: number; toleranceMillisAfter?: number } = {}\n    ): Promise<AVPlaybackStatus> {\n        return ((this as any) as Playback).setStatusAsync({\n            positionMillis,\n            shouldPlay: true,\n            seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n            seekMillisToleranceBefore: tolerances.toleranceMillisBefore,\n        });\n    },\n\n    async pauseAsync(): Promise<AVPlaybackStatus> {\n        return ((this as any) as Playback).setStatusAsync({shouldPlay: false});\n    },\n\n    async stopAsync(): Promise<AVPlaybackStatus> {\n        return ((this as any) as Playback).setStatusAsync({positionMillis: 0, shouldPlay: false});\n    },\n\n    async setPositionAsync(\n        positionMillis: number,\n        tolerances: { toleranceMillisBefore?: number; toleranceMillisAfter?: number } = {}\n    ): Promise<AVPlaybackStatus> {\n        return ((this as any) as Playback).setStatusAsync({\n            positionMillis,\n            seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n            seekMillisToleranceBefore: tolerances.toleranceMillisBefore,\n        });\n    },\n\n    async setRateAsync(\n        rate: number,\n        shouldCorrectPitch: boolean = false,\n        pitchCorrectionQuality: PitchCorrectionQuality = PitchCorrectionQuality.Low\n    ): Promise<AVPlaybackStatus> {\n        return ((this as any) as Playback).setStatusAsync({\n            rate,\n            shouldCorrectPitch,\n            pitchCorrectionQuality,\n        });\n    },\n\n    async setVolumeAsync(volume: number): Promise<AVPlaybackStatus> {\n        return ((this as any) as Playback).setStatusAsync({volume});\n    },\n\n    async setIsMutedAsync(isMuted: boolean): Promise<AVPlaybackStatus> {\n        return ((this as any) as Playback).setStatusAsync({isMuted});\n    },\n\n    async setIsLoopingAsync(isLooping: boolean): Promise<AVPlaybackStatus> {\n        return ((this as any) as Playback).setStatusAsync({isLooping});\n    },\n\n    async setProgressUpdateIntervalAsync(\n        progressUpdateIntervalMillis: number\n    ): Promise<AVPlaybackStatus> {\n        return ((this as any) as Playback).setStatusAsync({progressUpdateIntervalMillis});\n    },\n};\n"]},"metadata":{},"sourceType":"module"}