{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{EXCEPTIONAL_COLOR,STANDARD_COLOR_NAME_ALL}from\"../constants\";import{ColorTranslator}from'colortranslator';export function isColor(colorString){if(isColorName(colorString)){return true;}if(isExceptionalColor(colorString)){return true;}if(isHex(colorString)){return true;}if(isHexA(colorString)){return true;}if(isRGB(colorString)){return true;}if(isRGBA(colorString)){return true;}if(isHSL(colorString)){return true;}if(isHSLA(colorString)){return true;}return false;}export function checkColor(colorString){var checkResult={isColor:isColor(colorString),isColorName:isColorName(colorString),isExceptional:isExceptionalColor(colorString),isHex:isHex(colorString),isHexA:isHexA(colorString),isRGB:isRGB(colorString),isRGBA:isRGBA(colorString),isHSL:isHSL(colorString),isHSLA:isHSLA(colorString)};var checkResultKeys=Object.keys(checkResult);var colorType='';for(var _i=0,_checkResultKeys=checkResultKeys;_i<_checkResultKeys.length;_i++){var item=_checkResultKeys[_i];if(item!=='isColor'){colorType=checkResult[item]?item.substr(2,item.length-2):'';if(colorType){break;}}}return _objectSpread(_objectSpread({},checkResult),{},{type:colorType});}export function isHex(colorString){var RegExpHex=/^#(?:[A-Fa-f0-9]{3}){1,2}$/;return RegExpHex.test(colorString);}export function isHexA(colorString){var RegExpHex=/^#(?:[A-Fa-f0-9]{4}){1,2}$/;return RegExpHex.test(colorString);}export function isRGB(colorString){var RegExpRGB=/^rgb[(](?:\\s*0*(?:\\d\\d?(?:\\.\\d+)?(?:\\s*%)?|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%|(?:1\\d\\d|2[0-4]\\d|25[0-5])(?:\\.\\d+)?)\\s*(?:,(?![)])|(?=[)]))){3}[)]$/;return RegExpRGB.test(colorString);}export function isRGBA(colorString){var RegExpRGBA=/^rgba[(](?:\\s*0*(?:\\d\\d?(?:\\.\\d+)?(?:\\s*%)?|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%|(?:1\\d\\d|2[0-4]\\d|25[0-5])(?:\\.\\d+)?)\\s*,){3}\\s*0*(?:\\.\\d+|1(?:\\.0*)?)\\s*[)]$/;return RegExpRGBA.test(colorString);}export function isHSL(colorString){var RegExpHSL=/^hsl[(]\\s*0*(?:[12]?\\d{1,2}|3(?:[0-5]\\d|60))\\s*(?:\\s*,\\s*0*(?:\\d\\d?(?:\\.\\d+)?\\s*%|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%)){2}\\s*[)]$/;return RegExpHSL.test(colorString);}export function isHSLA(colorString){var RegExpHSLA=/^hsla[(]\\s*0*(?:[12]?\\d{1,2}|3(?:[0-5]\\d|60))\\s*(?:\\s*,\\s*0*(?:\\d\\d?(?:\\.\\d+)?\\s*%|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%)){2}\\s*,\\s*0*(?:\\.\\d+|1(?:\\.0*)?)\\s*[)]$/;return RegExpHSLA.test(colorString);}export function getColorByName(colorName){var key=colorName.toLowerCase();return STANDARD_COLOR_NAME_ALL[key];}export function isColorName(colorName){return!!getColorByName(colorName);}export function getExceptionalColor(colorName){var key=colorName.toLowerCase();return EXCEPTIONAL_COLOR[key];}export function isExceptionalColor(colorName){return!!getExceptionalColor(colorName);}export function colorFaultTolerance(colorString){if(!isColor(colorString)){return'';}if(isExceptionalColor(colorString)){return getExceptionalColor(colorString).RGBA;}if(isColorName(colorString)){return getColorByName(colorString).RGBA;}return colorString;}export function rgbaStringToRgbaArray(rgba){return rgba.substring(5,rgba.length-1).replace(/ /g,'').split(',').map(function(item){return parseFloat(item);});}export function rgbArrayToLab(rgb){var r=rgb[0]/255,g=rgb[1]/255,b=rgb[2]/255,x,y,z;r=r>0.04045?Math.pow((r+0.055)/1.055,2.4):r/12.92;g=g>0.04045?Math.pow((g+0.055)/1.055,2.4):g/12.92;b=b>0.04045?Math.pow((b+0.055)/1.055,2.4):b/12.92;x=(r*0.4124+g*0.3576+b*0.1805)/0.95047;y=(r*0.2126+g*0.7152+b*0.0722)/1.00000;z=(r*0.0193+g*0.1192+b*0.9505)/1.08883;x=x>0.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>0.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>0.008856?Math.pow(z,1/3):7.787*z+16/116;return[116*y-16,500*(x-y),200*(y-z)];}export function deltaEFromString(colorA,colorB,shouldDiffAlpha){var colorATolerance=colorFaultTolerance(colorA);var colorBTolerance=colorFaultTolerance(colorB);if(!colorATolerance||!colorBTolerance){return 100;}var rgbA=ColorTranslator.toRGBA(colorATolerance);var rgbB=ColorTranslator.toRGBA(colorBTolerance);var rgbaArrayA=rgbaStringToRgbaArray(rgbA);var rgbaArrayB=rgbaStringToRgbaArray(rgbB);var labA=rgbArrayToLab(rgbaArrayA);var labB=rgbArrayToLab(rgbaArrayB);var deltaL=labA[0]-labB[0];var deltaA=labA[1]-labB[1];var deltaB=labA[2]-labB[2];var c1=Math.sqrt(labA[1]*labA[1]+labA[2]*labA[2]);var c2=Math.sqrt(labB[1]*labB[1]+labB[2]*labB[2]);var deltaC=c1-c2;var deltaH=deltaA*deltaA+deltaB*deltaB-deltaC*deltaC;deltaH=deltaH<0?0:Math.sqrt(deltaH);var sc=1.0+0.045*c1;var sh=1.0+0.015*c1;var deltaLKlsl=deltaL/1.0;var deltaCkcsc=deltaC/sc;var deltaHkhsh=deltaH/sh;var i=deltaLKlsl*deltaLKlsl+deltaCkcsc*deltaCkcsc+deltaHkhsh*deltaHkhsh;var deltaEDiff=i<0?0:Math.sqrt(i);if(shouldDiffAlpha){var alphaDiff=rgbaArrayA[3]-rgbaArrayB[3];var alphaDiffS=100*Math.sqrt(alphaDiff*alphaDiff);return deltaEDiff;}else{return deltaEDiff;}}export function deltaEDes(similarityValue){var des='';if(similarityValue===0){des='Perception';}else if(similarityValue<=1){des='Not perceptible by human eyes';}else if(similarityValue<=2){des='Perceptible through close observation';}else if(similarityValue<=10){des='Perceptible at a glance';}else if(similarityValue<=49){des='Similar than opposite';}else if(similarityValue>49){des='Exact opposite';}return des;}export function diffColors(colorA,colorB){return deltaEFromString(colorA,colorB,false);}","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/utils/color.ts"],"names":["isColorName","isExceptionalColor","isHex","isHexA","isRGB","isRGBA","isHSL","isHSLA","checkResult","isColor","isExceptional","checkResultKeys","Object","colorType","item","type","RegExpHex","RegExpRGB","RegExpRGBA","RegExpHSL","RegExpHSLA","key","colorName","STANDARD_COLOR_NAME_ALL","getColorByName","EXCEPTIONAL_COLOR","getExceptionalColor","rgba","parseFloat","r","rgb","g","b","Math","x","y","z","colorATolerance","colorFaultTolerance","colorBTolerance","rgbA","ColorTranslator","rgbB","rgbaArrayA","rgbaStringToRgbaArray","rgbaArrayB","labA","rgbArrayToLab","labB","deltaL","deltaA","deltaB","c1","c2","deltaC","deltaH","sc","sh","deltaLKlsl","deltaCkcsc","deltaHkhsh","i","deltaEDiff","alphaDiff","alphaDiffS","des","similarityValue","deltaEFromString"],"mappings":"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","sourcesContent":["import {CheckColor, CheckColorResult, CheckResultType} from '../types';\nimport {EXCEPTIONAL_COLOR, STANDARD_COLOR_NAME_ALL} from '../constants';\nimport {ColorTranslator} from 'colortranslator';\n\nexport function isColor(colorString: string) {\n    if (isColorName(colorString)) {\n        return true;\n    }\n    if (isExceptionalColor(colorString)) {\n        return true;\n    }\n    if (isHex(colorString)) {\n        return true;\n    }\n    if (isHexA(colorString)) {\n        return true;\n    }\n    if (isRGB(colorString)) {\n        return true;\n    }\n    if (isRGBA(colorString)) {\n        return true;\n    }\n    if (isHSL(colorString)) {\n        return true;\n    }\n    if (isHSLA(colorString)) {\n        return true;\n    }\n\n    return false;\n    // const RegExpColor = /^(?:#(?:[A-Fa-f0-9]{3}){1,2}|(?:rgb[(](?:\\s*0*(?:\\d\\d?(?:\\.\\d+)?(?:\\s*%)?|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%|(?:1\\d\\d|2[0-4]\\d|25[0-5])(?:\\.\\d+)?)\\s*(?:,(?![)])|(?=[)]))){3}|hsl[(]\\s*0*(?:[12]?\\d{1,2}|3(?:[0-5]\\d|60))\\s*(?:\\s*,\\s*0*(?:\\d\\d?(?:\\.\\d+)?\\s*%|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%)){2}\\s*|(?:rgba[(](?:\\s*0*(?:\\d\\d?(?:\\.\\d+)?(?:\\s*%)?|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%|(?:1\\d\\d|2[0-4]\\d|25[0-5])(?:\\.\\d+)?)\\s*,){3}|hsla[(]\\s*0*(?:[12]?\\d{1,2}|3(?:[0-5]\\d|60))\\s*(?:\\s*,\\s*0*(?:\\d\\d?(?:\\.\\d+)?\\s*%|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%)){2}\\s*,)\\s*0*(?:\\.\\d+|1(?:\\.0*)?)\\s*)[)])$/\n    // return RegExpColor.test(colorString);\n}\n\nexport function checkColor(colorString: string) {\n    const checkResult: CheckColorResult = {\n        isColor: isColor(colorString),\n        isColorName: isColorName(colorString),\n        isExceptional: isExceptionalColor(colorString),\n        isHex: isHex(colorString),\n        isHexA: isHexA(colorString),\n        isRGB: isRGB(colorString),\n        isRGBA: isRGBA(colorString),\n        isHSL: isHSL(colorString),\n        isHSLA: isHSLA(colorString),\n    };\n    const checkResultKeys = Object.keys(checkResult) as CheckColor[];\n    let colorType: CheckResultType = '';\n    for (let item of checkResultKeys) {\n        if (item !== 'isColor') {\n            colorType = (checkResult[item] ? item.substr(2, item.length - 2) : '') as CheckResultType;\n            if (colorType) {\n                break;\n            }\n        }\n    }\n    return {...checkResult, type: colorType};\n}\n\n\nexport function isHex(colorString: string) {\n    const RegExpHex = /^#(?:[A-Fa-f0-9]{3}){1,2}$/;\n    return RegExpHex.test(colorString);\n}\n\nexport function isHexA(colorString: string) {\n    const RegExpHex = /^#(?:[A-Fa-f0-9]{4}){1,2}$/;\n    return RegExpHex.test(colorString);\n}\n\nexport function isRGB(colorString: string) {\n    const RegExpRGB = /^rgb[(](?:\\s*0*(?:\\d\\d?(?:\\.\\d+)?(?:\\s*%)?|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%|(?:1\\d\\d|2[0-4]\\d|25[0-5])(?:\\.\\d+)?)\\s*(?:,(?![)])|(?=[)]))){3}[)]$/;\n    return RegExpRGB.test(colorString);\n}\n\nexport function isRGBA(colorString: string) {\n    const RegExpRGBA = /^rgba[(](?:\\s*0*(?:\\d\\d?(?:\\.\\d+)?(?:\\s*%)?|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%|(?:1\\d\\d|2[0-4]\\d|25[0-5])(?:\\.\\d+)?)\\s*,){3}\\s*0*(?:\\.\\d+|1(?:\\.0*)?)\\s*[)]$/;\n    return RegExpRGBA.test(colorString);\n}\n\nexport function isHSL(colorString: string) {\n    const RegExpHSL = /^hsl[(]\\s*0*(?:[12]?\\d{1,2}|3(?:[0-5]\\d|60))\\s*(?:\\s*,\\s*0*(?:\\d\\d?(?:\\.\\d+)?\\s*%|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%)){2}\\s*[)]$/;\n    return RegExpHSL.test(colorString);\n}\n\nexport function isHSLA(colorString: string) {\n    const RegExpHSLA = /^hsla[(]\\s*0*(?:[12]?\\d{1,2}|3(?:[0-5]\\d|60))\\s*(?:\\s*,\\s*0*(?:\\d\\d?(?:\\.\\d+)?\\s*%|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%)){2}\\s*,\\s*0*(?:\\.\\d+|1(?:\\.0*)?)\\s*[)]$/;\n    return RegExpHSLA.test(colorString);\n}\n\nexport function getColorByName(colorName: string) {\n    const key = colorName.toLowerCase() as keyof typeof STANDARD_COLOR_NAME_ALL;\n    return STANDARD_COLOR_NAME_ALL[key];\n}\n\nexport function isColorName(colorName: string) {\n    return !!getColorByName(colorName);\n}\n\nexport function getExceptionalColor(colorName: string) {\n    const key = colorName.toLowerCase() as keyof typeof EXCEPTIONAL_COLOR;\n    return EXCEPTIONAL_COLOR[key];\n}\n\nexport function isExceptionalColor(colorName: string) {\n    return !!getExceptionalColor(colorName);\n}\n\nexport function colorFaultTolerance(colorString: string) {\n    if (!isColor(colorString)) {\n        return '';\n    }\n    if (isExceptionalColor(colorString)) {\n        return getExceptionalColor(colorString).RGBA;\n    }\n    if (isColorName(colorString)) {\n        return getColorByName(colorString).RGBA;\n    }\n    return colorString;\n}\n\n\nexport function rgbaStringToRgbaArray(rgba: string) {\n    return rgba.substring(5, rgba.length - 1)\n        .replace(/ /g, '')\n        .split(',').map(item => {\n            return parseFloat(item);\n        });\n}\n\nexport function rgbArrayToLab(rgb: number[]) {\n    let r = rgb[0] / 255, g = rgb[1] / 255, b = rgb[2] / 255, x, y, z;\n    r = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\n    y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.00000;\n    z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\n    x = (x > 0.008856) ? Math.pow(x, 1 / 3) : (7.787 * x) + 16 / 116;\n    y = (y > 0.008856) ? Math.pow(y, 1 / 3) : (7.787 * y) + 16 / 116;\n    z = (z > 0.008856) ? Math.pow(z, 1 / 3) : (7.787 * z) + 16 / 116;\n    return [(116 * y) - 16, 500 * (x - y), 200 * (y - z)];\n}\n\n\nexport function deltaEFromString(colorA: string, colorB: string, shouldDiffAlpha: boolean) {\n    // todo some diff of colors are over 100,need ensure if that a bug\n    const colorATolerance = colorFaultTolerance(colorA);\n    const colorBTolerance = colorFaultTolerance(colorB);\n    if (!colorATolerance || !colorBTolerance) {\n        return 100;\n    }\n    const rgbA = ColorTranslator.toRGBA(colorATolerance);\n    const rgbB = ColorTranslator.toRGBA(colorBTolerance);\n    const rgbaArrayA = rgbaStringToRgbaArray(rgbA);\n    const rgbaArrayB = rgbaStringToRgbaArray(rgbB);\n    let labA = rgbArrayToLab(rgbaArrayA);\n    let labB = rgbArrayToLab(rgbaArrayB);\n    let deltaL = labA[0] - labB[0];\n    let deltaA = labA[1] - labB[1];\n    let deltaB = labA[2] - labB[2];\n    let c1 = Math.sqrt(labA[1] * labA[1] + labA[2] * labA[2]);\n    let c2 = Math.sqrt(labB[1] * labB[1] + labB[2] * labB[2]);\n    let deltaC = c1 - c2;\n    let deltaH = deltaA * deltaA + deltaB * deltaB - deltaC * deltaC;\n    deltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH);\n    let sc = 1.0 + 0.045 * c1;\n    let sh = 1.0 + 0.015 * c1;\n    let deltaLKlsl = deltaL / (1.0);\n    let deltaCkcsc = deltaC / (sc);\n    let deltaHkhsh = deltaH / (sh);\n    let i = deltaLKlsl * deltaLKlsl + deltaCkcsc * deltaCkcsc + deltaHkhsh * deltaHkhsh;\n\n    let deltaEDiff = i < 0 ? 0 : Math.sqrt(i);\n    if (shouldDiffAlpha) {\n        let alphaDiff = rgbaArrayA[3] - rgbaArrayB[3];\n        let alphaDiffS = 100 * Math.sqrt(alphaDiff * alphaDiff);\n        return deltaEDiff;\n    } else {\n        return deltaEDiff;\n    }\n\n    // Delta E\tPerception\n    // <= 1.0\tNot perceptible by human eyes.\n    // 1 - 2\tPerceptible through close observation.\n    // 2 - 10\tPerceptible at a glance.\n    // 11 - 49\tColors are more similar than opposite\n    // 100\tColors are exact opposite\n}\n\n\nexport function deltaEDes(similarityValue: number) {\n    let des = '';\n    if (similarityValue === 0) {\n        des = 'Perception';\n    } else if (similarityValue <= 1) {\n        des = 'Not perceptible by human eyes';\n    } else if (similarityValue <= 2) {\n        des = 'Perceptible through close observation';\n    } else if (similarityValue <= 10) {\n        des = 'Perceptible at a glance';\n    } else if (similarityValue <= 49) {\n        des = 'Similar than opposite';\n    } else if (similarityValue > 49) {\n        des = 'Exact opposite';\n    }\n    return des;\n}\n\nexport function diffColors(colorA: string, colorB: string) {\n    return deltaEFromString(colorA, colorB, false);\n}\n\n"]},"metadata":{},"sourceType":"module"}