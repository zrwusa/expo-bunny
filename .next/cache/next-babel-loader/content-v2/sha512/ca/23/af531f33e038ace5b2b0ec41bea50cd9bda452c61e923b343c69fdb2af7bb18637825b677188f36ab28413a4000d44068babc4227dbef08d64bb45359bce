{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}import{Stack}from\"../../data-structures/stack\";import{DeepProxy}from'@qiwi/deep-proxy';import{wait}from\"../../utils\";export var isValidParenthesis=function isValidParenthesis(input,proxyHandler){var _input$match;var onlyHashKey,variablesProxy,hash,_iterator,_step,char,top;return _regeneratorRuntime.async(function isValidParenthesis$(_context){while(1){switch(_context.prev=_context.next){case 0:onlyHashKey=(_input$match=input.match(/[{}\\[\\]()]/g))==null?void 0:_input$match.join('');if(onlyHashKey){_context.next=3;break;}return _context.abrupt(\"return\",false);case 3:variablesProxy=new DeepProxy({stack:new Stack(),char:''},proxyHandler);hash={'(':')','{':'}','[':']'};_iterator=_createForOfIteratorHelperLoose(onlyHashKey);case 6:if((_step=_iterator()).done){_context.next=19;break;}char=_step.value;_context.next=10;return _regeneratorRuntime.awrap(wait(500));case 10:if(!(char in hash)){_context.next=14;break;}variablesProxy.stack.push(char);_context.next=17;break;case 14:top=variablesProxy.stack.pop();if(!(top===null||hash[top]!==char)){_context.next=17;break;}return _context.abrupt(\"return\",false);case 17:_context.next=6;break;case 19:return _context.abrupt(\"return\",!variablesProxy.stack.size());case 20:case\"end\":return _context.stop();}}},null,null,null,Promise);};","map":null,"metadata":{},"sourceType":"module"}