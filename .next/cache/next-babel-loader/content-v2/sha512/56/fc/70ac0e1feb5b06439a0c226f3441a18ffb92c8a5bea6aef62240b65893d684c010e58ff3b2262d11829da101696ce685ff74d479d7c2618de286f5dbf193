{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{HeapNode}from\"../heap\";/**\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n * @license MIT\n *\n * @abstract\n * @class PriorityQueue\n */export var PriorityQueue=function(){function PriorityQueue(options){_classCallCheck(this,PriorityQueue);if(options){var priority=options.priority;if(priority!==undefined&&typeof priority!=='function'){throw new Error('.constructor expects a valid priority function');}this._priorityCb=priority||function(el){return+el;};}else{this._priorityCb=function(el){return+el;};}}_createClass(PriorityQueue,[{key:\"_getElementWithPriority\",value:function _getElementWithPriority(node){return{priority:node.id,element:node.val};}},{key:\"size\",value:function size(){return this._heap.size();}},{key:\"isEmpty\",value:function isEmpty(){return this._heap.isEmpty();}},{key:\"front\",value:function front(){var peek=this._heap.peek();if(!peek){return null;}return this._getElementWithPriority(peek);}},{key:\"back\",value:function back(){var leaf=this._heap.leaf();if(!leaf){return null;}return this._getElementWithPriority(leaf);}},{key:\"enqueue\",value:function enqueue(element,priority){if(typeof element==='number'||typeof element==='string'){priority=element;}if(priority===undefined){throw new Error('.enqueue expects a numeric priority');}if(priority&&Number.isNaN(+priority)){throw new Error('.enqueue expects a numeric priority');}if(Number.isNaN(+priority)&&Number.isNaN(this._priorityCb(element))){throw new Error('.enqueue expects a numeric priority '+'or a constructor callback that returns a number');}var _priority=!Number.isNaN(+priority)?priority:this._priorityCb(element);this._heap.insert(new HeapNode(_priority,element));return this;}},{key:\"dequeue\",value:function dequeue(){var top=this._heap.poll();if(!top){return null;}return this._getElementWithPriority(top);}},{key:\"toArray\",value:function toArray(){var _this=this;return this._heap.clone().sort('node').map(function(n){return _this._getElementWithPriority(n);}).reverse();}},{key:\"clear\",value:function clear(){this._heap.clear();}}]);return PriorityQueue;}();","map":null,"metadata":{},"sourceType":"module"}