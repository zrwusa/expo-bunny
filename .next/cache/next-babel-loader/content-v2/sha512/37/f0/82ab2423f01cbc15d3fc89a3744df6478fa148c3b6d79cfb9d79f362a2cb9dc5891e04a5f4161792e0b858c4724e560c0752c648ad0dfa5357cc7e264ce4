{"ast":null,"code":"import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}export var AbstractBinaryTree=function(){function AbstractBinaryTree(idOrNode,val,count,allowDuplicate){_classCallCheck(this,AbstractBinaryTree);this._root=null;this._size=0;this._allowDuplicate=true;this._visitedId=[];this._visitedVal=[];this._visitedNode=[];this._visitedCount=[];this._visitedLeftSum=[];if(allowDuplicate===undefined){allowDuplicate=false;}this._allowDuplicate=allowDuplicate;if(idOrNode!==undefined){if(typeof idOrNode==='number'){this.root=this.createNode(idOrNode,val,count);}else{this.root=idOrNode;}this._size=1;}}_createClass(AbstractBinaryTree,[{key:\"root\",get:function get(){return this._root;},set:function set(v){if(v){v.parent=null;v.familyPosition=0;}this._root=v;}},{key:\"size\",get:function get(){return this.size;},set:function set(v){this._size=v;}},{key:\"allowDuplicate\",get:function get(){return this._allowDuplicate;},set:function set(v){this._allowDuplicate=v;}},{key:\"clear\",value:function clear(){this.root=null;this._size=0;}},{key:\"isEmpty\",value:function isEmpty(){return this._size===0;}},{key:\"insert\",value:function insert(id,val,count){var _this=this;if(count===undefined){count=1;}var _bfs=function _bfs(root,newNode){var queue=[root];while(queue.length>0){var cur=queue.shift();if(cur){if(!cur.left){newNode.parent=cur;newNode.familyPosition=1;cur.left=newNode;_this._size++;return cur.left;}if(!cur.right){newNode.parent=cur;newNode.familyPosition=2;cur.right=newNode;_this._size++;return cur.right;}cur.left&&queue.push(cur.left);cur.right&&queue.push(cur.right);}else{return null;}}return null;};var inserted=[];if(this._allowDuplicate){if(this.root){for(var i=0;i<count;i++){inserted.push(_bfs(this.root,new BinaryTreeNode(id,val,1)));}}else{this.root=new BinaryTreeNode(id,val,1);inserted.push(this.root);this._size=1;for(var _i=0;_i<count-1;_i++){inserted.push(_bfs(this.root,new BinaryTreeNode(id,val,1)));}}}else{var existNode=this.getNode(id);if(this.root){if(existNode){existNode.count+=count;inserted.push(existNode);}else{inserted.push(_bfs(this.root,new BinaryTreeNode(id,val,count)));}}else{this.root=new BinaryTreeNode(id,val,count);this._size=1;inserted.push(this.root);}}return inserted;}},{key:\"remove\",value:function remove(id){var nodes=[];nodes=this.getNodes(id);for(var _iterator=_createForOfIteratorHelperLoose(nodes),_step;!(_step=_iterator()).done;){var _node=_step.value;switch(_node.familyPosition){case 0:if(_node.left){}else if(_node.right){}break;case 1:break;case 2:break;}}return[{deleted:null,needBalanced:null}];}},{key:\"getDepth\",value:function getDepth(node){var depth=0;while(node.parent!==null){depth++;node=node.parent;}return depth;}},{key:\"getMinHeight\",value:function getMinHeight(beginRoot){var _beginRoot=beginRoot||this.root;var _getMinHeight=function _getMinHeight(cur){if(!cur)return 0;if(!cur.left&&!cur.right)return 0;var leftMinHeight=_getMinHeight(cur.left);var rightMinHeight=_getMinHeight(cur.right);return Math.min(leftMinHeight,rightMinHeight)+1;};if(_beginRoot){return _getMinHeight(_beginRoot);}else{return-1;}}},{key:\"getHeight\",value:function getHeight(beginRoot){var _beginRoot=beginRoot||this.root;var _getMaxHeight=function _getMaxHeight(cur){if(!cur)return 0;if(!cur.left&&!cur.right)return 0;var leftHeight=_getMaxHeight(cur.left);var rightHeight=_getMaxHeight(cur.right);return Math.max(leftHeight,rightHeight)+1;};if(_beginRoot){return _getMaxHeight(_beginRoot);}else{return-1;}}},{key:\"isBalanced\",value:function isBalanced(beginRoot){return this.getMinHeight(beginRoot)>=this.getHeight(beginRoot)+1;}},{key:\"getNodes\",value:function getNodes(nodeProperty,propertyName,onlyOne){if(propertyName===undefined){propertyName='id';}var result=[];function _traverse(cur){switch(propertyName){case'id':if(cur.id===nodeProperty){result.push(cur);if(onlyOne)return;}break;case'count':if(cur.count===nodeProperty){result.push(cur);if(onlyOne)return;}break;case'val':if(cur.val===nodeProperty){result.push(cur);if(onlyOne)return;}break;case'allLesserSum':if(cur.allLesserSum===nodeProperty){result.push(cur);if(onlyOne)return;}break;default:if(cur.id===nodeProperty){result.push(cur);if(onlyOne)return;}break;}if(!cur.left&&!cur.right)return null;cur.left?_traverse(cur.left):null;cur.right?_traverse(cur.right):null;}this.root&&_traverse(this.root);return result;}},{key:\"getNode\",value:function getNode(nodeProperty,propertyName){if(propertyName===undefined){propertyName='id';}var node=this.getNodes(nodeProperty,propertyName,true)[0];if(node){return node;}else{return null;}}},{key:\"getPathToRoot\",value:function getPathToRoot(node){var result=[];while(node.parent!==null){result.unshift(node);node=node.parent;}result.unshift(node);return result;}},{key:\"_resetResults\",value:function _resetResults(){this._visitedId=[];this._visitedVal=[];this._visitedNode=[];this._visitedCount=[];this._visitedLeftSum=[];}},{key:\"_pushByPropertyName\",value:function _pushByPropertyName(node,nodeOrPropertyName){if(nodeOrPropertyName===undefined){nodeOrPropertyName='id';}switch(nodeOrPropertyName){case'id':this._visitedId.push(node.id);break;case'val':this._visitedVal.push(node.val);break;case'node':this._visitedNode.push(node);break;case'count':this._visitedCount.push(node.count);break;case'allLesserSum':this._visitedLeftSum.push(node.allLesserSum);break;default:this._visitedId.push(node.id);break;}}},{key:\"_getResultByPropertyName\",value:function _getResultByPropertyName(nodeOrPropertyName){if(nodeOrPropertyName===undefined){nodeOrPropertyName='id';}switch(nodeOrPropertyName){case'id':return this._visitedId;case'val':return this._visitedVal;case'node':return this._visitedNode;case'count':return this._visitedCount;case'allLesserSum':return this._visitedLeftSum;default:return this._visitedId;}}},{key:\"BFS\",value:function BFS(nodeOrPropertyName){if(nodeOrPropertyName===undefined){nodeOrPropertyName='id';}this._resetResults();var queue=new Array();queue.push(this.root);while(queue.length!==0){var cur=queue.shift();if(cur){this._pushByPropertyName(cur,nodeOrPropertyName);if((cur==null?void 0:cur.left)!==null)queue.push(cur.left);if((cur==null?void 0:cur.right)!==null)queue.push(cur.right);}}return this._getResultByPropertyName(nodeOrPropertyName);}},{key:\"DFS\",value:function DFS(pattern,nodeOrPropertyName){var _this2=this;if(pattern===undefined){pattern='in';}if(nodeOrPropertyName===undefined){nodeOrPropertyName='id';}this._resetResults();var _traverse=function _traverse(node){switch(pattern){case'in':if(node.left)_traverse(node.left);_this2._pushByPropertyName(node,nodeOrPropertyName);if(node.right)_traverse(node.right);break;case'pre':_this2._pushByPropertyName(node,nodeOrPropertyName);if(node.left)_traverse(node.left);if(node.right)_traverse(node.right);break;case'post':if(node.left)_traverse(node.left);if(node.right)_traverse(node.right);_this2._pushByPropertyName(node,nodeOrPropertyName);break;}};this.root&&_traverse(this.root);return this._getResultByPropertyName(nodeOrPropertyName);}},{key:\"DFSIterative\",value:function DFSIterative(pattern,nodeOrPropertyName){pattern=pattern||'in';nodeOrPropertyName=nodeOrPropertyName||'id';this._resetResults();if(!this.root)return this._getResultByPropertyName(nodeOrPropertyName);var stack=[];stack.push({opt:0,node:this.root});while(stack.length>0){var cur=stack.pop();if(!cur||!cur.node)continue;if(cur.opt===1){this._pushByPropertyName(cur.node,nodeOrPropertyName);}else{switch(pattern){case'in':stack.push({opt:0,node:cur.node.right});stack.push({opt:1,node:cur.node});stack.push({opt:0,node:cur.node.left});break;case'pre':stack.push({opt:0,node:cur.node.right});stack.push({opt:0,node:cur.node.left});stack.push({opt:1,node:cur.node});break;case'post':stack.push({opt:1,node:cur.node});stack.push({opt:0,node:cur.node.right});stack.push({opt:0,node:cur.node.left});break;default:stack.push({opt:0,node:cur.node.right});stack.push({opt:1,node:cur.node});stack.push({opt:0,node:cur.node.left});break;}}}return this._getResultByPropertyName(nodeOrPropertyName);}},{key:\"getPredecessor\",value:function getPredecessor(node){if(node.left){var predecessor=node.left;while(predecessor.right&&predecessor.right!==node){predecessor=predecessor.right;}return predecessor;}else{return node;}}},{key:\"morris\",value:function morris(pattern,nodeOrPropertyName){var _this3=this;if(this.root===null){return[];}pattern=pattern||'in';nodeOrPropertyName=nodeOrPropertyName||'id';this._resetResults();var cur=this.root;switch(pattern){case'in':while(cur){if(cur.left){var predecessor=this.getPredecessor(cur);if(!predecessor.right){predecessor.right=cur;cur=cur.left;continue;}else{predecessor.right=null;}}this._pushByPropertyName(cur,nodeOrPropertyName);cur=cur.right;}break;case'pre':while(cur){if(cur.left){var _predecessor=this.getPredecessor(cur);if(!_predecessor.right){_predecessor.right=cur;this._pushByPropertyName(cur,nodeOrPropertyName);cur=cur.left;continue;}else{_predecessor.right=null;}}else{this._pushByPropertyName(cur,nodeOrPropertyName);}cur=cur.right;}break;case'post':var reverseEdge=function reverseEdge(node){var pre=null;var next=null;while(node){next=node.right;node.right=pre;pre=node;node=next;}return pre;};var printEdge=function printEdge(node){var tail=reverseEdge(node);var cur=tail;while(cur){_this3._pushByPropertyName(cur,nodeOrPropertyName);cur=cur.right;}reverseEdge(tail);};while(cur){if(cur.left){var _predecessor2=this.getPredecessor(cur);if(_predecessor2.right===null){_predecessor2.right=cur;cur=cur.left;continue;}else{_predecessor2.right=null;printEdge(cur.left);}}cur=cur.right;}printEdge(this.root);break;}return this._getResultByPropertyName(nodeOrPropertyName);}},{key:\"subTreeSum\",value:function subTreeSum(subTreeRoot,propertyName){if(propertyName===undefined){propertyName='id';}var sum=0;function _traverse(cur){var needSum;switch(propertyName){case'id':needSum=cur.id;break;case'count':needSum=cur.count;break;case'allLesserSum':needSum=cur.allLesserSum;break;default:needSum=cur.id;break;}sum+=needSum;if(!cur.left&&!cur.right)return;cur.left&&_traverse(cur.left);cur.right&&_traverse(cur.right);}subTreeRoot&&_traverse(subTreeRoot);return sum;}}]);return AbstractBinaryTree;}();export var BinaryTreeNode=function(){function BinaryTreeNode(id,val,count){_classCallCheck(this,BinaryTreeNode);this._val=null;this._left=null;this._right=null;this._parent=null;this._familyPosition=0;this._count=1;this._height=0;this._allLesserSum=0;if(val===undefined){val=null;}if(count===undefined){count=1;}this._id=id;this._val=val;this._count=count;}_createClass(BinaryTreeNode,[{key:\"id\",get:function get(){return this._id;},set:function set(v){this._id=v;}},{key:\"val\",get:function get(){return this._val;},set:function set(v){this._val=v;}},{key:\"left\",get:function get(){return this._left;},set:function set(v){if(v){v.parent=this;v.familyPosition=1;}this._left=v;}},{key:\"right\",get:function get(){return this._right;},set:function set(v){if(v){v.parent=this;v.familyPosition=2;}this._right=v;}},{key:\"parent\",get:function get(){return this._parent;},set:function set(v){this._parent=v;}},{key:\"familyPosition\",get:function get(){return this._familyPosition;},set:function set(v){this._familyPosition=v;}},{key:\"count\",get:function get(){return this._count;},set:function set(v){this._count=v;}},{key:\"height\",get:function get(){return this._height;},set:function set(v){this._height=v;}},{key:\"allLesserSum\",get:function get(){return this._allLesserSum;},set:function set(v){this._allLesserSum=v;}},{key:\"replaceLocation\",value:function replaceLocation(replaceNode){this._id=replaceNode.id;this._val=replaceNode.val;this._count=replaceNode.count;this._allLesserSum=replaceNode.allLesserSum;this._height=replaceNode.height;return true;}},{key:\"swapLocation\",value:function swapLocation(swapNode){var tempNode=new BinaryTreeNode(swapNode.id);var val=swapNode.val,count=swapNode.count,height=swapNode.height,allLesserSum=swapNode.allLesserSum;tempNode.val=val;tempNode.count=count;tempNode.height=height;tempNode.allLesserSum=allLesserSum;swapNode.id=this._id;swapNode.val=this._val;swapNode.count=this._count;swapNode.height=this._height;swapNode.allLesserSum=this._allLesserSum;this._id=tempNode.id;this._val=tempNode.val;this._count=tempNode.count;this._height=tempNode.height;this._allLesserSum=tempNode.allLesserSum;return swapNode;}},{key:\"clone\",value:function clone(){return new BinaryTreeNode(this._id,this._val,this._count);}}]);return BinaryTreeNode;}();export var BinaryTree=function(_AbstractBinaryTree){_inherits(BinaryTree,_AbstractBinaryTree);var _super=_createSuper(BinaryTree);function BinaryTree(){_classCallCheck(this,BinaryTree);return _super.apply(this,arguments);}_createClass(BinaryTree,[{key:\"createNode\",value:function createNode(id,val,count){return new BinaryTreeNode(id,val,count);}}]);return BinaryTree;}(AbstractBinaryTree);","map":null,"metadata":{},"sourceType":"module"}