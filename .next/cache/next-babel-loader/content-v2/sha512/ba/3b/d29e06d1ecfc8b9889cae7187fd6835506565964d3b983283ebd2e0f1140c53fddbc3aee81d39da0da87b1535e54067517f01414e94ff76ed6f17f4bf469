{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _this=this,_jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/components/StickerPicker/StickerPicker.tsx\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{useBunnyKit}from\"../../hooks/bunny-kit\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import React,{useEffect,useRef,useState}from'react';import{useKeyboardHeight}from\"../../hooks/keyboard-height\";import{useFirebase}from'react-redux-firebase';import{makeStyles}from\"./styles\";import{CachedImage}from\"../CachedImage\";export var StickerPicker=function StickerPicker(_ref){var _ref$isShow=_ref.isShow,isShow=_ref$isShow===void 0?false:_ref$isShow,onValueChanged=_ref.onValueChanged,_ref$quality=_ref.quality,quality=_ref$quality===void 0?'MEDIUM':_ref$quality;var _useBunnyKit=useBunnyKit(),sizeLabor=_useBunnyKit.sizeLabor,themeLabor=_useBunnyKit.themeLabor;var _useKeyboardHeight=useKeyboardHeight(),currentHeight=_useKeyboardHeight.currentHeight;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),stickers=_useState2[0],setStickers=_useState2[1];var firebase=useFirebase();var styles=makeStyles(sizeLabor,themeLabor);var isMounted=useRef(false);var qualityMap={LOW:'ShaunTheSheep128/',MEDIUM:'ShaunTheSheep256/',HIGH:'ShaunTheSheep/'};var shaunTheSheepRef=firebase.storage().ref(qualityMap[quality]);useEffect(function(){isMounted.current=true;(function _callee2(){var allStickerRef,stickers;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regeneratorRuntime.awrap(shaunTheSheepRef.listAll());case 2:allStickerRef=_context2.sent;_context2.next=5;return _regeneratorRuntime.awrap(Promise.all(allStickerRef.items.map(function _callee(stickerRef){var url;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(stickerRef.getDownloadURL());case 2:url=_context.sent;return _context.abrupt(\"return\",{id:stickerRef.fullPath,url:url});case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);})));case 5:stickers=_context2.sent;isMounted.current&&setStickers(stickers);case 7:case\"end\":return _context2.stop();}}},null,null,null,Promise);})();return function(){isMounted.current=false;};},[]);return isShow?React.createElement(View,{style:{height:currentHeight||346},__self:_this,__source:{fileName:_jsxFileName,lineNumber:60,columnNumber:11}},React.createElement(ScrollView,{contentContainerStyle:styles.panel,__self:_this,__source:{fileName:_jsxFileName,lineNumber:61,columnNumber:13}},stickers.map(function(sticker){return React.createElement(View,{key:sticker.id,__self:_this,__source:{fileName:_jsxFileName,lineNumber:64,columnNumber:32}},React.createElement(TouchableOpacity,{onPress:function _callee3(){return _regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:onValueChanged&&onValueChanged(sticker.url);case 1:case\"end\":return _context3.stop();}}},null,null,null,Promise);},__self:_this,__source:{fileName:_jsxFileName,lineNumber:65,columnNumber:29}},React.createElement(CachedImage,{style:styles.stickerImage,source:{uri:sticker.url},__self:_this,__source:{fileName:_jsxFileName,lineNumber:69,columnNumber:33}})));}))):null;};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/components/StickerPicker/StickerPicker.tsx"],"names":["StickerPicker","isShow","onValueChanged","quality","sizeLabor","themeLabor","useBunnyKit","currentHeight","useKeyboardHeight","stickers","setStickers","useState","firebase","useFirebase","styles","makeStyles","isMounted","useRef","qualityMap","LOW","MEDIUM","HIGH","shaunTheSheepRef","useEffect","allStickerRef","url","stickerRef","id","height","sticker","uri"],"mappings":"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","sourcesContent":["// TODO crash when large gif images loaded\nimport {useBunnyKit} from '../../hooks/bunny-kit';\nimport {ScrollView, TouchableOpacity, View} from 'react-native';\nimport React, {useEffect, useRef, useState} from 'react';\nimport {useKeyboardHeight} from '../../hooks/keyboard-height';\nimport {useFirebase} from 'react-redux-firebase';\nimport {Sticker} from '../../types';\nimport {makeStyles} from './styles';\nimport {CachedImage} from '../CachedImage';\n\nexport type Quality = 'LOW' | 'MEDIUM' | 'HIGH'\n\nexport interface StickerPickerProps {\n    isShow: boolean,\n    onValueChanged: (uri: string) => void,\n    quality?: Quality\n}\n\nexport const StickerPicker = ({isShow = false, onValueChanged, quality = 'MEDIUM'}: StickerPickerProps) => {\n    const {sizeLabor, themeLabor} = useBunnyKit();\n    const {currentHeight} = useKeyboardHeight();\n    const [stickers, setStickers] = useState<Sticker[]>([]);\n    const firebase = useFirebase();\n    const styles = makeStyles(sizeLabor, themeLabor);\n    const isMounted = useRef(false);\n\n    const qualityMap: { [key in Quality]: string } = {\n        LOW: 'ShaunTheSheep128/',\n        MEDIUM: 'ShaunTheSheep256/',\n        HIGH: 'ShaunTheSheep/'\n    };\n\n    const shaunTheSheepRef = firebase.storage().ref(qualityMap[quality]);\n\n    useEffect(() => {\n        isMounted.current = true;\n        (async () => {\n            // let stickers = []\n            // for (let i = 0; i < 20; i++) {\n            //     stickers.push({id: uuidV4(), url: 'https://raw.githubusercontent.com/zrwusa/assets/master/images/mcenany-avatar.jpeg'})\n            // }\n            // setStickers(stickers)\n\n            const allStickerRef = await shaunTheSheepRef.listAll();\n\n            const stickers = await Promise.all(allStickerRef.items.map(async (stickerRef) => {\n                const url = await stickerRef.getDownloadURL();\n                return {id: stickerRef.fullPath, url};\n            }));\n\n            isMounted.current && setStickers(stickers);\n        })();\n\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n\n    return isShow\n        ? <View style={{height: currentHeight || 346}}>\n            <ScrollView contentContainerStyle={styles.panel}>\n                {\n                    stickers.map((sticker => {\n                        return <View key={sticker.id}>\n                            <TouchableOpacity onPress={async () => {\n                                onValueChanged && onValueChanged(sticker.url);\n                            }}>\n                                {/*<Image style={styles.stickerImage} source={{uri: sticker.url}}/>*/}\n                                <CachedImage style={styles.stickerImage} source={{uri: sticker.url}}/>\n                            </TouchableOpacity>\n                        </View>;\n                    }))\n                }\n            </ScrollView>\n        </View>\n        : null;\n};\n"]},"metadata":{},"sourceType":"module"}