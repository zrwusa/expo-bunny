{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{HeapNode}from\"../heap\";/**\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n * @license MIT\n *\n * @abstract\n * @class PriorityQueue\n */export var PriorityQueue=function(){function PriorityQueue(options){_classCallCheck(this,PriorityQueue);if(options){var priority=options.priority;if(priority!==undefined&&typeof priority!=='function'){throw new Error('.constructor expects a valid priority function');}this._priorityCb=priority||function(el){return+el;};}else{this._priorityCb=function(el){return+el;};}}_createClass(PriorityQueue,[{key:\"_getElementWithPriority\",value:function _getElementWithPriority(node){return{priority:node.id,element:node.val};}},{key:\"size\",value:function size(){return this._heap.size();}},{key:\"isEmpty\",value:function isEmpty(){return this._heap.isEmpty();}},{key:\"front\",value:function front(){var peek=this._heap.peek();if(!peek){return null;}return this._getElementWithPriority(peek);}},{key:\"back\",value:function back(){var leaf=this._heap.leaf();if(!leaf){return null;}return this._getElementWithPriority(leaf);}},{key:\"enqueue\",value:function enqueue(element,priority){if(typeof element==='number'||typeof element==='string'){priority=element;}if(priority===undefined){throw new Error('.enqueue expects a numeric priority');}if(priority&&Number.isNaN(+priority)){throw new Error('.enqueue expects a numeric priority');}if(Number.isNaN(+priority)&&Number.isNaN(this._priorityCb(element))){throw new Error('.enqueue expects a numeric priority '+'or a constructor callback that returns a number');}var _priority=!Number.isNaN(+priority)?priority:this._priorityCb(element);this._heap.insert(new HeapNode(_priority,element));return this;}},{key:\"dequeue\",value:function dequeue(){var top=this._heap.poll();if(!top){return null;}return this._getElementWithPriority(top);}},{key:\"toArray\",value:function toArray(){var _this=this;return this._heap.clone().sort('node').map(function(n){return _this._getElementWithPriority(n);}).reverse();}},{key:\"clear\",value:function clear(){this._heap.clear();}}]);return PriorityQueue;}();","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/utils/data-structures/priority-queue/priority-queue.ts"],"names":["PriorityQueue","priority","options","node","element","val","peek","leaf","Number","_priority","top"],"mappings":"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","sourcesContent":["import {Heap, HeapNode} from '../heap';\n\nexport interface PriorityQueueOptions<T> {\n    priority?: (element: T) => number;\n}\n\nexport interface PriorityQueueItem<T> {\n    priority: number | string;\n    element: T | null;\n}\n\n/**\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n * @license MIT\n *\n * @abstract\n * @class PriorityQueue\n */\nexport abstract class PriorityQueue<T> {\n    protected abstract _heap: Heap<HeapNode<T>, T>;\n    protected _priorityCb: (element: T) => number;\n\n    /**\n     * Creates a priority queue\n     * @public\n     * @params {object} [options]\n     */\n    protected constructor(options?: PriorityQueueOptions<T>) {\n        if (options) {\n            const {priority} = options;\n            if (priority !== undefined && typeof priority !== 'function') {\n                throw new Error('.constructor expects a valid priority function');\n            }\n            this._priorityCb = priority || ((el) => +el);\n        } else {\n            this._priorityCb = (el) => +el;\n        }\n\n    }\n\n    /**\n     * @private\n     * @returns {object}\n     */\n    _getElementWithPriority(node: HeapNode<T>): PriorityQueueItem<T> {\n        return {\n            priority: node.id,\n            element: node.val\n        };\n    }\n\n    /**\n     * @public\n     * @returns {number}\n     */\n    size(): number {\n        return this._heap.size();\n    }\n\n    /**\n     * @public\n     * @returns {boolean}\n     */\n    isEmpty(): boolean {\n        return this._heap.isEmpty();\n    }\n\n    /**\n     * Returns an element with highest priority in the queue\n     * @public\n     * @returns {object}\n     */\n    front(): PriorityQueueItem<T> | null {\n        const peek = this._heap.peek();\n        if (!peek) {\n            return null;\n        }\n        return this._getElementWithPriority(peek);\n    }\n\n    /**\n     * Returns an element with lowest priority in the queue\n     * @public\n     * @returns {object}\n     */\n    back(): PriorityQueueItem<T> | null {\n        const leaf = this._heap.leaf();\n        if (!leaf) {\n            return null;\n        }\n        return this._getElementWithPriority(leaf);\n    }\n\n    /**\n     * Adds an element to the queue\n     * @public\n     * @param {any} element\n     * @param priority\n     * @throws {Error} if priority is not a valid number\n     */\n    enqueue(element: T, priority?: number | string): PriorityQueue<T> {\n        if (typeof element === 'number' || typeof element === 'string') {\n            priority = element;\n        }\n\n        if (priority === undefined) {\n            throw new Error('.enqueue expects a numeric priority');\n        }\n        if (priority && Number.isNaN(+priority)) {\n            throw new Error('.enqueue expects a numeric priority');\n        }\n\n        if (Number.isNaN(+priority) && Number.isNaN(this._priorityCb(element))) {\n            throw new Error(\n                '.enqueue expects a numeric priority '\n                + 'or a constructor callback that returns a number'\n            );\n        }\n\n        const _priority = !Number.isNaN(+priority) ? priority : this._priorityCb(element);\n        this._heap.insert(new HeapNode<T>(_priority, element));\n        return this;\n    }\n\n    /**\n     * Removes and returns an element with highest priority in the queue\n     * @public\n     * @returns {object}\n     */\n    dequeue(): PriorityQueueItem<T> | null {\n        const top = this._heap.poll();\n        if (!top) {\n            return null;\n        }\n        return this._getElementWithPriority(top);\n    }\n\n    /**\n     * Returns a sorted list of elements from highest to lowest priority\n     * @public\n     * @returns {array}\n     */\n    toArray(): PriorityQueueItem<T>[] {\n        return this._heap\n            .clone()\n            .sort('node')\n            .map((n) => this._getElementWithPriority(n))\n            .reverse();\n    }\n\n    /**\n     * Clears the queue\n     * @public\n     */\n    clear(): void {\n        this._heap.clear();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}