{"ast":null,"code":"\"use strict\";var _interopRequireDefault2=require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2=_interopRequireDefault2(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault2(require(\"@babel/runtime/helpers/createClass\"));var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=void 0;var _router=require(\"../next-server/lib/router/router\");var _getAssetPathFromRoute=_interopRequireDefault(require(\"../next-server/lib/router/utils/get-asset-path-from-route\"));var _isDynamic=require(\"../next-server/lib/router/utils/is-dynamic\");var _parseRelativeUrl=require(\"../next-server/lib/router/utils/parse-relative-url\");var _normalizeTrailingSlash=require(\"./normalize-trailing-slash\");var _routeLoader=_interopRequireWildcard(require(\"./route-loader\"));function normalizeRoute(route){if(route[0]!=='/'){throw new Error(\"Route name should start with a \\\"/\\\", got \\\"\"+route+\"\\\"\");}if(route==='/')return route;return route.replace(/\\/$/,'');}var PageLoader=function(){function PageLoader(buildId,assetPrefix){(0,_classCallCheck2.default)(this,PageLoader);this.buildId=void 0;this.assetPrefix=void 0;this.promisedSsgManifest=void 0;this.promisedDevPagesManifest=void 0;this.routeLoader=void 0;this.routeLoader=(0,_routeLoader.default)(assetPrefix);this.buildId=buildId;this.assetPrefix=assetPrefix;this.promisedSsgManifest=new Promise(function(resolve){if(window.__SSG_MANIFEST){resolve(window.__SSG_MANIFEST);}else{;window.__SSG_MANIFEST_CB=function(){resolve(window.__SSG_MANIFEST);};}});}(0,_createClass2.default)(PageLoader,[{key:\"getPageList\",value:function getPageList(){if(false){return(0,_routeLoader.getClientBuildManifest)().then(function(manifest){return manifest.sortedPages;});}else{if(window.__DEV_PAGES_MANIFEST){return window.__DEV_PAGES_MANIFEST.pages;}else{if(!this.promisedDevPagesManifest){this.promisedDevPagesManifest=fetch(this.assetPrefix+\"/_next/static/development/_devPagesManifest.json\").then(function(res){return res.json();}).then(function(manifest){;window.__DEV_PAGES_MANIFEST=manifest;return manifest.pages;}).catch(function(err){console.log(\"Failed to fetch devPagesManifest\",err);});}return this.promisedDevPagesManifest;}}}},{key:\"getDataHref\",value:function getDataHref(href,asPath,ssg,locale){var _this=this;var _ref=(0,_parseRelativeUrl.parseRelativeUrl)(href),hrefPathname=_ref.pathname,query=_ref.query,search=_ref.search;var _ref2=(0,_parseRelativeUrl.parseRelativeUrl)(asPath),asPathname=_ref2.pathname;var route=normalizeRoute(hrefPathname);var getHrefForSlug=function getHrefForSlug(path){var dataRoute=(0,_getAssetPathFromRoute.default)((0,_normalizeTrailingSlash.removePathTrailingSlash)((0,_router.addLocale)(path,locale)),'.json');return(0,_router.addBasePath)(\"/_next/data/\"+_this.buildId+dataRoute+(ssg?'':search));};var isDynamic=(0,_isDynamic.isDynamicRoute)(route);var interpolatedRoute=isDynamic?(0,_router.interpolateAs)(hrefPathname,asPathname,query).result:'';return isDynamic?interpolatedRoute&&getHrefForSlug(interpolatedRoute):getHrefForSlug(route);}},{key:\"_isSsg\",value:function _isSsg(route){return this.promisedSsgManifest.then(function(s){return s.has(route);});}},{key:\"loadPage\",value:function loadPage(route){return this.routeLoader.loadRoute(route).then(function(res){if('component'in res){return{page:res.component,mod:res.exports,styleSheets:res.styles.map(function(o){return{href:o.href,text:o.content};})};}throw res.error;});}},{key:\"prefetch\",value:function prefetch(route){return this.routeLoader.prefetch(route);}}]);return PageLoader;}();exports.default=PageLoader;","map":{"version":3,"sources":["../../client/page-loader.ts"],"names":["route","PageLoader","buildId","assetPrefix","promisedSsgManifest","promisedDevPagesManifest","routeLoader","constructor","resolve","window","getPageList","manifest","fetch","res","err","console","getDataHref","pathname","normalizeRoute","getHrefForSlug","path","dataRoute","ssg","isDynamic","interpolatedRoute","_isSsg","s","loadPage","page","mod","styleSheets","o","href","text","prefetch"],"mappings":"gfAEA,GAAA,CAAA,OAAA,CAAA,OAAA,oCAAA,CAKA,GAAA,CAAA,sBAAA,CAAA,sBAAA,CAAA,OAAA,6DAAA,CAAA,CACA,GAAA,CAAA,UAAA,CAAA,OAAA,8CAAA,CACA,GAAA,CAAA,iBAAA,CAAA,OAAA,sDAAA,CACA,GAAA,CAAA,uBAAA,CAAA,OAAA,8BAAA,CACA,GAAA,CAAA,YAAA,CAAA,uBAAA,CAAA,OAAA,kBAAA,CAAA,CAKA,QAAA,CAAA,cAAA,CAAA,KAAA,CAA+C,CAC7C,GAAIA,KAAK,CAALA,CAAK,CAALA,GAAJ,GAAA,CAAsB,CACpB,KAAM,IAAA,CAAA,KAAA,gDAAN,KAAM,MAAN,CAGF,IAAIA,KAAK,GAAT,GAAA,CAAmB,MAAA,CAAA,KAAA,CACnB,MAAOA,CAAAA,KAAK,CAALA,OAAAA,CAAAA,KAAAA,CAAP,EAAOA,CAAP,CAUa,C,GAAMC,CAAAA,U,YAQnBM,oBAAW,OAAXA,CAAW,WAAXA,CAAkD,+CAAA,KAP1CL,OAO0C,CAAA,IAAA,EAAA,CAAA,KAN1CC,WAM0C,CAAA,IAAA,EAAA,CAAA,KAJ1CC,mBAI0C,CAAA,IAAA,EAAA,CAAA,KAH1CC,wBAG0C,CAAA,IAAA,EAAA,CAAA,KAF3CC,WAE2C,CAAA,IAAA,EAAA,CAChD,KAAA,WAAA,CAAmB,CAAA,EAAA,YAAA,CAAA,OAAA,EAAnB,WAAmB,CAAnB,CAEA,KAAA,OAAA,CAAA,OAAA,CACA,KAAA,WAAA,CAAA,WAAA,CAGA,KAAA,mBAAA,CAA2B,GAAA,CAAA,OAAA,CAAaE,SAAAA,OAAD,CAAa,CAClD,GAAKC,MAAD,CAAJ,cAAA,CAAoC,CAClCD,OAAO,CAAEC,MAAD,CAARD,cAAO,CAAPA,CADF,CAAA,IAEO,CACL,CAAEC,MAAD,CAAA,iBAACA,CAAmC,UAAM,CACzCD,OAAO,CAAEC,MAAD,CAARD,cAAO,CAAPA,CADD,CAACC,CAIL,CARD,CAA2B,CAA3B,CAWFC,C,+DAAAA,sBAAc,CACZ,SAA2C,CACzC,MAAO,CAAA,EAAA,YAAA,CAAA,sBAAA,IAAA,IAAA,CAA+BC,SAAAA,QAAD,QAAcA,CAAAA,QAAQ,CAA3D,WAAqC,EAA9B,CAAP,CADF,CAAA,IAEO,CACL,GAAKF,MAAD,CAAJ,oBAAA,CAA0C,CACxC,MAAQA,CAAAA,MAAD,CAAA,oBAACA,CAAR,KAAA,CADF,CAAA,IAEO,CACL,GAAI,CAAC,KAAL,wBAAA,CAAoC,CAClC,KAAA,wBAAA,CAAgCG,KAAK,CAChC,KAD2BA,WAAK,oDAALA,CAAAA,IAAAA,CAGvBC,SAAAA,GAAD,QAASA,CAAAA,GAAG,CAHYD,IAGfC,EAAT,EAHwBD,EAAAA,IAAAA,CAIvBD,SAAAA,QAAD,CAAc,CAClB,CAAEF,MAAD,CAAA,oBAACA,CAAD,QAACA,CACF,MAAOE,CAAAA,QAAQ,CAAf,KAAA,CAN4BC,CAAAA,EAAAA,KAAAA,CAQtBE,SAAAA,GAAD,CAAS,CACdC,OAAO,CAAPA,GAAAA,oCAAAA,GAAAA,EATJ,CAAgCH,CAAhC,CAYF,OAAO,MAAP,wBAAA,CAEH,CACF,CAED,C,2BAKAI,qBAAW,IAAXA,CAAW,MAAXA,CAAW,GAAXA,CAAW,MAAXA,CAKU,gBACR,SAAkD,CAAA,EAAA,iBAAA,CAAA,gBAAA,EAAlD,IAAkD,CAAlD,CAAM,YAAN,MAAQC,QAAR,CAAM,KAAN,MAAM,KAAN,CAAM,MAAN,MAAM,MAAN,CACA,UAAiC,CAAA,EAAA,iBAAA,CAAA,gBAAA,EAAjC,MAAiC,CAAjC,CAAM,UAAN,OAAQA,QAAR,CACA,GAAMjB,CAAAA,KAAK,CAAGkB,cAAc,CAA5B,YAA4B,CAA5B,CAEA,GAAMC,CAAAA,cAAc,CAAIC,QAAlBD,CAAAA,cAAkBC,CAAAA,IAAD,CAAkB,CACvC,GAAMC,CAAAA,SAAS,CAAG,CAAA,EAAA,sBAAA,CAAA,OAAA,EAChB,CAAA,EAAA,uBAAA,CAAA,uBAAA,EAAwB,CAAA,EAAA,OAAA,CAAA,SAAA,EAAA,IAAA,CADR,MACQ,CAAxB,CADgB,CAAlB,OAAkB,CAAlB,CAIA,MAAO,CAAA,EAAA,OAAA,CAAA,WAAA,iBACU,KAAA,CAAKnB,OADf,CACyBmB,SADzB,EACqCC,GAAG,CAAA,EAAA,CAD/C,MAAO,EAAP,CALF,CAAA,CAUA,GAAMC,CAAAA,SAAkB,CAAG,CAAA,EAAA,UAAA,CAAA,cAAA,EAA3B,KAA2B,CAA3B,CACA,GAAMC,CAAAA,iBAAiB,CAAGD,SAAS,CAC/B,CAAA,EAAA,OAAA,CAAA,aAAA,EAAA,YAAA,CAAA,UAAA,CAAA,KAAA,EAD+B,MAAA,CAAnC,EAAA,CAIA,MAAOA,CAAAA,SAAS,CACZC,iBAAiB,EAAIL,cAAc,CADvB,iBACuB,CADvB,CAEZA,cAAc,CAFlB,KAEkB,CAFlB,CAKF,C,sBAGAM,gBAAM,KAANA,CAAwC,CACtC,MAAO,MAAA,mBAAA,CAAA,IAAA,CAAgCC,SAAAA,CAAD,QACpCA,CAAAA,CAAC,CAADA,GAAAA,CADF,KACEA,CADoC,EAA/B,CAAP,CAKFC,C,wBAAAA,kBAAQ,KAARA,CAAgD,CAC9C,MAAO,MAAA,WAAA,CAAA,SAAA,CAAA,KAAA,EAAA,IAAA,CAAwCd,SAAAA,GAAD,CAAS,CACrD,GAAI,aAAJ,CAAA,GAAA,CAAwB,CACtB,MAAO,CACLe,IAAI,CAAEf,GAAG,CADJ,SAAA,CAELgB,GAAG,CAAEhB,GAAG,CAFH,OAAA,CAGLiB,WAAW,CAAEjB,GAAG,CAAHA,MAAAA,CAAAA,GAAAA,CAAgBkB,SAAAA,CAAD,QAAQ,CAClCC,IAAI,CAAED,CAAC,CAD2B,IAAA,CAElCE,IAAI,CAAEF,CAAC,CALX,OAGsC,CAAR,EAAflB,CAHR,CAAP,CASF,MAAMA,CAAAA,GAAG,CAAT,KAAA,CAXF,CAAO,CAAP,CAeFqB,C,wBAAAA,kBAAQ,KAARA,CAAuC,CACrC,MAAO,MAAA,WAAA,CAAA,QAAA,CAAP,KAAO,CAAP,CAhH4B,C","sourcesContent":["import { ComponentType } from 'react'\nimport { ClientSsgManifest } from '../build'\nimport {\n  addBasePath,\n  addLocale,\n  interpolateAs,\n} from '../next-server/lib/router/router'\nimport getAssetPathFromRoute from '../next-server/lib/router/utils/get-asset-path-from-route'\nimport { isDynamicRoute } from '../next-server/lib/router/utils/is-dynamic'\nimport { parseRelativeUrl } from '../next-server/lib/router/utils/parse-relative-url'\nimport { removePathTrailingSlash } from './normalize-trailing-slash'\nimport createRouteLoader, {\n  getClientBuildManifest,\n  RouteLoader,\n} from './route-loader'\n\nfunction normalizeRoute(route: string): string {\n  if (route[0] !== '/') {\n    throw new Error(`Route name should start with a \"/\", got \"${route}\"`)\n  }\n\n  if (route === '/') return route\n  return route.replace(/\\/$/, '')\n}\n\nexport type StyleSheetTuple = { href: string; text: string }\nexport type GoodPageCache = {\n  page: ComponentType\n  mod: any\n  styleSheets: StyleSheetTuple[]\n}\n\nexport default class PageLoader {\n  private buildId: string\n  private assetPrefix: string\n\n  private promisedSsgManifest?: Promise<ClientSsgManifest>\n  private promisedDevPagesManifest?: Promise<any>\n  public routeLoader: RouteLoader\n\n  constructor(buildId: string, assetPrefix: string) {\n    this.routeLoader = createRouteLoader(assetPrefix)\n\n    this.buildId = buildId\n    this.assetPrefix = assetPrefix\n\n    /** @type {Promise<Set<string>>} */\n    this.promisedSsgManifest = new Promise((resolve) => {\n      if ((window as any).__SSG_MANIFEST) {\n        resolve((window as any).__SSG_MANIFEST)\n      } else {\n        ;(window as any).__SSG_MANIFEST_CB = () => {\n          resolve((window as any).__SSG_MANIFEST)\n        }\n      }\n    })\n  }\n\n  getPageList() {\n    if (process.env.NODE_ENV === 'production') {\n      return getClientBuildManifest().then((manifest) => manifest.sortedPages)\n    } else {\n      if ((window as any).__DEV_PAGES_MANIFEST) {\n        return (window as any).__DEV_PAGES_MANIFEST.pages\n      } else {\n        if (!this.promisedDevPagesManifest) {\n          this.promisedDevPagesManifest = fetch(\n            `${this.assetPrefix}/_next/static/development/_devPagesManifest.json`\n          )\n            .then((res) => res.json())\n            .then((manifest) => {\n              ;(window as any).__DEV_PAGES_MANIFEST = manifest\n              return manifest.pages\n            })\n            .catch((err) => {\n              console.log(`Failed to fetch devPagesManifest`, err)\n            })\n        }\n        return this.promisedDevPagesManifest\n      }\n    }\n  }\n\n  /**\n   * @param {string} href the route href (file-system path)\n   * @param {string} asPath the URL as shown in browser (virtual path); used for dynamic routes\n   * @returns {string}\n   */\n  getDataHref(\n    href: string,\n    asPath: string,\n    ssg: boolean,\n    locale?: string | false\n  ): string {\n    const { pathname: hrefPathname, query, search } = parseRelativeUrl(href)\n    const { pathname: asPathname } = parseRelativeUrl(asPath)\n    const route = normalizeRoute(hrefPathname)\n\n    const getHrefForSlug = (path: string) => {\n      const dataRoute = getAssetPathFromRoute(\n        removePathTrailingSlash(addLocale(path, locale)),\n        '.json'\n      )\n      return addBasePath(\n        `/_next/data/${this.buildId}${dataRoute}${ssg ? '' : search}`\n      )\n    }\n\n    const isDynamic: boolean = isDynamicRoute(route)\n    const interpolatedRoute = isDynamic\n      ? interpolateAs(hrefPathname, asPathname, query).result\n      : ''\n\n    return isDynamic\n      ? interpolatedRoute && getHrefForSlug(interpolatedRoute)\n      : getHrefForSlug(route)\n  }\n\n  /**\n   * @param {string} route - the route (file-system path)\n   */\n  _isSsg(route: string): Promise<boolean> {\n    return this.promisedSsgManifest!.then((s: ClientSsgManifest) =>\n      s.has(route)\n    )\n  }\n\n  loadPage(route: string): Promise<GoodPageCache> {\n    return this.routeLoader.loadRoute(route).then((res) => {\n      if ('component' in res) {\n        return {\n          page: res.component,\n          mod: res.exports,\n          styleSheets: res.styles.map((o) => ({\n            href: o.href,\n            text: o.content,\n          })),\n        }\n      }\n      throw res.error\n    })\n  }\n\n  prefetch(route: string): Promise<void> {\n    return this.routeLoader.prefetch(route)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}