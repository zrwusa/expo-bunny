{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import ExponentAV from\"../ExponentAV\";var _enabled=true;export function isAudioEnabled(){return _enabled;}export function throwIfAudioIsDisabled(){if(!_enabled){throw new Error('Cannot complete operation because audio is not enabled.');}}export function setIsEnabledAsync(value){return _regeneratorRuntime.async(function setIsEnabledAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_enabled=value;_context.next=3;return _regeneratorRuntime.awrap(ExponentAV.setAudioIsEnabled(value));case 3:case\"end\":return _context.stop();}}},null,null,null,Promise);}","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/packages/expo-av/src/Audio/AudioAvailability.ts"],"names":["_enabled","ExponentAV"],"mappings":"4DAAA,MAAA,CAAA,UAAA,qBAEA,GAAIA,CAAAA,QAAQ,CAAZ,IAAA,CAEA,MAAO,SAAA,CAAA,cAAA,EAAmC,CACtC,MAAA,CAAA,QAAA,CACH,CAED,MAAO,SAAA,CAAA,sBAAA,EAAwC,CAC3C,GAAI,CAAJ,QAAA,CAAe,CACX,KAAM,IAAA,CAAA,KAAA,CAAN,yDAAM,CAAN,CACH,CACJ,CAED,MAAO,SAAA,CAAA,iBAAA,CAAA,KAAA,CAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,QAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,OAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,EAAA,IAAA,EAAA,CACHA,QAAQ,CAARA,KAAAA,CADG,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,KAAA,CAEGC,UAAU,CAAVA,iBAAAA,CAFH,KAEGA,CAFH,CAAA,CAAA,IAAA,EAAA,CAAA,IAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA","sourcesContent":["import ExponentAV from '../ExponentAV';\n\nlet _enabled = true;\n\nexport function isAudioEnabled(): boolean {\n    return _enabled;\n}\n\nexport function throwIfAudioIsDisabled(): void {\n    if (!_enabled) {\n        throw new Error('Cannot complete operation because audio is not enabled.');\n    }\n}\n\nexport async function setIsEnabledAsync(value: boolean): Promise<void> {\n    _enabled = value;\n    await ExponentAV.setAudioIsEnabled(value);\n    // TODO : We immediately pause all players when disabled, but we do not resume all shouldPlay\n    // players when enabled. Perhaps for completeness we should allow this; the design of the\n    // enabling API is for people to enable / disable this audio library, but I think that it should\n    // intuitively also double as a global pause/resume.\n}\n"]},"metadata":{},"sourceType":"module"}