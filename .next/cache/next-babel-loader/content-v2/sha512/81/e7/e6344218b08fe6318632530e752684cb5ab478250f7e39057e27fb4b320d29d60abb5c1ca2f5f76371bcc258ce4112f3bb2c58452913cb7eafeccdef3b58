{"ast":null,"code":"\"use strict\";exports.__esModule=true;exports.HeadManagerContext=void 0;var _react=_interopRequireDefault(require(\"react\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var HeadManagerContext=_react.default.createContext({});exports.HeadManagerContext=HeadManagerContext;if(true){HeadManagerContext.displayName='HeadManagerContext';}","map":{"version":3,"sources":["../../../next-server/lib/head-manager-context.ts"],"names":["HeadManagerContext","React"],"mappings":"uEAAA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,kFAEO,IAAMA,CAAAA,kBAKX,CAAGC,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CALE,EAKFA,CALE,C,8CAOP,QAA2C,CACzCD,kBAAkB,CAAlBA,WAAAA,CAAAA,oBAAAA,CACD","sourcesContent":["import React from 'react'\n\nexport const HeadManagerContext: React.Context<{\n  updateHead?: (state: any) => void\n  mountedInstances?: any\n  updateScripts?: (state: any) => void\n  scripts?: any\n}> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  HeadManagerContext.displayName = 'HeadManagerContext'\n}\n"]},"metadata":{},"sourceType":"script"}