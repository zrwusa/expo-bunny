{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}export var TrieNode=function(){function TrieNode(){_classCallCheck(this,TrieNode);this._keys=new Map();this._isEnd=false;}_createClass(TrieNode,[{key:\"keys\",get:function get(){return this._keys;},set:function set(v){this._keys=v;}},{key:\"isEnd\",get:function get(){return this._isEnd;},set:function set(v){this._isEnd=v;}}]);return TrieNode;}();export var Trie=function(){function Trie(){_classCallCheck(this,Trie);this._root=new TrieNode();}_createClass(Trie,[{key:\"add\",value:function add(input){var node=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this._root;if(input.length===0){node.isEnd=true;return false;}else if(!node.keys.has(input[0])){node.keys.set(input[0],new TrieNode());this.add(input.substr(1),node.keys.get(input[0]));}else{this.add(input.substr(1),node.keys.get(input[0]));}return true;}},{key:\"isWord\",value:function isWord(input){var node=this._root;while(input.length>1){var ret=node.keys.get(input[0]);if(!ret){return false;}else{node=ret;input=input.substr(1);}}var target=node.keys.get(input);return!!(target&&target.isEnd);}},{key:\"getWords\",value:function getWords(){var words=[];var search=function search(node,word){if(node.keys.size!==0){for(var _iterator=_createForOfIteratorHelperLoose(node.keys.keys()),_step;!(_step=_iterator()).done;){var letter=_step.value;search(node.keys.get(letter),word.concat(letter));}if(node.isEnd){words.push(word);}}else{word.length>0&&words.push(word);}};search(this._root,'');return words.length>0?words:null;}}]);return Trie;}();","map":null,"metadata":{},"sourceType":"module"}