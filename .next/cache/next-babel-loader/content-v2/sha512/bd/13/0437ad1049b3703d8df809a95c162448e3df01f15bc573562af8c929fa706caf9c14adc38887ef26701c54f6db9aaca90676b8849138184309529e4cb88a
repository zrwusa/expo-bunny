{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{EXCEPTIONAL_COLOR,STANDARD_COLOR_NAME_ALL}from\"../constants\";import{ColorTranslator}from'colortranslator';export function isColor(colorString){if(isColorName(colorString)){return true;}if(isExceptionalColor(colorString)){return true;}if(isHex(colorString)){return true;}if(isHexA(colorString)){return true;}if(isRGB(colorString)){return true;}if(isRGBA(colorString)){return true;}if(isHSL(colorString)){return true;}if(isHSLA(colorString)){return true;}return false;}export function checkColor(colorString){var checkResult={isColor:isColor(colorString),isColorName:isColorName(colorString),isExceptional:isExceptionalColor(colorString),isHex:isHex(colorString),isHexA:isHexA(colorString),isRGB:isRGB(colorString),isRGBA:isRGBA(colorString),isHSL:isHSL(colorString),isHSLA:isHSLA(colorString)};var checkResultKeys=Object.keys(checkResult);var colorType='';for(var _i=0,_checkResultKeys=checkResultKeys;_i<_checkResultKeys.length;_i++){var item=_checkResultKeys[_i];if(item!=='isColor'){colorType=checkResult[item]?item.substr(2,item.length-2):'';if(colorType){break;}}}return _objectSpread(_objectSpread({},checkResult),{},{type:colorType});}export function isHex(colorString){var RegExpHex=/^#(?:[A-Fa-f0-9]{3}){1,2}$/;return RegExpHex.test(colorString);}export function isHexA(colorString){var RegExpHex=/^#(?:[A-Fa-f0-9]{4}){1,2}$/;return RegExpHex.test(colorString);}export function isRGB(colorString){var RegExpRGB=/^rgb[(](?:\\s*0*(?:\\d\\d?(?:\\.\\d+)?(?:\\s*%)?|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%|(?:1\\d\\d|2[0-4]\\d|25[0-5])(?:\\.\\d+)?)\\s*(?:,(?![)])|(?=[)]))){3}[)]$/;return RegExpRGB.test(colorString);}export function isRGBA(colorString){var RegExpRGBA=/^rgba[(](?:\\s*0*(?:\\d\\d?(?:\\.\\d+)?(?:\\s*%)?|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%|(?:1\\d\\d|2[0-4]\\d|25[0-5])(?:\\.\\d+)?)\\s*,){3}\\s*0*(?:\\.\\d+|1(?:\\.0*)?)\\s*[)]$/;return RegExpRGBA.test(colorString);}export function isHSL(colorString){var RegExpHSL=/^hsl[(]\\s*0*(?:[12]?\\d{1,2}|3(?:[0-5]\\d|60))\\s*(?:\\s*,\\s*0*(?:\\d\\d?(?:\\.\\d+)?\\s*%|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%)){2}\\s*[)]$/;return RegExpHSL.test(colorString);}export function isHSLA(colorString){var RegExpHSLA=/^hsla[(]\\s*0*(?:[12]?\\d{1,2}|3(?:[0-5]\\d|60))\\s*(?:\\s*,\\s*0*(?:\\d\\d?(?:\\.\\d+)?\\s*%|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%)){2}\\s*,\\s*0*(?:\\.\\d+|1(?:\\.0*)?)\\s*[)]$/;return RegExpHSLA.test(colorString);}export function getColorByName(colorName){var key=colorName.toLowerCase();return STANDARD_COLOR_NAME_ALL[key];}export function isColorName(colorName){return!!getColorByName(colorName);}export function getExceptionalColor(colorName){var key=colorName.toLowerCase();return EXCEPTIONAL_COLOR[key];}export function isExceptionalColor(colorName){return!!getExceptionalColor(colorName);}export function colorFaultTolerance(colorString){if(!isColor(colorString)){return'';}if(isExceptionalColor(colorString)){return getExceptionalColor(colorString).RGBA;}if(isColorName(colorString)){return getColorByName(colorString).RGBA;}return colorString;}export function rgbaStringToRgbaArray(rgba){return rgba.substring(5,rgba.length-1).replace(/ /g,'').split(',').map(function(item){return parseFloat(item);});}export function rgbArrayToLab(rgb){var r=rgb[0]/255,g=rgb[1]/255,b=rgb[2]/255,x,y,z;r=r>0.04045?Math.pow((r+0.055)/1.055,2.4):r/12.92;g=g>0.04045?Math.pow((g+0.055)/1.055,2.4):g/12.92;b=b>0.04045?Math.pow((b+0.055)/1.055,2.4):b/12.92;x=(r*0.4124+g*0.3576+b*0.1805)/0.95047;y=(r*0.2126+g*0.7152+b*0.0722)/1.00000;z=(r*0.0193+g*0.1192+b*0.9505)/1.08883;x=x>0.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>0.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>0.008856?Math.pow(z,1/3):7.787*z+16/116;return[116*y-16,500*(x-y),200*(y-z)];}export function deltaEFromString(colorA,colorB,shouldDiffAlpha){var colorATolerance=colorFaultTolerance(colorA);var colorBTolerance=colorFaultTolerance(colorB);if(!colorATolerance||!colorBTolerance){return 100;}var rgbA=ColorTranslator.toRGBA(colorATolerance);var rgbB=ColorTranslator.toRGBA(colorBTolerance);var rgbaArrayA=rgbaStringToRgbaArray(rgbA);var rgbaArrayB=rgbaStringToRgbaArray(rgbB);var labA=rgbArrayToLab(rgbaArrayA);var labB=rgbArrayToLab(rgbaArrayB);var deltaL=labA[0]-labB[0];var deltaA=labA[1]-labB[1];var deltaB=labA[2]-labB[2];var c1=Math.sqrt(labA[1]*labA[1]+labA[2]*labA[2]);var c2=Math.sqrt(labB[1]*labB[1]+labB[2]*labB[2]);var deltaC=c1-c2;var deltaH=deltaA*deltaA+deltaB*deltaB-deltaC*deltaC;deltaH=deltaH<0?0:Math.sqrt(deltaH);var sc=1.0+0.045*c1;var sh=1.0+0.015*c1;var deltaLKlsl=deltaL/1.0;var deltaCkcsc=deltaC/sc;var deltaHkhsh=deltaH/sh;var i=deltaLKlsl*deltaLKlsl+deltaCkcsc*deltaCkcsc+deltaHkhsh*deltaHkhsh;var deltaEDiff=i<0?0:Math.sqrt(i);if(shouldDiffAlpha){var alphaDiff=rgbaArrayA[3]-rgbaArrayB[3];var alphaDiffS=100*Math.sqrt(alphaDiff*alphaDiff);return deltaEDiff;}else{return deltaEDiff;}}export function deltaEDes(similarityValue){var des='';if(similarityValue===0){des='Perception';}else if(similarityValue<=1){des='Not perceptible by human eyes';}else if(similarityValue<=2){des='Perceptible through close observation';}else if(similarityValue<=10){des='Perceptible at a glance';}else if(similarityValue<=49){des='Similar than opposite';}else if(similarityValue>49){des='Exact opposite';}return des;}export function diffColors(colorA,colorB){return deltaEFromString(colorA,colorB,false);}","map":null,"metadata":{},"sourceType":"module"}