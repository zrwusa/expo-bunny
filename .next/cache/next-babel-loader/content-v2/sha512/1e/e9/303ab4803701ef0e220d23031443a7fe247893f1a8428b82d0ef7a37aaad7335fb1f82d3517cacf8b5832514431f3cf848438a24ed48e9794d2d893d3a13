{"ast":null,"code":"\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));exports.__esModule=true;exports.execOnce=execOnce;exports.getLocationOrigin=getLocationOrigin;exports.getURL=getURL;exports.getDisplayName=getDisplayName;exports.isResSent=isResSent;exports.loadGetInitialProps=loadGetInitialProps;exports.formatWithValidation=formatWithValidation;exports.ST=exports.SP=exports.urlObjectKeys=void 0;var _formatUrl=require(\"./router/utils/format-url\");function execOnce(fn){var used=false;var result;return function(){if(!used){used=true;result=fn.apply(void 0,arguments);}return result;};}function getLocationOrigin(){var _window$location=window.location,protocol=_window$location.protocol,hostname=_window$location.hostname,port=_window$location.port;return protocol+\"//\"+hostname+(port?':'+port:'');}function getURL(){var href=window.location.href;var origin=getLocationOrigin();return href.substring(origin.length);}function getDisplayName(Component){return typeof Component==='string'?Component:Component.displayName||Component.name||'Unknown';}function isResSent(res){return res.finished||res.headersSent;}function loadGetInitialProps(App,ctx){var _App$prototype,message,res,props,_message;return _regenerator.default.async(function loadGetInitialProps$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!true){_context.next=4;break;}if(!((_App$prototype=App.prototype)!=null&&_App$prototype.getInitialProps)){_context.next=4;break;}message=\"\\\"\"+getDisplayName(App)+\".getInitialProps()\\\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.\";throw new Error(message);case 4:res=ctx.res||ctx.ctx&&ctx.ctx.res;if(App.getInitialProps){_context.next=12;break;}if(!(ctx.ctx&&ctx.Component)){_context.next=11;break;}_context.next=9;return _regenerator.default.awrap(loadGetInitialProps(ctx.Component,ctx.ctx));case 9:_context.t0=_context.sent;return _context.abrupt(\"return\",{pageProps:_context.t0});case 11:return _context.abrupt(\"return\",{});case 12:_context.next=14;return _regenerator.default.awrap(App.getInitialProps(ctx));case 14:props=_context.sent;if(!(res&&isResSent(res))){_context.next=17;break;}return _context.abrupt(\"return\",props);case 17:if(props){_context.next=20;break;}_message=\"\\\"\"+getDisplayName(App)+\".getInitialProps()\\\" should resolve to an object. But found \\\"\"+props+\"\\\" instead.\";throw new Error(_message);case 20:if(true){if(Object.keys(props).length===0&&!ctx.ctx){console.warn(getDisplayName(App)+\" returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps\");}}return _context.abrupt(\"return\",props);case 22:case\"end\":return _context.stop();}}},null,null,null,Promise);}var urlObjectKeys=['auth','hash','host','hostname','href','path','pathname','port','protocol','query','search','slashes'];exports.urlObjectKeys=urlObjectKeys;function formatWithValidation(url){if(true){if(url!==null&&typeof url==='object'){Object.keys(url).forEach(function(key){if(urlObjectKeys.indexOf(key)===-1){console.warn(\"Unknown key passed via urlObject into url.format: \"+key);}});}}return(0,_formatUrl.formatUrl)(url);}var SP=typeof performance!=='undefined';exports.SP=SP;var ST=SP&&typeof performance.mark==='function'&&typeof performance.measure==='function';exports.ST=ST;","map":{"version":3,"sources":["../../../next-server/lib/utils.ts"],"names":["used","result","fn","window","protocol","hostname","port","origin","getLocationOrigin","href","Component","res","App","message","getDisplayName","ctx","pageProps","loadGetInitialProps","props","isResSent","Object","console","urlObjectKeys","url","key","SP","ST","performance"],"mappings":"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","sourcesContent":["import { IncomingMessage, ServerResponse } from 'http'\nimport { ParsedUrlQuery } from 'querystring'\nimport { ComponentType } from 'react'\nimport { UrlObject } from 'url'\nimport { formatUrl } from './router/utils/format-url'\nimport { NextRouter } from './router/router'\nimport { Env } from '@next/env'\nimport { BuildManifest } from '../server/get-page-files'\nimport { DomainLocales } from '../server/config'\nimport { PreviewData } from 'next/types'\n\n/**\n * Types used by both next and next-server\n */\n\nexport type NextComponentType<\n  C extends BaseContext = NextPageContext,\n  IP = {},\n  P = {}\n> = ComponentType<P> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param ctx Context of `page`\n   */\n  getInitialProps?(context: C): IP | Promise<IP>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n> & {\n  renderDocument(\n    Document: DocumentType,\n    props: DocumentProps\n  ): React.ReactElement\n}\n\nexport type AppType = NextComponentType<\n  AppContextType,\n  AppInitialProps,\n  AppPropsType\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport type NextWebVitalsMetric = {\n  id: string\n  label: string\n  name: string\n  startTime: number\n  value: number\n}\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => RenderPageResult | Promise<RenderPageResult>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & { statusCode?: number }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n  domainLocales?: DomainLocales\n  scriptLoader?: any[]\n  isPreview?: boolean\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<R extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: R\n}\n\nexport type AppInitialProps = {\n  pageProps: any\n}\n\nexport type AppPropsType<\n  R extends NextRouter = NextRouter,\n  P = {}\n> = AppInitialProps & {\n  Component: NextComponentType<NextPageContext, any, P>\n  router: R\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | React.ReactFragment\n}\n\nexport type DocumentProps = DocumentInitialProps & {\n  __NEXT_DATA__: NEXT_DATA\n  dangerousAsPath: string\n  docComponentsRendered: {\n    Html?: boolean\n    Main?: boolean\n    Head?: boolean\n    NextScript?: boolean\n  }\n  buildManifest: BuildManifest\n  ampPath: string\n  inAmpMode: boolean\n  hybridAmp: boolean\n  isDevelopment: boolean\n  dynamicImports: string[]\n  assetPrefix?: string\n  canonicalBase: string\n  headTags: any[]\n  unstable_runtimeJS?: false\n  unstable_JsPreload?: false\n  devOnlyCacheBusterQueryString: string\n  scriptLoader: { afterInteractive?: string[]; beforeInteractive?: any[] }\n  locale?: string\n  disableOptimizedLoading?: boolean\n}\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: {\n    [key: string]: string | string[]\n  }\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: {\n    [key: string]: string\n  }\n\n  body: any\n\n  env: Env\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<T = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<T>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<T>\n  status: (statusCode: number) => NextApiResponse<T>\n  redirect(url: string): NextApiResponse<T>\n  redirect(status: number, url: string): NextApiResponse<T>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n    }\n  ) => NextApiResponse<T>\n  clearPreviewData: () => NextApiResponse<T>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => void | Promise<void>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {}\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(url: UrlObject): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (urlObjectKeys.indexOf(key) === -1) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return formatUrl(url)\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  typeof performance.mark === 'function' &&\n  typeof performance.measure === 'function'\n"]},"metadata":{},"sourceType":"script"}