{"ast":null,"code":"var _this=this,_jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/components/InlineSelector/InlineSelector.tsx\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{useBunnyKit}from\"../../hooks/bunny-kit\";import{getSharedStyles}from\"../../helpers\";import{Col,Row}from\"../../containers\";import{IcoMoon,Text}from\"../UI\";import*as React from'react';var count=0;var counter=function counter(){return count++;};export var InlineSelector=React.memo(function(props){var title=props.title,renderText=props.renderText,_onPress=props.onPress,_props$columns=props.columns,columns=_props$columns===void 0?[4,8,1]:_props$columns,_props$isShowChevron=props.isShowChevron,isShowChevron=_props$isShowChevron===void 0?true:_props$isShowChevron,titleStyle=props.titleStyle,textStyle=props.textStyle,_props$textAlign=props.textAlign,textAlign=_props$textAlign===void 0?'flex-end':_props$textAlign,renderColumn2=props.renderColumn2;var _useBunnyKit=useBunnyKit(),sizeLabor=_useBunnyKit.sizeLabor,themeLabor=_useBunnyKit.themeLabor,wp=_useBunnyKit.wp,t=_useBunnyKit.t,colors=_useBunnyKit.colors,user=_useBunnyKit.user;var _getSharedStyles=getSharedStyles(sizeLabor,themeLabor),sharedStyles=_getSharedStyles.sharedStyles;return React.createElement(TouchableOpacity,{onPress:function onPress(e){_onPress==null?void 0:_onPress(e);},__self:_this,__source:{fileName:_jsxFileName,lineNumber:41,columnNumber:12}},React.createElement(Row,{style:{padding:wp(10)},__self:_this,__source:{fileName:_jsxFileName,lineNumber:44,columnNumber:9}},React.createElement(Col,{size:columns[0],__self:_this,__source:{fileName:_jsxFileName,lineNumber:45,columnNumber:13}},title?React.createElement(Text,{style:[sharedStyles.text,titleStyle],__self:_this,__source:{fileName:_jsxFileName,lineNumber:48,columnNumber:27}},title):null),React.createElement(Col,{size:columns[1],align:textAlign,__self:_this,__source:{fileName:_jsxFileName,lineNumber:52,columnNumber:13}},renderColumn2?renderColumn2():React.createElement(Text,{numberOfLines:1,style:[sharedStyles.text2,textStyle],__self:_this,__source:{fileName:_jsxFileName,lineNumber:56,columnNumber:27}},renderText==null?void 0:renderText())),React.createElement(Col,{size:columns[2],align:\"flex-end\",__self:_this,__source:{fileName:_jsxFileName,lineNumber:62,columnNumber:13}},isShowChevron?React.createElement(IcoMoon,{name:\"chevron-right1\",color:colors.text2,__self:_this,__source:{fileName:_jsxFileName,lineNumber:65,columnNumber:27}}):null)));});","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/components/InlineSelector/InlineSelector.tsx"],"names":["count","counter","InlineSelector","title","renderText","onPress","columns","isShowChevron","titleStyle","textStyle","textAlign","renderColumn2","props","sizeLabor","themeLabor","wp","t","colors","user","useBunnyKit","sharedStyles","getSharedStyles","padding"],"mappings":"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","sourcesContent":["import {FlexAlignType, GestureResponderEvent, StyleProp, TextStyle, TouchableOpacity} from 'react-native';\nimport {useBunnyKit} from '../../hooks/bunny-kit';\nimport {getSharedStyles} from '../../helpers';\nimport {Col, Row} from '../../containers';\nimport {IcoMoon, Text} from '../UI';\nimport * as React from 'react';\n\nexport interface InlineProps {\n    title?: string,\n    renderText?: () => string,\n    onPress?: (event: GestureResponderEvent) => void,\n    columns?: [number, number, number],\n    isShowChevron?: boolean,\n    titleStyle?: StyleProp<TextStyle>,\n    textStyle?: StyleProp<TextStyle>,\n    textAlign?: FlexAlignType,\n    renderColumn2?: () => React.ReactNode\n}\n\nlet count = 0;\nconst counter = () => {\n    return count++;\n};\n\n// Use React.memo as PureComponent instead of recompose.pure\nexport const InlineSelector = React.memo((props: InlineProps) => {\n    // console.log('InlineSelector',counter())\n    const {\n        title,\n        renderText,\n        onPress,\n        columns = [4, 8, 1],\n        isShowChevron = true,\n        titleStyle,\n        textStyle,\n        textAlign = 'flex-end',\n        renderColumn2\n    } = props;\n    const {sizeLabor, themeLabor, wp, t, colors, user} = useBunnyKit();\n    const {sharedStyles} = getSharedStyles(sizeLabor, themeLabor);\n    return <TouchableOpacity onPress={(e) => {\n        onPress?.(e);\n    }}>\n        <Row style={{padding: wp(10)}}>\n            <Col size={columns[0]}>\n                {\n                    title\n                        ? <Text style={[sharedStyles.text, titleStyle]}>{title}</Text>\n                        : null\n                }\n            </Col>\n            <Col size={columns[1]} align={textAlign}>\n                {\n                    renderColumn2\n                        ? renderColumn2()\n                        : <Text numberOfLines={1} style={[sharedStyles.text2, textStyle]}>\n                            {renderText?.()}\n                        </Text>\n                }\n\n            </Col>\n            <Col size={columns[2]} align=\"flex-end\">\n                {\n                    isShowChevron\n                        ? <IcoMoon name=\"chevron-right1\" color={colors.text2}/>\n                        : null\n                }\n            </Col>\n        </Row>\n    </TouchableOpacity>;\n});\n"]},"metadata":{},"sourceType":"module"}