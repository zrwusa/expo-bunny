{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useEffect,useState}from'react';import Keyboard from\"react-native-web/dist/exports/Keyboard\";export var useKeyboardHeight=function useKeyboardHeight(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),keyboardHeight=_useState2[0],setKeyboardHeight=_useState2[1];function onKeyboardDidShow(e){setKeyboardHeight(e.endCoordinates.height);}function onKeyboardDidHide(){setKeyboardHeight(0);}useEffect(function(){Keyboard.addListener('keyboardDidShow',onKeyboardDidShow);Keyboard.addListener('keyboardDidHide',onKeyboardDidHide);return function(){Keyboard.removeListener('keyboardDidShow',onKeyboardDidShow);Keyboard.removeListener('keyboardDidHide',onKeyboardDidHide);};},[]);return{currentHeight:keyboardHeight};};export default useKeyboardHeight;","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/hooks/keyboard-height/useKeyboardHeight.tsx"],"names":["useKeyboardHeight","keyboardHeight","setKeyboardHeight","useState","e","useEffect","Keyboard","currentHeight"],"mappings":"iEAAA,OAAA,SAAA,CAAA,QAAA,KAAA,OAAA,C,6DAOA,MAAO,IAAMA,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAyB,CACtD,GAAA,CAAA,SAAA,CAA4CG,QAAQ,CAApD,CAAoD,CAApD,CAAA,UAAA,CAAA,cAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAOF,cAAP,CAAA,UAAA,CAAA,CAAA,CAAA,CAAuBC,iBAAvB,CAAA,UAAA,CAAA,CAAA,CAAA,CAEA,QAAA,CAAA,iBAAA,CAAA,CAAA,CAAmD,CAC/CA,iBAAiB,CAACE,CAAC,CAADA,cAAAA,CAAlBF,MAAiB,CAAjBA,CACH,CAED,QAAA,CAAA,iBAAA,EAAmC,CAC/BA,iBAAiB,CAAjBA,CAAiB,CAAjBA,CACH,CAEDG,SAAS,CAAC,UAAM,CACZC,QAAQ,CAARA,WAAAA,CAAAA,iBAAAA,CAAAA,iBAAAA,EACAA,QAAQ,CAARA,WAAAA,CAAAA,iBAAAA,CAAAA,iBAAAA,EACA,MAAO,WAAY,CACfA,QAAQ,CAARA,cAAAA,CAAAA,iBAAAA,CAAAA,iBAAAA,EACAA,QAAQ,CAARA,cAAAA,CAAAA,iBAAAA,CAAAA,iBAAAA,EAFJ,CAAA,CAHK,CAAA,CAATD,EAAS,CAATA,CASA,MAAO,CAACE,aAAa,CAAEN,cAAhB,CAAP,CApBG,CAAA,CAsBP,cAAA,CAAA,iBAAA","sourcesContent":["import {useEffect, useState} from 'react';\nimport {Keyboard, KeyboardEvent} from 'react-native';\n\nexport interface UseKeyboardHeight {\n    currentHeight: number;\n}\n\nexport const useKeyboardHeight = (): UseKeyboardHeight => {\n    const [keyboardHeight, setKeyboardHeight] = useState(0);\n\n    function onKeyboardDidShow(e: KeyboardEvent): void {\n        setKeyboardHeight(e.endCoordinates.height);\n    }\n\n    function onKeyboardDidHide(): void {\n        setKeyboardHeight(0);\n    }\n\n    useEffect(() => {\n        Keyboard.addListener('keyboardDidShow', onKeyboardDidShow);\n        Keyboard.addListener('keyboardDidHide', onKeyboardDidHide);\n        return (): void => {\n            Keyboard.removeListener('keyboardDidShow', onKeyboardDidShow);\n            Keyboard.removeListener('keyboardDidHide', onKeyboardDidHide);\n        };\n    }, []);\n\n    return {currentHeight: keyboardHeight};\n};\nexport default useKeyboardHeight;\n"]},"metadata":{},"sourceType":"module"}