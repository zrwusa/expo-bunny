{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import _regeneratorRuntime from\"@babel/runtime/regenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Component,createRef}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import{Image,Text,TouchableOpacity,View}from\"../../components/UI\";import*as Location from'expo-location';import{collectSysError as _collectSysError,getNearbyFilms as _getNearbyFilms,restoreRegion as _restoreRegion}from\"../../store/actions\";import{connect}from'react-redux';import MapView,{PROVIDER_DEFAULT}from'react-native-maps';import BunnyConstants from\"../../constants/constants\";import makeStyles,{getCardSize}from\"./styles\";import{makeContainerStyles}from\"../../containers\";import config from\"../../config\";import{withBunnyKit}from\"../../hooks/bunny-kit\";var _ref=MapView,Marker=_ref.Marker;var mapStateToProps=function mapStateToProps(rootState){return _objectSpread({},rootState.demoMapState);};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getNearbyFilms:function getNearbyFilms(reqParams){return _regeneratorRuntime.async(function getNearbyFilms$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",dispatch(_getNearbyFilms(reqParams)));case 1:case\"end\":return _context.stop();}}},null,null,null,Promise);},restoreRegion:function restoreRegion(region){return dispatch(_restoreRegion(region));},collectSysError:function collectSysError(err){return dispatch(_collectSysError(err));}};};var DemoMapScreen=function(_Component){_inherits(DemoMapScreen,_Component);var _super=_createSuper(DemoMapScreen);function DemoMapScreen(props){var _this;_classCallCheck(this,DemoMapScreen);_this=_super.call(this,props);_this.mapView=createRef();_this.index=0;_this.regionTimeout=setTimeout(function(){return'';},1000);_this.animation=new Animated.Value(0);_this.getCurLocation=_this.getCurLocation.bind(_assertThisInitialized(_this));_this.onMarkerPress=_this.onMarkerPress.bind(_assertThisInitialized(_this));return _this;}_createClass(DemoMapScreen,[{key:\"getCurLocation\",value:function getCurLocation(){var _await$Location$reque,status,location;return _regeneratorRuntime.async(function getCurLocation$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());case 3:_await$Location$reque=_context2.sent;status=_await$Location$reque.status;if(!(status!=='granted')){_context2.next=7;break;}return _context2.abrupt(\"return\");case 7:_context2.next=9;return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));case 9:location=_context2.sent;this.props.restoreRegion(_objectSpread({latitude:location.coords.latitude,longitude:location.coords.longitude},BunnyConstants.latLngDeltaGrace));_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](0);this.props.collectSysError(_context2.t0);case 16:case\"end\":return _context2.stop();}}},null,this,[[0,13]],Promise);}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var bunnyKit,sizeLabor,themeLabor,wp;return _regeneratorRuntime.async(function componentDidMount$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:bunnyKit=this.props.bunnyKit;sizeLabor=bunnyKit.sizeLabor,themeLabor=bunnyKit.themeLabor,wp=bunnyKit.wp;this.animation.addListener(function(_ref2){var value=_ref2.value;var index=Math.floor(value/getCardSize(sizeLabor,themeLabor).width+wp(0.3));if(index>=_this2.props.demoNearbyFilms.length){index=_this2.props.demoNearbyFilms.length-1;}if(index<=0){index=0;}clearTimeout(_this2.regionTimeout);_this2.regionTimeout=setTimeout(function(){if(_this2.index!==index){_this2.index=index;var coordinate=_this2.props.demoNearbyFilms[index].coordinate;_this2.mapView.current&&_this2.mapView.current.animateToRegion(_objectSpread(_objectSpread({},coordinate),{},{latitudeDelta:_this2.props.region.latitudeDelta,longitudeDelta:_this2.props.region.longitudeDelta}),wp(350));}},10);});_context3.next=5;return _regeneratorRuntime.awrap(this.props.getNearbyFilms(_objectSpread({latitude:this.props.region.latitude,longitude:this.props.region.longitude},BunnyConstants.latLngDeltaGrace)));case 5:case\"end\":return _context3.stop();}}},null,this,null,Promise);}},{key:\"onMarkerPress\",value:function onMarkerPress(marker){var mapView=this.mapView.current;mapView&&mapView.animateToRegion(_objectSpread({latitude:marker.coordinate.latitude,longitude:marker.coordinate.longitude},BunnyConstants.latLngDeltaGrace));}},{key:\"render\",value:function render(){var _this3=this;var bunnyKit=this.props.bunnyKit;var sizeLabor=bunnyKit.sizeLabor,themeLabor=bunnyKit.themeLabor,wp=bunnyKit.wp;var containerStyles=makeContainerStyles(sizeLabor,themeLabor);var styles=makeStyles(sizeLabor,themeLabor);var _getCardSize=getCardSize(sizeLabor,themeLabor),width=_getCardSize.width;var interpolations=this.props.demoNearbyFilms.map(function(marker,index){var inputRange=[(index-1)*width,index*width,(index+1)*width];var scale=_this3.animation.interpolate({inputRange:inputRange,outputRange:[1,2.5,1],extrapolate:'clamp'});var opacity=_this3.animation.interpolate({inputRange:inputRange,outputRange:[0.35,1,0.35],extrapolate:'clamp'});return{scale:scale,opacity:opacity};});return React.createElement(View,{style:containerStyles.Screen},React.createElement(MapView,{ref:this.mapView,initialRegion:this.props.region,style:styles.mapView,provider:PROVIDER_DEFAULT},this.props.demoNearbyFilms.length>0&&this.props.demoNearbyFilms.map(function(marker,index){var scaleStyle={transform:[{scale:interpolations[index].scale}]};var opacityStyle={opacity:interpolations[index].opacity};return React.createElement(Marker,{key:index,coordinate:marker.coordinate,onPress:function onPress(){_this3.onMarkerPress(marker);}},React.createElement(Animated.View,{style:[styles.markerWrap,opacityStyle]},React.createElement(Animated.View,{style:[styles.ring,scaleStyle]}),React.createElement(View,{style:styles.marker})));})),React.createElement(Animated.ScrollView,{horizontal:true,scrollEventThrottle:1,showsHorizontalScrollIndicator:false,snapToInterval:width,onScroll:Animated.event([{nativeEvent:{contentOffset:{x:this.animation}}}],{useNativeDriver:config.useNativeDriver}),style:styles.scrollView,contentContainerStyle:styles.endPadding},this.props.demoNearbyFilms.length>0&&this.props.demoNearbyFilms.map(function(marker,index){return React.createElement(TouchableOpacity,{onPress:function onPress(){_this3.onMarkerPress(marker);},key:marker.id},React.createElement(View,{style:styles.card},React.createElement(Image,{source:marker.image,style:styles.cardImage,resizeMode:\"cover\"}),React.createElement(View,{style:styles.textContent},React.createElement(Text,{numberOfLines:1,style:styles.cardTitle},marker.title),React.createElement(Text,{numberOfLines:1,style:styles.cardDescription},marker.description))));})));}}]);return DemoMapScreen;}(Component);export default connect(mapStateToProps,mapDispatchToProps)(withBunnyKit(DemoMapScreen));","map":null,"metadata":{},"sourceType":"module"}