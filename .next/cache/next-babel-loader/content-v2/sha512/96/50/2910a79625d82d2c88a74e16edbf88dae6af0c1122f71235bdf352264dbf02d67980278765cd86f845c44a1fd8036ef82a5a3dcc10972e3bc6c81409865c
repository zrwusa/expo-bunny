{"ast":null,"code":"var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/screens/DemoSaga/DemoSaga.tsx\";import React from'react';import{Button,Text,View}from\"../../components/UI\";import{useDispatch,useSelector}from'react-redux';import{getDemoSagas}from\"../../store/actions\";import{getSharedStyles}from\"../../helpers\";import{makeContainerStyles}from\"../../containers\";import{useBunnyKit}from\"../../hooks/bunny-kit\";function DemoSagaScreen(){var _this=this;var _useBunnyKit=useBunnyKit(),sizeLabor=_useBunnyKit.sizeLabor,themeLabor=_useBunnyKit.themeLabor;var dispatch=useDispatch();var demoSagaState=useSelector(function(rootState){return rootState.demoSagaState;});var items=demoSagaState.items;var containerStyles=makeContainerStyles(sizeLabor,themeLabor);var _getSharedStyles=getSharedStyles(sizeLabor,themeLabor),sharedStyles=_getSharedStyles.sharedStyles;return React.createElement(View,{style:[containerStyles.Screen,sharedStyles.centralized],__self:this,__source:{fileName:_jsxFileName,lineNumber:20,columnNumber:9}},React.createElement(Button,{onPress:function onPress(){dispatch(getDemoSagas({pageNum:1,pageCount:10,filter:{text:'saga1'}}));},title:\"fetchDemoSagas\",__self:this,__source:{fileName:_jsxFileName,lineNumber:21,columnNumber:13}}),items&&items.length>0?items.map(function(item){return React.createElement(Text,{key:item.id,__self:_this,__source:{fileName:_jsxFileName,lineNumber:31,columnNumber:32}},item.text);}):null);}export default DemoSagaScreen;","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/screens/DemoSaga/DemoSaga.tsx"],"names":["sizeLabor","themeLabor","useBunnyKit","dispatch","useDispatch","demoSagaState","useSelector","rootState","items","containerStyles","makeContainerStyles","sharedStyles","getSharedStyles","getDemoSagas","pageNum","pageCount","filter","text","item"],"mappings":"6FAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,2BACA,OAAA,WAAA,CAAA,WAAA,KAAA,aAAA,CACA,OAAA,YAAA,2BAEA,OAAA,eAAA,qBACA,OAAA,mBAAA,wBACA,OAAA,WAAA,6BAGA,QAAA,CAAA,cAAA,EAA0B,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CACtB,GAAA,CAAA,YAAA,CAAgCE,WAAhC,EAAA,CAAOF,SAAP,CAAA,YAAA,CAAA,SAAA,CAAkBC,UAAlB,CAAA,YAAA,CAAA,UAAA,CACA,GAAME,CAAAA,QAAQ,CAAGC,WAAjB,EAAA,CACA,GAAMC,CAAAA,aAAa,CAAGC,WAAW,CAAC,SAAA,SAAA,CAAA,CAAA,MAA0BC,CAAAA,SAAS,CAAnC,aAAA,CAAlC,CAAiC,CAAjC,CACA,GAAOC,CAAAA,KAAP,CAAgBH,aAAhB,CAAA,KAAA,CACA,GAAMI,CAAAA,eAAe,CAAGC,mBAAmB,CAAA,SAAA,CAA3C,UAA2C,CAA3C,CACA,GAAA,CAAA,gBAAA,CAAuBE,eAAe,CAAA,SAAA,CAAtC,UAAsC,CAAtC,CAAOD,YAAP,CAAA,gBAAA,CAAA,YAAA,CAEA,MACI,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAE,CAACF,eAAe,CAAhB,MAAA,CAAyBE,YAAY,CAAlD,WAAa,CAAb,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CACI,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,CAAQ,OAAO,CAAE,QAAA,CAAA,OAAA,EAAM,CACnBR,QAAQ,CAACU,YAAY,CAAC,CAClBC,OAAO,CADW,CAAA,CACNC,SAAS,CADH,EAAA,CACSC,MAAM,CAAE,CAC/BC,IAAI,CAAE,OADyB,CADjB,CAAD,CAAb,CAARd,CADJ,CAAA,CAMG,KAAK,CANR,gBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CADJ,CASQ,KAAK,EAAIK,KAAK,CAALA,MAAAA,CAAT,CAAA,CACM,KAAK,CAAL,GAAA,CAAU,SAAA,IAAA,CAAQ,CAChB,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,GAAG,CAAEU,IAAI,CAAf,EAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CAAqBA,IAAI,CAAhC,IAAO,CAAP,CAFR,CACM,CADN,CAVZ,IACI,CADJ,CAkBH,CAED,cAAA,CAAA,cAAA","sourcesContent":["import React from 'react';\nimport {Button, Text, View} from '../../components/UI';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getDemoSagas} from '../../store/actions';\nimport {RootState} from '../../types';\nimport {getSharedStyles} from '../../helpers';\nimport {makeContainerStyles} from '../../containers';\nimport {useBunnyKit} from '../../hooks/bunny-kit';\n\n\nfunction DemoSagaScreen() {\n    const {sizeLabor, themeLabor} = useBunnyKit();\n    const dispatch = useDispatch();\n    const demoSagaState = useSelector((rootState: RootState) => rootState.demoSagaState);\n    const {items} = demoSagaState;\n    const containerStyles = makeContainerStyles(sizeLabor, themeLabor);\n    const {sharedStyles} = getSharedStyles(sizeLabor, themeLabor);\n\n    return (\n        <View style={[containerStyles.Screen, sharedStyles.centralized]}>\n            <Button onPress={() => {\n                dispatch(getDemoSagas({\n                    pageNum: 1, pageCount: 10, filter: {\n                        text: 'saga1'\n                    }\n                }));\n            }} title=\"fetchDemoSagas\"/>\n            {\n                items && items.length > 0\n                    ? items.map(item => {\n                        return <Text key={item.id}>{item.text}</Text>;\n                    })\n                    : null\n            }\n        </View>\n    );\n}\n\nexport default DemoSagaScreen;\n"]},"metadata":{},"sourceType":"module"}