{"ast":null,"code":"import _objectDestructuringEmpty from\"@babel/runtime/helpers/objectDestructuringEmpty\";var _this=this,_jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/components/Tab/Tab.tsx\";import{Row}from\"../../containers\";import{Text,View}from\"../UI\";import*as React from'react';import{shortenTFunctionKey}from\"../../providers/i18n-labor\";import{getSharedStyles}from\"../../helpers\";import{makeStyles}from\"./styles\";import{useBunnyKit}from\"../../hooks/bunny-kit\";export var Tab=function Tab(_ref){var items=_ref.items,placeholder=_ref.placeholder,value=_ref.value,onChange=_ref.onChange;var _useBunnyKit=useBunnyKit(),sizeLabor=_useBunnyKit.sizeLabor,themeLabor=_useBunnyKit.themeLabor,t=_useBunnyKit.t;var st=shortenTFunctionKey(t,'dictionary');var _getSharedStyles=getSharedStyles(sizeLabor,themeLabor),sharedStyles=_getSharedStyles.sharedStyles;_objectDestructuringEmpty(sharedStyles);var styles=makeStyles(sizeLabor,themeLabor);return React.createElement(Row,{style:styles.tabs,__self:_this,__source:{fileName:_jsxFileName,lineNumber:23,columnNumber:12}},items.map(function(item){var activeIndicatorStyle=item===value?styles.tabIndicatorActive:styles.tabIndicator;var activeTextStyle=item===value?styles.tabTextActive:styles.tabText;return React.createElement(View,{style:styles.tab,key:item,__self:_this,__source:{fileName:_jsxFileName,lineNumber:28,columnNumber:24}},React.createElement(Text,{style:[styles.tabText,activeTextStyle],onPress:function onPress(){return onChange(item);},__self:_this,__source:{fileName:_jsxFileName,lineNumber:30,columnNumber:21}},st(item)),React.createElement(View,{style:[styles.tabIndicator,activeIndicatorStyle],__self:_this,__source:{fileName:_jsxFileName,lineNumber:32,columnNumber:21}}));}));};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/components/Tab/Tab.tsx"],"names":["Tab","items","placeholder","value","onChange","sizeLabor","themeLabor","t","useBunnyKit","st","shortenTFunctionKey","sharedStyles","getSharedStyles","styles","makeStyles","activeIndicatorStyle","item","activeTextStyle"],"mappings":"wLAAA,OAAA,GAAA,wBACA,OAAA,IAAA,CAAA,IAAA,aACA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,mBAAA,kCACA,OAAA,eAAA,qBACA,OAAA,UAAA,gBACA,OAAA,WAAA,6BAUA,MAAO,IAAMA,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAAA,IAAA,CAA0D,CAAA,GAAxDC,CAAAA,KAAwD,CAAA,IAAA,CAAxDA,KAAwD,CAAjDC,WAAiD,CAAA,IAAA,CAAjDA,WAAiD,CAApCC,KAAoC,CAAA,IAAA,CAApCA,KAAoC,CAA7BC,QAA6B,CAAA,IAAA,CAA7BA,QAA6B,CACzE,GAAA,CAAA,YAAA,CAAmCI,WAAnC,EAAA,CAAOH,SAAP,CAAA,YAAA,CAAA,SAAA,CAAkBC,UAAlB,CAAA,YAAA,CAAA,UAAA,CAA8BC,CAA9B,CAAA,YAAA,CAAA,CAAA,CACA,GAAME,CAAAA,EAAE,CAAGC,mBAAmB,CAAA,CAAA,CAA9B,YAA8B,CAA9B,CACA,GAAA,CAAA,gBAAA,CAAuBE,eAAe,CAAA,SAAA,CAAtC,UAAsC,CAAtC,CAAOD,YAAP,CAAA,gBAAA,CAAA,YAAA,CACA,yBAAA,CAAA,YAAA,CAAA,CACA,GAAME,CAAAA,MAAM,CAAGC,UAAU,CAAA,SAAA,CAAzB,UAAyB,CAAzB,CACA,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAK,KAAK,CAAED,MAAM,CAAlB,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CAEC,KAAK,CAAL,GAAA,CAAU,SAAA,IAAA,CAAQ,CACd,GAAME,CAAAA,oBAAoB,CAAGC,IAAI,GAAJA,KAAAA,CAAiBH,MAAM,CAAvBG,kBAAAA,CAA6CH,MAAM,CAAhF,YAAA,CACA,GAAMI,CAAAA,eAAe,CAAGD,IAAI,GAAJA,KAAAA,CAAiBH,MAAM,CAAvBG,aAAAA,CAAwCH,MAAM,CAAtE,OAAA,CACA,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAEA,MAAM,CAAnB,GAAA,CACM,GAAG,CADT,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CAEH,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAE,CAACA,MAAM,CAAP,OAAA,CAAb,eAAa,CAAb,CACM,OAAO,CAAE,QAAA,CAAA,OAAA,EAAA,CAAA,MAAMT,CAAAA,QAAQ,CAAd,IAAc,CAAd,CADf,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CACsCK,EAAE,CAHrC,IAGqC,CADxC,CAFG,CAIH,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAE,CAACI,MAAM,CAAP,YAAA,CAAb,oBAAa,CAAb,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CAJG,CAAP,CALZ,CAEQ,CAFD,CAAP,CANG,CAAA","sourcesContent":["import {Row} from '../../containers';\nimport {Text, View} from '../UI';\nimport * as React from 'react';\nimport {shortenTFunctionKey} from '../../providers/i18n-labor';\nimport {getSharedStyles} from '../../helpers';\nimport {makeStyles} from './styles';\nimport {useBunnyKit} from '../../hooks/bunny-kit';\n\n\nexport interface TabProps<ItemT> {\n    items: ItemT[],\n    value: ItemT,\n    placeholder?: ItemT,\n    onChange: (value: ItemT) => void\n}\n\nexport const Tab = ({items, placeholder, value, onChange}: TabProps<any>) => {\n    const {sizeLabor, themeLabor, t} = useBunnyKit();\n    const st = shortenTFunctionKey(t, 'dictionary');\n    const {sharedStyles} = getSharedStyles(sizeLabor, themeLabor);\n    const {} = sharedStyles;\n    const styles = makeStyles(sizeLabor, themeLabor);\n    return <Row style={styles.tabs}>\n        {\n            items.map(item => {\n                const activeIndicatorStyle = item === value ? styles.tabIndicatorActive : styles.tabIndicator;\n                const activeTextStyle = item === value ? styles.tabTextActive : styles.tabText;\n                return <View style={styles.tab}\n                             key={item}>\n                    <Text style={[styles.tabText, activeTextStyle]}\n                          onPress={() => onChange(item)}>{st(item)}</Text>\n                    <View style={[styles.tabIndicator, activeIndicatorStyle]}/>\n                </View>;\n            })\n        }\n    </Row>;\n};\n"]},"metadata":{},"sourceType":"module"}