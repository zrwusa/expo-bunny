{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{call,put,takeEvery}from'redux-saga/effects';import{bunnyAPI}from\"../../helpers/bunny-api\";import{collectBizLogicResult,collectSysError,receiveGetCurrentPrice,receiveGetDemoSagas,requestFailed,requesting,requestSuccess}from\"../actions\";import{EBizLogicMsg,EDemoCryptoCurrency,EDemoSaga,EDemoSagaFirebase}from\"../../constants\";import{bizLogicSuccess}from\"../../helpers\";import{firebase}from\"../../firebase\";export var sagasGenerator=_regeneratorRuntime.mark(function sagasGenerator(){return _regeneratorRuntime.wrap(function sagasGenerator$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return takeEvery(EDemoSaga.GET_DEMO_SAGAS,_regeneratorRuntime.mark(function _callee(action){var payload,url,method,config,_yield$call,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:payload=action.payload;url='/api/example-saga-items';method='GET';config={url:url,method:method,params:payload};_context.prev=4;_context.next=7;return put(requesting(config));case 7:_context.next=9;return call(function(){return bunnyAPI.request(config);});case 9:_yield$call=_context.sent;data=_yield$call.data.data;_context.next=13;return put(collectBizLogicResult(bizLogicSuccess(data,EBizLogicMsg.GET_DEMO_SAGAS_SUCCESS,false)));case 13:_context.next=15;return put(receiveGetDemoSagas(data.items));case 15:_context.next=17;return put(requestSuccess(config));case 17:_context.next=25;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](4);_context.next=23;return put(collectSysError(_context.t0));case 23:_context.next=25;return put(requestFailed(config));case 25:case\"end\":return _context.stop();}}},_callee,null,[[4,19]]);}));case 2:_context6.next=4;return takeEvery(EDemoCryptoCurrency.SAVE_QUICK_ALERT_SETTINGS,_regeneratorRuntime.mark(function _callee2(action){var payload,url,method,config,_yield$call2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:payload=action.payload;url='/api/push-service/alert-quick-settings';method='POST';config={url:url,method:method,data:payload};_context2.prev=4;_context2.next=7;return put(requesting(config));case 7:_context2.next=9;return call(function(){return bunnyAPI.request(config);});case 9:_yield$call2=_context2.sent;data=_yield$call2.data;_context2.next=13;return put(collectBizLogicResult(bizLogicSuccess(data,EBizLogicMsg.SAVE_QUICK_ALERT_SETTINGS_SUCCESS)));case 13:_context2.next=15;return put(requestSuccess(config));case 15:_context2.next=23;break;case 17:_context2.prev=17;_context2.t0=_context2[\"catch\"](4);_context2.next=21;return put(collectSysError(_context2.t0));case 21:_context2.next=23;return put(requestFailed(config));case 23:case\"end\":return _context2.stop();}}},_callee2,null,[[4,17]]);}));case 4:_context6.next=6;return takeEvery(EDemoCryptoCurrency.CANCEL_ALL_ALERT_SETTINGS,_regeneratorRuntime.mark(function _callee3(action){var payload,url,method,config,_yield$call3,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:payload=action.payload;url='/api/push-service/alert-settings';method='DELETE';config={url:url,method:method,params:payload};_context3.prev=4;_context3.next=7;return put(requesting(config));case 7:_context3.next=9;return call(function(){return bunnyAPI.request(config);});case 9:_yield$call3=_context3.sent;data=_yield$call3.data;_context3.next=13;return put(collectBizLogicResult(bizLogicSuccess(data,EBizLogicMsg.CANCEL_ALL_ALERT_SETTINGS_SUCCESS)));case 13:_context3.next=15;return put(requestSuccess(config));case 15:_context3.next=23;break;case 17:_context3.prev=17;_context3.t0=_context3[\"catch\"](4);_context3.next=21;return put(collectSysError(_context3.t0));case 21:_context3.next=23;return put(requestFailed(config));case 23:case\"end\":return _context3.stop();}}},_callee3,null,[[4,17]]);}));case 6:_context6.next=8;return takeEvery(EDemoCryptoCurrency.GET_CURRENT_PRICE,_regeneratorRuntime.mark(function _callee4(){var url,method,config,_yield$call4,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:url='/api/crypto-currency-prices';method='GET';config={url:url,method:method};_context4.prev=3;_context4.next=6;return put(requesting(config));case 6:_context4.next=8;return call(function(){return bunnyAPI.request(config);});case 8:_yield$call4=_context4.sent;data=_yield$call4.data.data;_context4.next=12;return put(receiveGetCurrentPrice({currentPrice:data}));case 12:_context4.next=14;return put(collectBizLogicResult(bizLogicSuccess(data,EBizLogicMsg.GET_CURRENT_PRICE_SUCCESS,false)));case 14:_context4.next=16;return put(requestSuccess(config));case 16:_context4.next=24;break;case 18:_context4.prev=18;_context4.t0=_context4[\"catch\"](3);_context4.next=22;return put(collectSysError(_context4.t0));case 22:_context4.next=24;return put(requestFailed(config));case 24:case\"end\":return _context4.stop();}}},_callee4,null,[[3,18]]);}));case 8:_context6.next=10;return takeEvery(EDemoSagaFirebase.SAVE_DEMO_SAGA_FIREBASE_TODO,_regeneratorRuntime.mark(function _callee5(action){var payload,url,method,config;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:payload=action.payload;url='/todoList';method='POST';config={url:url,method:method,data:payload};_context5.prev=4;_context5.next=7;return put(requesting(config));case 7:_context5.next=9;return call(function(){return firebase.database().ref(url).push(payload);});case 9:_context5.next=11;return put(requestSuccess(config));case 11:_context5.next=19;break;case 13:_context5.prev=13;_context5.t0=_context5[\"catch\"](4);_context5.next=17;return put(collectSysError(_context5.t0));case 17:_context5.next=19;return put(requestFailed(config));case 19:case\"end\":return _context5.stop();}}},_callee5,null,[[4,13]]);}));case 10:case\"end\":return _context6.stop();}}},sagasGenerator);});","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/store/sagas/sagas.ts"],"names":["sagasGenerator","takeEvery","EDemoSaga","payload","action","url","method","config","params","put","requesting","data","call","bunnyAPI","collectBizLogicResult","bizLogicSuccess","EBizLogicMsg","receiveGetDemoSagas","requestSuccess","collectSysError","requestFailed","EDemoCryptoCurrency","receiveGetCurrentPrice","currentPrice","EDemoSagaFirebase","firebase"],"mappings":"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","sourcesContent":["import {call, put, takeEvery} from 'redux-saga/effects';\nimport {bunnyAPI} from '../../helpers/bunny-api';\n\nimport {\n    collectBizLogicResult,\n    collectSysError,\n    getDemoSagas,\n    receiveGetCurrentPrice,\n    receiveGetDemoSagas,\n    requestFailed,\n    requesting,\n    requestSuccess\n} from '../actions';\nimport {EBizLogicMsg, EDemoCryptoCurrency, EDemoSaga, EDemoSagaFirebase} from '../../constants';\nimport {\n    CancelAlertSettingsAction,\n    RequestConfig,\n    SaveDemoSagaFirebaseTodoAction,\n    SaveQuickAlertSettingsAction,\n} from '../../types';\nimport {bizLogicSuccess} from '../../helpers';\nimport {firebase} from '../../firebase';\n\nexport const sagasGenerator = function* () {\n    yield takeEvery(EDemoSaga.GET_DEMO_SAGAS, function* (action: ReturnType<typeof getDemoSagas>) {\n        const {payload} = action;\n        const url = '/api/example-saga-items';\n        const method = 'GET';\n        const config: RequestConfig = {url, method, params: payload};\n        try {\n            yield put(requesting(config));\n            const {data: {data}} = yield call(() => bunnyAPI.request(config));\n            yield put(collectBizLogicResult(bizLogicSuccess(data, EBizLogicMsg.GET_DEMO_SAGAS_SUCCESS, false)));\n            yield put(receiveGetDemoSagas(data.items));\n            yield put(requestSuccess(config));\n        } catch (e: any) {\n            yield put(collectSysError(e));\n            yield put(requestFailed(config));\n        }\n    });\n\n    yield takeEvery(EDemoCryptoCurrency.SAVE_QUICK_ALERT_SETTINGS, function* (action: SaveQuickAlertSettingsAction) {\n        const {payload} = action;\n        const url = '/api/push-service/alert-quick-settings';\n        const method = 'POST';\n        const config: RequestConfig = {url, method, data: payload};\n        try {\n            yield put(requesting(config));\n            const {data} = yield call(() => bunnyAPI.request(config));\n            yield put(collectBizLogicResult(bizLogicSuccess(data, EBizLogicMsg.SAVE_QUICK_ALERT_SETTINGS_SUCCESS)));\n            yield put(requestSuccess(config));\n        } catch (e: any) {\n            yield put(collectSysError(e));\n            yield put(requestFailed(config));\n        }\n    });\n\n    yield takeEvery(EDemoCryptoCurrency.CANCEL_ALL_ALERT_SETTINGS, function* (action: CancelAlertSettingsAction) {\n        const {payload} = action;\n        const url = '/api/push-service/alert-settings';\n        const method = 'DELETE';\n        const config: RequestConfig = {url, method, params: payload};\n        try {\n            yield put(requesting(config));\n            const {data} = yield call(() => bunnyAPI.request(config));\n            yield put(collectBizLogicResult(bizLogicSuccess(data, EBizLogicMsg.CANCEL_ALL_ALERT_SETTINGS_SUCCESS)));\n            yield put(requestSuccess(config));\n        } catch (e: any) {\n            yield put(collectSysError(e));\n            yield put(requestFailed(config));\n        }\n    });\n\n    yield takeEvery(EDemoCryptoCurrency.GET_CURRENT_PRICE, function* () {\n        const url = '/api/crypto-currency-prices';\n        const method = 'GET';\n        const config: RequestConfig = {url, method};\n        try {\n            yield put(requesting(config));\n            const {data: {data}} = yield call(() => bunnyAPI.request(config));\n            yield put(receiveGetCurrentPrice({currentPrice: data}));\n            yield put(collectBizLogicResult(bizLogicSuccess(data, EBizLogicMsg.GET_CURRENT_PRICE_SUCCESS, false)));\n            yield put(requestSuccess(config));\n        } catch (e: any) {\n            yield put(collectSysError(e));\n            yield put(requestFailed(config));\n        }\n    });\n\n\n    yield takeEvery(EDemoSagaFirebase.SAVE_DEMO_SAGA_FIREBASE_TODO, function* (action: SaveDemoSagaFirebaseTodoAction) {\n        const {payload} = action;\n        const url = '/todoList';\n        const method = 'POST';\n        const config: RequestConfig = {url, method, data: payload};\n        try {\n            yield put(requesting(config));\n            yield call(() => {\n                return firebase.database().ref(url).push(payload);\n            });\n            yield put(requestSuccess(config));\n        } catch (e: any) {\n            yield put(collectSysError(e));\n            yield put(requestFailed(config));\n        }\n    });\n};\n"]},"metadata":{},"sourceType":"module"}