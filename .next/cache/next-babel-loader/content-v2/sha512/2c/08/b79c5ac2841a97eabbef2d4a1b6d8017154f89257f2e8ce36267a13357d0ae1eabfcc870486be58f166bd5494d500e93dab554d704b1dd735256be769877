{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import InteractionManager from\"react-native-web/dist/exports/InteractionManager\";import Platform from\"react-native-web/dist/exports/Platform\";var _setTimeout=global.setTimeout;var _clearTimeout=global.clearTimeout;var MAX_TIMER_DURATION_MS=60*1000;if(Platform.OS==='android'){var timerFix={};var runTask=function runTask(id,fn,ttl,args){var waitingTime=ttl-Date.now();if(waitingTime<=1){InteractionManager.runAfterInteractions(function(){if(!timerFix[id]){return;}delete timerFix[id];fn.apply(void 0,_toConsumableArray(args));});return;}var afterTime=Math.min(waitingTime,MAX_TIMER_DURATION_MS);timerFix[id]=_setTimeout(function(){return runTask(id,fn,ttl,args);},afterTime);};global.setTimeout=function(fn,time){for(var _len=arguments.length,args=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){args[_key-2]=arguments[_key];}if(time){if(MAX_TIMER_DURATION_MS<time){var ttl=Date.now()+time;var id='_lt_'+Object.keys(timerFix).length;runTask(id,fn,ttl,args);return id;}}return _setTimeout.apply(void 0,[fn,time].concat(args));};global.clearTimeout=function(id){if(typeof id==='string'&&id.startsWith('_lt_')){_clearTimeout(timerFix[id]);delete timerFix[id];return;}_clearTimeout(id);};}","map":null,"metadata":{},"sourceType":"module"}