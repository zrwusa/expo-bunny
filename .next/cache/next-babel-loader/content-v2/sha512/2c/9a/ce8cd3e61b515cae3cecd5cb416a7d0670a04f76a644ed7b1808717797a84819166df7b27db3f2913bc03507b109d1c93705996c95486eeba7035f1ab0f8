{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _createClass from\"@babel/runtime/helpers/createClass\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{arrayRemove}from\"../../utils\";import{AbstractEdge,AbstractGraph,AbstractVertex}from\"./abstract-graph\";export var DirectedVertex=function(_AbstractVertex){_inherits(DirectedVertex,_AbstractVertex);var _super=_createSuper(DirectedVertex);function DirectedVertex(id){_classCallCheck(this,DirectedVertex);return _super.call(this,id);}return DirectedVertex;}(AbstractVertex);export var DirectedEdge=function(_AbstractEdge){_inherits(DirectedEdge,_AbstractEdge);var _super2=_createSuper(DirectedEdge);function DirectedEdge(src,dest,weight){var _this;_classCallCheck(this,DirectedEdge);_this=_super2.call(this,weight);_this._src=src;_this._dest=dest;return _this;}_createClass(DirectedEdge,[{key:\"src\",get:function get(){return this._src;},set:function set(v){this._src=v;}},{key:\"dest\",get:function get(){return this._dest;},set:function set(v){this._dest=v;}}]);return DirectedEdge;}(AbstractEdge);export var DirectedGraph=function(_AbstractGraph){_inherits(DirectedGraph,_AbstractGraph);var _super3=_createSuper(DirectedGraph);function DirectedGraph(){var _this2;_classCallCheck(this,DirectedGraph);_this2=_super3.call(this);_this2._outEdgeMap=new Map();_this2._inEdgeMap=new Map();return _this2;}_createClass(DirectedGraph,[{key:\"getEdge\",value:function getEdge(srcOrId,destOrId){var edges=[];if(srcOrId!==null&&destOrId!==null){var src=this.getVertex(srcOrId);var dest=this.getVertex(destOrId);if(src&&dest){var srcOutEdges=this._outEdgeMap.get(src);if(srcOutEdges){edges=srcOutEdges.filter(function(edge){return edge.dest===dest.id;});}}}return edges[0]||null;}},{key:\"addEdge\",value:function addEdge(edge){if(!(this.containsVertex(edge.src)&&this.containsVertex(edge.dest))){return false;}var srcVertex=this.getVertex(edge.src);var srcOutEdges=this._outEdgeMap.get(srcVertex);if(srcOutEdges){srcOutEdges.push(edge);}else{this._outEdgeMap.set(srcVertex,[edge]);}var destVertex=this.getVertex(edge.dest);var destInEdges=this._inEdgeMap.get(destVertex);if(destInEdges){destInEdges.push(edge);}else{this._inEdgeMap.set(destVertex,[edge]);}return true;}},{key:\"removeEdgeBetween\",value:function removeEdgeBetween(srcOrId,destOrId){var src=this.getVertex(srcOrId);var dest=this.getVertex(destOrId);var removed=null;if(!src||!dest){return null;}var srcOutEdges=this._outEdgeMap.get(src);if(srcOutEdges){arrayRemove(srcOutEdges,function(edge){return edge.dest===dest.id;});}var destInEdges=this._inEdgeMap.get(dest);if(destInEdges){removed=arrayRemove(destInEdges,function(edge){return edge.src===src.id;})[0]||null;}return removed;}},{key:\"removeEdge\",value:function removeEdge(edge){var removed=null;var src=this.getVertex(edge.src);var dest=this.getVertex(edge.dest);if(src&&dest){var srcOutEdges=this._outEdgeMap.get(src);if(srcOutEdges&&srcOutEdges.length>0){arrayRemove(srcOutEdges,function(edge){return edge.src===src.id;});}var destInEdges=this._inEdgeMap.get(dest);if(destInEdges&&destInEdges.length>0){removed=arrayRemove(destInEdges,function(edge){return edge.dest===dest.id;})[0];}}return removed;}},{key:\"removeAllEdges\",value:function removeAllEdges(src,dest){return[];}},{key:\"incomingEdgesOf\",value:function incomingEdgesOf(vertexOrId){var target=this.getVertex(vertexOrId);if(target){return this._inEdgeMap.get(target)||[];}return[];}},{key:\"outgoingEdgesOf\",value:function outgoingEdgesOf(vertexOrId){var target=this.getVertex(vertexOrId);if(target){return this._outEdgeMap.get(target)||[];}return[];}},{key:\"degreeOf\",value:function degreeOf(vertexOrId){return this.outDegreeOf(vertexOrId)+this.inDegreeOf(vertexOrId);}},{key:\"inDegreeOf\",value:function inDegreeOf(vertexOrId){return this.incomingEdgesOf(vertexOrId).length;}},{key:\"outDegreeOf\",value:function outDegreeOf(vertexOrId){return this.outgoingEdgesOf(vertexOrId).length;}},{key:\"edgesOf\",value:function edgesOf(vertexOrId){return[].concat(_toConsumableArray(this.outgoingEdgesOf(vertexOrId)),_toConsumableArray(this.incomingEdgesOf(vertexOrId)));}},{key:\"getEdgeSrc\",value:function getEdgeSrc(e){return this.getVertex(e.src);}},{key:\"getEdgeDest\",value:function getEdgeDest(e){return this.getVertex(e.dest);}},{key:\"getDestinations\",value:function getDestinations(vertex){if(vertex===null){return[];}var destinations=[];var outgoingEdges=this.outgoingEdgesOf(vertex);for(var _iterator=_createForOfIteratorHelperLoose(outgoingEdges),_step;!(_step=_iterator()).done;){var outEdge=_step.value;var child=this.getEdgeDest(outEdge);if(child){destinations.push(child);}}return destinations;}},{key:\"topologicalSort\",value:function topologicalSort(){var _this3=this;var statusMap=new Map();for(var _iterator2=_createForOfIteratorHelperLoose(this._vertices),_step2;!(_step2=_iterator2()).done;){var entry=_step2.value;statusMap.set(entry[1],0);}var sorted=[];var hasCycle=false;var dfs=function dfs(cur){statusMap.set(cur,1);var children=_this3.getDestinations(cur);for(var _iterator3=_createForOfIteratorHelperLoose(children),_step3;!(_step3=_iterator3()).done;){var child=_step3.value;var childStatus=statusMap.get(child);if(childStatus===0){dfs(child);}else if(childStatus===1){hasCycle=true;}}statusMap.set(cur,2);sorted.push(cur);};for(var _iterator4=_createForOfIteratorHelperLoose(this._vertices),_step4;!(_step4=_iterator4()).done;){var _entry=_step4.value;if(statusMap.get(_entry[1])===0){dfs(_entry[1]);}}if(hasCycle){return null;}return sorted.reverse();}},{key:\"edgeSet\",value:function edgeSet(){var edges=[];this._outEdgeMap.forEach(function(outEdges){edges=[].concat(_toConsumableArray(edges),_toConsumableArray(outEdges));});return edges;}},{key:\"getNeighbors\",value:function getNeighbors(vertexOrId){var neighbors=[];var vertex=this.getVertex(vertexOrId);if(vertex){var outEdges=this.outgoingEdgesOf(vertex);for(var _iterator5=_createForOfIteratorHelperLoose(outEdges),_step5;!(_step5=_iterator5()).done;){var outEdge=_step5.value;var neighbor=this.getVertex(outEdge.dest);neighbors.push(neighbor);}}return neighbors;}},{key:\"getEndsOfEdge\",value:function getEndsOfEdge(edge){if(!this.containsEdge(edge.src,edge.dest)){return null;}var v1=this.getVertex(edge.src);var v2=this.getVertex(edge.dest);if(v1&&v2){return[v1,v2];}else{return null;}}}]);return DirectedGraph;}(AbstractGraph);","map":null,"metadata":{},"sourceType":"module"}