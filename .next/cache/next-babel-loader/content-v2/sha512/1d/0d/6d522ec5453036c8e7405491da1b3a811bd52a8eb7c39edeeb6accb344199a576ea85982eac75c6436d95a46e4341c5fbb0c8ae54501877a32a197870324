{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/components/BunnyChat/Actions.tsx\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import{withBunnyKit}from\"../../hooks/bunny-kit\";import{connectActionSheet}from\"../../../packages/react-native-action-sheet/src\";var makeStyles=function makeStyles(sizeLabor,themeLabor){var wp=sizeLabor.designsBasedOn.iphoneX.wp;var colors=themeLabor.theme.colors;return StyleSheet.create({container:{width:wp(26),height:wp(26),marginLeft:wp(10),marginBottom:wp(10)},wrapper:{borderRadius:wp(13),borderColor:colors.border,borderWidth:wp(2),flex:1},iconText:{color:colors.text3,fontWeight:'bold',fontSize:wp(16),backgroundColor:colors.transparent,textAlign:'center'}});};var Actions=function(_React$Component){_inherits(Actions,_React$Component);var _super=_createSuper(Actions);function Actions(){var _this;_classCallCheck(this,Actions);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onActionsPress=function(){var _this$props=_this.props,actionsConfig=_this$props.actionsConfig,showActionSheetWithOptions=_this$props.showActionSheetWithOptions;var optionKeys=Object.keys(actionsConfig);var cancelButtonIndex=optionKeys.indexOf('Cancel');showActionSheetWithOptions({options:optionKeys,cancelButtonIndex:cancelButtonIndex,tintColor:_this.props.actionOptionTintColor},function(buttonIndex){var key=optionKeys[buttonIndex];if(key){actionsConfig[key](_this.props);}});};return _this;}_createClass(Actions,[{key:\"renderIcon\",value:function renderIcon(){if(this.props.renderActionIcon){return this.props.renderActionIcon();}var _this$props$bunnyKit=this.props.bunnyKit,sizeLabor=_this$props$bunnyKit.sizeLabor,themeLabor=_this$props$bunnyKit.themeLabor;var styles=makeStyles(sizeLabor,themeLabor);return React.createElement(View,{style:[styles.wrapper,this.props.actionWrapperStyle],__self:this,__source:{fileName:_jsxFileName,lineNumber:82,columnNumber:13}},React.createElement(Text,{style:[styles.iconText,this.props.actionIconTextStyle],__self:this,__source:{fileName:_jsxFileName,lineNumber:83,columnNumber:17}},\"+\"));}},{key:\"render\",value:function render(){var _this$props$bunnyKit2=this.props.bunnyKit,sizeLabor=_this$props$bunnyKit2.sizeLabor,themeLabor=_this$props$bunnyKit2.themeLabor;var styles=makeStyles(sizeLabor,themeLabor);return React.createElement(TouchableOpacity,{style:[styles.container,this.props.actionContainerStyle],onPress:this.props.onPressActionButton||this.onActionsPress,__self:this,__source:{fileName:_jsxFileName,lineNumber:92,columnNumber:13}},this.renderIcon());}}]);return Actions;}(React.Component);Actions.defaultProps={actionsConfig:{},actionOptionTintColor:'#007AFF',renderActionIcon:undefined,actionContainerStyle:{},actionIconTextStyle:{},actionWrapperStyle:{}};export default withBunnyKit(connectActionSheet(Actions));","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/components/BunnyChat/Actions.tsx"],"names":["makeStyles","wp","sizeLabor","colors","themeLabor","container","width","height","marginLeft","marginBottom","wrapper","borderRadius","borderColor","borderWidth","flex","iconText","color","fontWeight","fontSize","backgroundColor","textAlign","Actions","React","Component","defaultProps","actionsConfig","actionOptionTintColor","renderActionIcon","actionContainerStyle","actionIconTextStyle","actionWrapperStyle","onActionsPress","showActionSheetWithOptions","optionKeys","Object","cancelButtonIndex","options","tintColor","key","styles","withBunnyKit","connectActionSheet"],"mappings":"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","sourcesContent":["import React, {ReactNode} from 'react';\nimport {StyleProp, StyleSheet, Text, TextStyle, TouchableOpacity, View, ViewStyle,} from 'react-native';\nimport {WithBunnyKit, withBunnyKit} from '../../hooks/bunny-kit';\nimport {ActionSheetProps, connectActionSheet} from '../../../packages/react-native-action-sheet/src';\nimport {SizeLabor, ThemeLabor} from '../../types';\n\nconst makeStyles = (sizeLabor: SizeLabor, themeLabor: ThemeLabor) => {\n    const {wp} = sizeLabor.designsBasedOn.iphoneX;\n    const {theme: {colors}} = themeLabor;\n    return StyleSheet.create({\n        container: {\n            width: wp(26),\n            height: wp(26),\n            marginLeft: wp(10),\n            marginBottom: wp(10),\n        },\n        wrapper: {\n            borderRadius: wp(13),\n            borderColor: colors.border,\n            borderWidth: wp(2),\n            flex: 1,\n        },\n        iconText: {\n            color: colors.text3,\n            fontWeight: 'bold',\n            fontSize: wp(16),\n            backgroundColor: colors.transparent,\n            textAlign: 'center',\n        },\n    });\n};\n\nexport interface ActionsProps {\n    actionsConfig?: { [key: string]: (props: ActionsProps & ActionSheetProps & WithBunnyKit) => void };\n    actionOptionTintColor?: string;\n    renderActionIcon?: () => ReactNode;\n    actionWrapperStyle?: StyleProp<ViewStyle>;\n    actionIconTextStyle?: StyleProp<TextStyle>;\n    actionContainerStyle?: StyleProp<ViewStyle>;\n\n    onPressActionButton?(): void;\n}\n\nclass Actions extends React.Component<ActionsProps & ActionSheetProps & WithBunnyKit> {\n    static defaultProps: ActionsProps = {\n        actionsConfig: {},\n        actionOptionTintColor: '#007AFF',\n        renderActionIcon: undefined,\n        actionContainerStyle: {},\n        actionIconTextStyle: {},\n        actionWrapperStyle: {},\n    };\n\n    onActionsPress = () => {\n        // TODO support multi actions\n        const {actionsConfig, showActionSheetWithOptions} = this.props;\n        const optionKeys = Object.keys(actionsConfig!);\n        const cancelButtonIndex = optionKeys.indexOf('Cancel');\n        showActionSheetWithOptions(\n            {\n                options: optionKeys,\n                cancelButtonIndex,\n                tintColor: this.props.actionOptionTintColor,\n            },\n            (buttonIndex: number) => {\n                const key = optionKeys[buttonIndex];\n                if (key) {\n                    actionsConfig![key](this.props);\n                }\n            },\n        );\n    };\n\n    renderIcon() {\n        if (this.props.renderActionIcon) {\n            return this.props.renderActionIcon();\n        }\n        const {bunnyKit: {sizeLabor, themeLabor}} = this.props;\n        const styles = makeStyles(sizeLabor, themeLabor);\n        // TODO support multi actions\n        return (\n            <View style={[styles.wrapper, this.props.actionWrapperStyle]}>\n                <Text style={[styles.iconText, this.props.actionIconTextStyle]}>+</Text>\n            </View>\n        );\n    }\n\n    render() {\n        const {bunnyKit: {sizeLabor, themeLabor}} = this.props;\n        const styles = makeStyles(sizeLabor, themeLabor);\n        return (\n            <TouchableOpacity\n                style={[styles.container, this.props.actionContainerStyle]}\n                onPress={this.props.onPressActionButton || this.onActionsPress}\n            >\n                {this.renderIcon()}\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default withBunnyKit(connectActionSheet(Actions));\n"]},"metadata":{},"sourceType":"module"}