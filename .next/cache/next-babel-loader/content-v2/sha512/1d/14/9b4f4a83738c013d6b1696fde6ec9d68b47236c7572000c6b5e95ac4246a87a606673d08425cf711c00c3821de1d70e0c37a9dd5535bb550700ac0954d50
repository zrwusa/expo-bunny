{"ast":null,"code":"var _this=this,_jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/containers/Col/Col.tsx\";import React from'react';import View from\"react-native-web/dist/exports/View\";export var Col=function Col(props){var children=props.children,_props$size=props.size,size=_props$size===void 0?1:_props$size,style=props.style,_props$align=props.align,align=_props$align===void 0?'stretch':_props$align;var mergeStyle=[{flexDirection:'column',flex:size,alignSelf:'stretch',alignItems:align,justifyContent:'center'},style];return React.createElement(View,{style:mergeStyle,__self:_this,__source:{fileName:_jsxFileName,lineNumber:44,columnNumber:12}},children?children:null);};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/containers/Col/Col.tsx"],"names":["Col","children","size","style","align","props","mergeStyle","flexDirection","flex","alignSelf","alignItems","justifyContent"],"mappings":"iGAAA,MAAA,CAAA,KAAA,KAAA,OAAA,C,qDAUA,MAAO,IAAMA,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAAA,KAAA,CAAqB,CACpC,GAAOC,CAAAA,QAAP,CAAuDI,KAAvD,CAAA,QAAA,CAAA,WAAA,CAAuDA,KAAvD,CAAA,IAAA,CAAiBH,IAAjB,CAAA,WAAA,GAAA,IAAA,EAAA,CAAA,CAAA,CAAA,WAAA,CAA2BC,KAA3B,CAAuDE,KAAvD,CAAA,KAAA,CAAA,YAAA,CAAuDA,KAAvD,CAAA,KAAA,CAAkCD,KAAlC,CAAA,YAAA,GAAA,IAAA,EAAA,CAAA,SAAA,CAAA,YAAA,CAsBA,GAAME,CAAAA,UAAgC,CAAG,CACrC,CACIC,aAAa,CADjB,QAAA,CAEIC,IAAI,CAFR,IAAA,CAGIC,SAAS,CAHb,SAAA,CAIIC,UAAU,CAJd,KAAA,CAKIC,cAAc,CAAE,QALpB,CADqC,CAAzC,KAAyC,CAAzC,CAUA,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAX,UAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CACFV,QAAQ,CAAA,QAAA,CADb,IAAO,CAAP,CAjCG,CAAA","sourcesContent":["import React from 'react';\nimport {FlexAlignType, StyleProp, View, ViewStyle} from 'react-native';\n\nexport interface ColProps {\n    children?: React.ReactNode,\n    size?: number,\n    style?: StyleProp<ViewStyle>,\n    align?: FlexAlignType;\n}\n\nexport const Col = (props: ColProps) => {\n    const {children, size = 1, style, align = 'stretch'} = props;\n\n    // const styleOBJ = StyleSheet.flatten<ViewStyle>(style)\n    // // web basis 'auto' shrink:0 grow:0\n    // let flexGrow: FlexStyle['flexGrow'] = size;\n    // let flexShrink: FlexStyle['flexShrink'] = size;\n    // let flexBasis: FlexStyle['flexBasis'] ='auto';\n    // let flexBasis: FlexStyle['flexBasis'] = Platform.select<FlexStyle['flexBasis']>({\n    //     web:'auto',\n    //     ios:0,\n    //     android:0\n    // });\n    // // Let the width take precedence over the flex layout\n    // if (styleOBJ && styleOBJ.width) {\n    //     flexBasis = 'auto'\n    //     flexGrow = 0\n    //     flexShrink = 0\n    // }\n    // flexGrow: flexGrow,\n    //     flexShrink: flexShrink,\n    //     flexBasis: flexBasis,\n\n    const mergeStyle: StyleProp<ViewStyle> = [\n        {\n            flexDirection: 'column',\n            flex: size,\n            alignSelf: 'stretch',\n            alignItems: align,\n            justifyContent: 'center',\n        },\n        style\n    ];\n    return <View style={mergeStyle}>\n        {children ? children : null}\n    </View>;\n};\n"]},"metadata":{},"sourceType":"module"}