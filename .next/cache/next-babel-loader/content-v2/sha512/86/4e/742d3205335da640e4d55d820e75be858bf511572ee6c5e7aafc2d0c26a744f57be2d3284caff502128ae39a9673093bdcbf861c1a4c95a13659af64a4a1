{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _this=this,_jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/providers/theme-labor/ThemeLaborProvider.tsx\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import*as React from'react';import{useEffect,useMemo,useState}from'react';import{ThemeLaborContext}from\"./ThemeLaborContext\";import AsyncStorage from'@react-native-async-storage/async-storage';import BunnyConstants,{EThemes}from\"../../constants/constants\";import{collectBizLogicResult,collectSysError}from\"../../store/actions\";import{useColorScheme}from'react-native-appearance';import{useDispatch}from'react-redux';import{Preparing}from\"../../components/Preparing\";import{Provider as PaperProvider}from'react-native-paper';import{getThemes}from\"./theme\";import _ from'lodash';import Dimensions from\"react-native-web/dist/exports/Dimensions\";import{bizLogicError}from\"../../helpers\";export var ThemeLaborProvider=function ThemeLaborProvider(props){var children=props.children;var dispatch=useDispatch();var sysColorSchemeName=useColorScheme();var _useState=useState(getThemes()),_useState2=_slicedToArray(_useState,2),themes=_useState2[0],setThemes=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isReady=_useState4[0],setIsReady=_useState4[1];var _useState5=useState(EThemes.light),_useState6=_slicedToArray(_useState5,2),themeName=_useState6[0],setThemeName=_useState6[1];var _useState7=useState(themes[themeName]),_useState8=_slicedToArray(_useState7,2),theme=_useState8[0],setTheme=_useState8[1];var changeTheme=function changeTheme(themeName){return _regeneratorRuntime.async(function changeTheme$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!Object.keys(EThemes).includes(themeName)){_context.next=7;break;}_context.next=3;return _regeneratorRuntime.awrap(AsyncStorage.setItem(BunnyConstants.THEME_NAME_PERSISTENCE_KEY,themeName));case 3:setThemeName(themeName);setTheme(themes[themeName]);_context.next=8;break;case 7:dispatch(collectBizLogicResult(bizLogicError(\"No \"+themeName+\" \",true)));case 8:case\"end\":return _context.stop();}}},null,null,null,Promise);};useEffect(function(){var bootstrapAsync=function bootstrapAsync(){var themeNameSaved,_themeName;return _regeneratorRuntime.async(function bootstrapAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(AsyncStorage.getItem(BunnyConstants.THEME_NAME_PERSISTENCE_KEY));case 3:themeNameSaved=_context2.sent;if(themeNameSaved){_themeName=themeNameSaved;}else if(sysColorSchemeName){_themeName=sysColorSchemeName===EThemes.dark?EThemes.dark:EThemes.light;}else{_themeName=EThemes.light;}_context2.next=7;return _regeneratorRuntime.awrap(changeTheme(_themeName));case 7:_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);dispatch(collectSysError(_context2.t0));case 12:case\"end\":return _context2.stop();}}},null,null,[[0,9]],Promise);};bootstrapAsync().then(function(){setIsReady(true);});},[]);useEffect(function(){setTheme(themes[themeName]);},[themes]);useEffect(function(){var onDimensionsChange=_.throttle(function(){setThemes(getThemes());},BunnyConstants.throttleWait);Dimensions.addEventListener('change',onDimensionsChange);return function(){return Dimensions.removeEventListener('change',onDimensionsChange);};});var themeLaborMemorized=useMemo(function(){return{theme:theme,currentThemeName:themeName,themes:themes,changeTheme:changeTheme,sysColorSchemeName:sysColorSchemeName};},[theme,changeTheme,themeName,sysColorSchemeName]);return isReady?React.createElement(ThemeLaborContext.Provider,{value:themeLaborMemorized,__self:_this,__source:{fileName:_jsxFileName,lineNumber:81,columnNumber:15}},React.createElement(PaperProvider,{theme:themeLaborMemorized.theme,__self:_this,__source:{fileName:_jsxFileName,lineNumber:82,columnNumber:17}},children)):React.createElement(Preparing,{text:\"Theme Provider loading\",__self:_this,__source:{fileName:_jsxFileName,lineNumber:86,columnNumber:15}});};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/providers/theme-labor/ThemeLaborProvider.tsx"],"names":["Provider","ThemeLaborProvider","children","props","dispatch","useDispatch","sysColorSchemeName","useColorScheme","themes","setThemes","useState","getThemes","isReady","setIsReady","themeName","setThemeName","EThemes","theme","setTheme","changeTheme","Object","AsyncStorage","BunnyConstants","collectBizLogicResult","bizLogicError","useEffect","bootstrapAsync","themeNameSaved","collectSysError","onDimensionsChange","Dimensions","themeLaborMemorized","useMemo","currentThemeName"],"mappings":"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","sourcesContent":["// todo description this provider\nimport * as React from 'react';\nimport {useEffect, useMemo, useState} from 'react';\nimport {ThemeName, ThemeProviderProps} from '../../types';\nimport {ThemeLaborContext} from './ThemeLaborContext';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport BunnyConstants, {EThemes} from '../../constants/constants';\nimport {collectBizLogicResult, collectSysError} from '../../store/actions';\nimport {useColorScheme} from 'react-native-appearance';\nimport {useDispatch} from 'react-redux';\nimport {Preparing} from '../../components/Preparing';\nimport {Provider as PaperProvider} from 'react-native-paper';\nimport {getThemes} from './theme';\nimport _ from 'lodash';\nimport {Dimensions} from 'react-native';\nimport {bizLogicError} from '../../helpers';\n\nexport const ThemeLaborProvider = (props: ThemeProviderProps): JSX.Element => {\n    const {children} = props;\n    const dispatch = useDispatch();\n    const sysColorSchemeName = useColorScheme();\n    const [themes, setThemes] = useState(getThemes());\n    const [isReady, setIsReady] = useState(false);\n    const [themeName, setThemeName] = useState(EThemes.light);\n    const [theme, setTheme] = useState(themes[themeName]);\n\n    const changeTheme = async (themeName: ThemeName) => {\n        if (Object.keys(EThemes).includes(themeName)) {\n            await AsyncStorage.setItem(BunnyConstants.THEME_NAME_PERSISTENCE_KEY, themeName);\n            setThemeName(themeName);\n            setTheme(themes[themeName]);\n        } else {\n            dispatch(collectBizLogicResult(bizLogicError(`No ${themeName} `, true)));\n        }\n    };\n\n    useEffect(() => {\n        const bootstrapAsync = async () => {\n            try {\n                const themeNameSaved = await AsyncStorage.getItem(BunnyConstants.THEME_NAME_PERSISTENCE_KEY);\n                let themeName: ThemeName;\n                if (themeNameSaved) {\n                    themeName = themeNameSaved as ThemeName;\n                } else if (sysColorSchemeName) {\n                    themeName = (sysColorSchemeName === EThemes.dark) ? EThemes.dark : EThemes.light;\n                } else {\n                    themeName = EThemes.light;\n                }\n                await changeTheme(themeName);\n            } catch (err: any) {\n                dispatch(collectSysError(err));\n            }\n        };\n        bootstrapAsync()\n            .then(() => {\n                setIsReady(true);\n            });\n\n    }, []);\n\n    useEffect(() => {\n        setTheme(themes[themeName]);\n    }, [themes]);\n\n    useEffect(() => {\n        const onDimensionsChange = _.throttle(() => {\n            setThemes(getThemes());\n        }, BunnyConstants.throttleWait);\n        Dimensions.addEventListener('change', onDimensionsChange);\n        return () => Dimensions.removeEventListener('change', onDimensionsChange);\n    });\n\n    const themeLaborMemorized = useMemo(\n        () => {\n            return {theme, currentThemeName: themeName, themes, changeTheme, sysColorSchemeName};\n        }\n        , [theme, changeTheme, themeName, sysColorSchemeName]);\n\n    return (\n        isReady\n            ? <ThemeLaborContext.Provider value={themeLaborMemorized}>\n                <PaperProvider theme={themeLaborMemorized.theme as ReactNativePaper.Theme}>\n                    {children}\n                </PaperProvider>\n            </ThemeLaborContext.Provider>\n            : <Preparing text=\"Theme Provider loading\"/>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}