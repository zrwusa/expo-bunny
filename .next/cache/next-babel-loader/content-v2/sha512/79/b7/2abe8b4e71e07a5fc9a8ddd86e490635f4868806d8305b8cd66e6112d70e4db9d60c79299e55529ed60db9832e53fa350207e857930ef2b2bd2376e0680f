{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Modal from\"react-native-web/dist/exports/Modal\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import Platform from\"react-native-web/dist/exports/Platform\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";var DRAG_DISMISS_THRESHOLD=150;var STATUS_BAR_OFFSET=Platform.OS==='android'?-25:0;var isIOS=Platform.OS==='ios';var getCurrentWindowDimension=function getCurrentWindowDimension(){return Dimensions.get('window');};var getStyles=function getStyles(){return StyleSheet.create({background:{position:'absolute',top:0,left:0,width:getCurrentWindowDimension().width,height:getCurrentWindowDimension().height},open:{position:'absolute',flex:1,justifyContent:'center',backgroundColor:'transparent'},header:{position:'absolute',top:0,left:0,width:getCurrentWindowDimension().width,backgroundColor:'transparent'},closeButton:{fontSize:35,color:'white',lineHeight:40,width:40,textAlign:'center',shadowOffset:{width:0,height:0},shadowRadius:1.5,shadowColor:'black',shadowOpacity:0.8}});};export var LightBoxOverlay=function(_Component){_inherits(LightBoxOverlay,_Component);var _super=_createSuper(LightBoxOverlay);function LightBoxOverlay(props){var _this;_classCallCheck(this,LightBoxOverlay);_this=_super.call(this,props);_this.open=function(){if(isIOS){StatusBar.setHidden(true,'fade');}_this.state.pan.setValue(0);_this.setState({isAnimating:true,target:{x:0,y:0,opacity:1}});Animated.spring(_this.state.openVal,_objectSpread(_objectSpread({toValue:1},_this.props.springConfig),{},{useNativeDriver:false})).start(function(){_this.setState({isAnimating:false});_this.props.didOpen&&_this.props.didOpen();});};_this.close=function(){_this.props.willClose&&_this.props.willClose();if(isIOS){StatusBar.setHidden(false,'fade');}_this.setState({isAnimating:true});Animated.spring(_this.state.openVal,_objectSpread(_objectSpread({toValue:0},_this.props.springConfig),{},{useNativeDriver:false})).start(function(){_this.setState({isAnimating:false});_this.props.onClose&&_this.props.onClose();});};_this.state={isAnimating:false,isPanning:false,target:{x:0,y:0,opacity:1},pan:new Animated.Value(0),openVal:new Animated.Value(0)};_this._panResponder=PanResponder.create({onStartShouldSetPanResponder:function onStartShouldSetPanResponder(evt,gestureState){return!_this.state.isAnimating;},onStartShouldSetPanResponderCapture:function onStartShouldSetPanResponderCapture(evt,gestureState){return!_this.state.isAnimating;},onMoveShouldSetPanResponder:function onMoveShouldSetPanResponder(evt,gestureState){return!_this.state.isAnimating;},onMoveShouldSetPanResponderCapture:function onMoveShouldSetPanResponderCapture(evt,gestureState){return!_this.state.isAnimating;},onPanResponderGrant:function onPanResponderGrant(evt,gestureState){_this.state.pan.setValue(0);_this.setState({isPanning:true});},onPanResponderMove:Animated.event([null,{dy:_this.state.pan}],{useNativeDriver:false}),onPanResponderTerminationRequest:function onPanResponderTerminationRequest(evt,gestureState){return true;},onPanResponderRelease:function onPanResponderRelease(evt,gestureState){if(Math.abs(gestureState.dy)>DRAG_DISMISS_THRESHOLD){_this.setState({isPanning:false,target:{y:gestureState.dy,x:gestureState.dx,opacity:1-Math.abs(gestureState.dy/getCurrentWindowDimension().height)}});_this.close();}else{Animated.spring(_this.state.pan,_objectSpread(_objectSpread({toValue:0},_this.props.springConfig),{},{useNativeDriver:false})).start(function(){_this.setState({isPanning:false});});}}});return _this;}_createClass(LightBoxOverlay,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.isOpen){this.open();}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.isOpen!==prevProps.isOpen&&this.props.isOpen){this.open();}}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,isOpen=_this$props.isOpen,renderHeader=_this$props.renderHeader,swipeToDismiss=_this$props.swipeToDismiss,origin=_this$props.origin,backgroundColor=_this$props.backgroundColor;var _this$state=this.state,isPanning=_this$state.isPanning,isAnimating=_this$state.isAnimating,openVal=_this$state.openVal,target=_this$state.target;var lightBoxOpacityStyle={opacity:openVal.interpolate({inputRange:[0,1],outputRange:[0,target.opacity]})};var handlers;if(swipeToDismiss){handlers=this._panResponder.panHandlers;}var dragStyle;if(isPanning){dragStyle={top:this.state.pan};lightBoxOpacityStyle.opacity=this.state.pan.interpolate({inputRange:[-getCurrentWindowDimension().height,0,getCurrentWindowDimension().height],outputRange:[0,1,0]});}var styles=getStyles();var openStyle=[styles.open,{left:openVal.interpolate({inputRange:[0,1],outputRange:[origin.x,target.x]}),top:openVal.interpolate({inputRange:[0,1],outputRange:[origin.y+STATUS_BAR_OFFSET,target.y+STATUS_BAR_OFFSET]}),width:openVal.interpolate({inputRange:[0,1],outputRange:[origin.width,getCurrentWindowDimension().width]}),height:openVal.interpolate({inputRange:[0,1],outputRange:[origin.height,getCurrentWindowDimension().height]})}];var background=React.createElement(Animated.View,{style:[styles.background,{backgroundColor:backgroundColor},lightBoxOpacityStyle]});var header=React.createElement(Animated.View,{style:[styles.header,lightBoxOpacityStyle]},renderHeader?renderHeader(this.close):React.createElement(TouchableOpacity,{onPress:this.close},React.createElement(Text,{style:styles.closeButton},\"\\xD7\")));var content=React.createElement(Animated.View,_extends({style:[openStyle,dragStyle]},handlers),this.props.children);if(this.props.navigator){return React.createElement(View,null,background,content,header);}return React.createElement(Modal,{visible:isOpen,transparent:true,onRequestClose:function onRequestClose(){return _this2.close();}},background,content,header);}}]);return LightBoxOverlay;}(Component);LightBoxOverlay.defaultProps={springConfig:{tension:30,friction:7},backgroundColor:'black'};","map":null,"metadata":{},"sourceType":"module"}