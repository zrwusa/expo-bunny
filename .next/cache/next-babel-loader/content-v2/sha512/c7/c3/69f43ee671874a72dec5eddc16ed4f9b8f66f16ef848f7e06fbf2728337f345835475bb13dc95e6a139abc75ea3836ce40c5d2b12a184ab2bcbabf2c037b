{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _wrapNativeSuper from\"@babel/runtime/helpers/wrapNativeSuper\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _ from'lodash';export function randomText(length){var result='';var characters='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';var charactersLength=characters.length;for(var i=0;i<length;i++){result+=characters.charAt(Math.floor(Math.random()*charactersLength));}return result;}export var uuidV4=function uuidV4(){return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:r&0x3|0x8;return v.toString(16);});};export var IncrementId=function(){function IncrementId(prefix){_classCallCheck(this,IncrementId);this._prefix=prefix?prefix:'';this._id=this._prefix+'0';}_createClass(IncrementId,[{key:\"getId\",value:function getId(){var _id=this._id,_prefix=this._prefix;if(!_id){this._id=_prefix+'0';}else{var idNumStr=_id.substr(_prefix.length,_id.length-_prefix.length);var newIdNum=parseInt(idNumStr,10)+1;this._id=_prefix+newIdNum.toString();}return this._id;}}]);return IncrementId;}();export function incrementId(prefix){var _prefix=prefix?prefix:'';var _id=_prefix+'0';return function id(){var idNumStr=_id.substr(_prefix.length,_id.length-_prefix.length);var newIdNum=parseInt(idNumStr,10)+1;_id=_prefix+newIdNum.toString();return _id;};}export var getValue=function getValue(obj,names){return names.map(function(i){return obj[i];});};export var isObject=function isObject(object){return object!=null&&typeof object==='object';};export var looseEqual=function looseEqual(a,b){return a==b;};export var strictEqual=function strictEqual(a,b){return a===b;};export var strictObjectIsEqual=function strictObjectIsEqual(a,b){return Object.is(a,b);};export var deepObjectStrictEqual=function deepObjectStrictEqual(object1,object2){var keys1=Object.keys(object1);var keys2=Object.keys(object2);if(keys1.length!==keys2.length){return false;}for(var _i=0,_keys=keys1;_i<_keys.length;_i++){var _key=_keys[_i];var val1=object1[_key];var val2=object2[_key];var areObjects=isObject(val1)&&isObject(val2);if(areObjects&&!deepObjectStrictEqual(val1,val2)||!areObjects&&val1!==val2){return false;}}return true;};export var isTypeEqual=function isTypeEqual(obj){try{var m=obj;}catch(e){}};export function reverseColor(oldColor){var oldColorTemp='0x'+oldColor.replace(/#/g,'');var str='000000'+(0xFFFFFF-Number(oldColorTemp)).toString(16);return'#'+str.substring(str.length-6,str.length);}export var isSameStructure=function isSameStructure(objA,objB){var objATraversable=objA;var objBTraversable=objB;var objAKeys=Object.keys(objATraversable);var objBKeys=Object.keys(objBTraversable);var isSame=true;if(objAKeys.length!==objBKeys.length){return isSame=false;}else{objAKeys.forEach(function(i){if(!objBKeys.includes(i)){return isSame=false;}});return isSame;}};export var isLeafParent=function isLeafParent(obj){var isLeaf=true;Object.values(obj).forEach(function(value){if(typeof value==='object'&&value instanceof Array){value.forEach(function(item){if(typeof item==='object'){return false;}});return isLeaf=true;}if(!['string','boolean','number','undefined','function'].includes(typeof value)&&value!==null){return isLeaf=false;}});return isLeaf;};export var addDays=function addDays(date,days){date.setDate(date.getDate()+days);return date;};export var WaitManager=function(){function WaitManager(nXSpeed){_classCallCheck(this,WaitManager);this._time1=1000;this._time2=2000;this._time3=3000;this._time4=4000;this._time10=10000;this._time20=20000;this._time30=20000;this._time60=60000;this._cusTime=1000;this._nXSpeed=1;if(nXSpeed===undefined)nXSpeed=1;this._nXSpeed=nXSpeed;}_createClass(WaitManager,[{key:\"time1\",get:function get(){return this._time1/this._nXSpeed;}},{key:\"time2\",get:function get(){return this._time2/this._nXSpeed;}},{key:\"time3\",get:function get(){return this._time3/this._nXSpeed;}},{key:\"time4\",get:function get(){return this._time4/this._nXSpeed;}},{key:\"time10\",get:function get(){return this._time10/this._nXSpeed;}},{key:\"time20\",get:function get(){return this._time20/this._nXSpeed;}},{key:\"time50\",get:function get(){return this._time30/this._nXSpeed;}},{key:\"time60\",get:function get(){return this._time60/this._nXSpeed;}},{key:\"cusTime\",get:function get(){return this._cusTime/this._nXSpeed;},set:function set(v){this._cusTime=v;}}]);return WaitManager;}();export var wait=function wait(ms,resolveValue){return _regeneratorRuntime.async(function wait$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",new Promise(function(resolve,reject){setTimeout(function(){var finalResolveValue=resolveValue||true;resolve(finalResolveValue);},ms);}));case 1:case\"end\":return _context.stop();}}},null,null,null,Promise);};export var AuthAPIError=function(_Error){_inherits(AuthAPIError,_Error);var _super=_createSuper(AuthAPIError);function AuthAPIError(serverErrorMessage,serverErrorCode,serverErrorStack){var _this;_classCallCheck(this,AuthAPIError);_this=_super.call(this,serverErrorMessage);if(serverErrorStack){_this.serverErrorStack=serverErrorStack;}if(serverErrorCode){_this.serverErrorCode=serverErrorCode;}_this.name=new.target.name;if(typeof Error.captureStackTrace==='function'){Error.captureStackTrace(_assertThisInitialized(_this),new.target);}if(typeof Object.setPrototypeOf==='function'){Object.setPrototypeOf(_assertThisInitialized(_this),new.target.prototype);}else{_assertThisInitialized(_this).__proto__=new.target.prototype;}return _this;}return AuthAPIError;}(_wrapNativeSuper(Error));export var BunnyAPIError=function(_Error2){_inherits(BunnyAPIError,_Error2);var _super2=_createSuper(BunnyAPIError);function BunnyAPIError(serverErrorMessage,serverErrorCode,serverErrorStack){var _this2;_classCallCheck(this,BunnyAPIError);_this2=_super2.call(this,serverErrorMessage);if(serverErrorStack){_this2.serverErrorStack=serverErrorStack;}if(serverErrorCode){_this2.serverErrorCode=serverErrorCode;}_this2.name=new.target.name;if(typeof Error.captureStackTrace==='function'){Error.captureStackTrace(_assertThisInitialized(_this2),new.target);}if(typeof Object.setPrototypeOf==='function'){Object.setPrototypeOf(_assertThisInitialized(_this2),new.target.prototype);}else{_assertThisInitialized(_this2).__proto__=new.target.prototype;}return _this2;}return BunnyAPIError;}(_wrapNativeSuper(Error));export var NomicsAPIError=function(_Error3){_inherits(NomicsAPIError,_Error3);var _super3=_createSuper(NomicsAPIError);function NomicsAPIError(serverErrorMessage,serverErrorCode,serverErrorStack){var _this3;_classCallCheck(this,NomicsAPIError);_this3=_super3.call(this,serverErrorMessage);if(serverErrorStack){_this3.serverErrorStack=serverErrorStack;}if(serverErrorCode){_this3.serverErrorCode=serverErrorCode;}_this3.name=new.target.name;if(typeof Error.captureStackTrace==='function'){Error.captureStackTrace(_assertThisInitialized(_this3),new.target);}if(typeof Object.setPrototypeOf==='function'){Object.setPrototypeOf(_assertThisInitialized(_this3),new.target.prototype);}else{_assertThisInitialized(_this3).__proto__=new.target.prototype;}return _this3;}return NomicsAPIError;}(_wrapNativeSuper(Error));export function extractValue(data){var result=[];if(data&&data.length>0){result=data.map(function(item){return item.value;});}return result;}export function keyValueToArray(data){var itemArray=[];var keys=Object.keys(data);for(var _i2=0,_keys2=keys;_i2<_keys2.length;_i2++){var i=_keys2[_i2];itemArray.push(_objectSpread(_objectSpread({},data[i]),{},{_id:i}));}return itemArray;}export function minuted(time){var minutes=Math.floor(time/60000).toString();var seconds=Math.floor(time%60000/1000).toString().padStart(2,'0');return minutes+\":\"+seconds;}export function randomDate(start,end,specificProbabilityStart,specificProbability){if(!start)start=new Date('1970-1-1');if(!end)end=new Date();if(specificProbabilityStart){if(!specificProbability)specificProbability=0.5;if(Math.random()<=specificProbability){return new Date(specificProbabilityStart.getTime()+Math.random()*(end.getTime()-specificProbabilityStart.getTime()));}}return new Date(start.getTime()+Math.random()*(end.getTime()-start.getTime()));}export function firestoreTimestampToDate(timeStamp){var date=new Date('1970-01-01');switch(typeof timeStamp){case'number':date=new Date(timeStamp);break;case'object':if(timeStamp instanceof Date){date=timeStamp;}else{if(!timeStamp){date=new Date();}else{var dateStamp=timeStamp;date=dateStamp.toDate();}}break;default:break;}return date;}export var capitalizeWords=function capitalizeWords(str){return str.replace(/(?:^|\\s)\\S/g,function(a){return a.toUpperCase();});};export var capitalizeFirstLetter=function capitalizeFirstLetter(str){return str.charAt(0).toUpperCase()+str.slice(1);};export var comparerArray=function comparerArray(otherArray,limitKeys){return function(current){return otherArray.filter(function(other){if(!limitKeys){return _.isEqual(current,other);}else{}}).length==0;};};export var onlyInA=function onlyInA(a,b){return a.filter(comparerArray(b));};export var onlyInB=function onlyInB(a,b){return b.filter(comparerArray(a));};export var diffAB=function diffAB(a,b){return onlyInA(a,b).concat(onlyInB(a,b));};export var StringUtil=function(){function StringUtil(){_classCallCheck(this,StringUtil);}_createClass(StringUtil,null,[{key:\"toCamelCase\",value:function toCamelCase(str){return _.camelCase(str);}},{key:\"toSnakeCase\",value:function toSnakeCase(str){return _.snakeCase(str);}},{key:\"toPascalCase\",value:function toPascalCase(str){return _.startCase(_.camelCase(str)).replace(/ /g,'');}},{key:\"toConstantCase\",value:function toConstantCase(str){return _.upperCase(str).replace(/ /g,'_');}},{key:\"toKebabCase\",value:function toKebabCase(str){return _.kebabCase(str);}},{key:\"toLowerCase\",value:function toLowerCase(str){return _.lowerCase(str).replace(/ /g,'');}},{key:\"toTitleCase\",value:function toTitleCase(str){return _.startCase(_.camelCase(str));}},{key:\"toSentenceCase\",value:function toSentenceCase(str){return _.upperFirst(_.lowerCase(str));}},{key:\"toPathCase\",value:function toPathCase(str){return _.lowerCase(str).replace(/ /g,'/');}},{key:\"toDotCase\",value:function toDotCase(str){return _.lowerCase(str).replace(/ /g,'.');}}]);return StringUtil;}();export var deepKeysConvert=function deepKeysConvert(obj,toType){var _toType=toType||'snake';if(Array.isArray(obj)){return obj.map(function(v){return deepKeysConvert(v,_toType);});}else if(obj!==null&&obj.constructor===Object){return Object.keys(obj).reduce(function(result,key){var newKey='';switch(_toType){case'camel':newKey=StringUtil.toCamelCase(key);break;case'snake':newKey=StringUtil.toSnakeCase(key);break;case'pascal':newKey=StringUtil.toPascalCase(key);break;case'constant':newKey=StringUtil.toConstantCase(key);break;case'kebab':newKey=StringUtil.toKebabCase(key);break;case'lower':newKey=StringUtil.toLowerCase(key);break;case'title':newKey=StringUtil.toTitleCase(key);break;case'sentence':newKey=StringUtil.toSentenceCase(key);break;case'path':newKey=StringUtil.toPathCase(key);break;case'dot':newKey=StringUtil.toDotCase(key);break;default:newKey=StringUtil.toDotCase(key);break;}return _objectSpread(_objectSpread({},result),{},_defineProperty({},newKey,deepKeysConvert(obj[key],_toType)));},{});}return obj;};export var deepRemoveByKey=function deepRemoveByKey(obj,keysToBeRemoved){var result=_.transform(obj,function(result,value,key){if(_.isObject(value)){value=deepRemoveByKey(value,keysToBeRemoved);}if(!keysToBeRemoved.includes(key)){_.isArray(obj)?result.push(value):result[key]=value;}});return result;};export var deepRenameKeys=function deepRenameKeys(obj,keysMap){return _.transform(obj,function(result,value,key){var currentKey=keysMap[key]||key;result[currentKey]=_.isObject(value)?deepRenameKeys(value,keysMap):value;});};export var deepReplaceValues=function deepReplaceValues(obj,keyReducerMap){var newObject=_.clone(obj);_.each(obj,function(val,key){for(var _item in keyReducerMap){if(key===_item){newObject[key]=keyReducerMap[_item](newObject);}else if(typeof val==='object'||val instanceof Array){newObject[key]=deepReplaceValues(val,keyReducerMap);}}});return newObject;};export var deepAdd=function deepAdd(obj,keyReducerMap,isItemRootParent){var newObject=_.clone(obj);if(_.isObject(newObject)&&!_.isArray(newObject)){for(var _item2 in keyReducerMap){newObject[_item2]=keyReducerMap[_item2](newObject);}}_.each(obj,function(val,key){if(_.isObject(val)){for(var _item3 in keyReducerMap){newObject[key]=deepAdd(val,keyReducerMap,isItemRootParent);}}});return newObject;};var styleString=function styleString(color){return\"color: \"+color+\"; font-weight: bold\";};var styleHeader=function styleHeader(header){return\"%c[\"+header+\"]\";};export var bunnyConsole={log:function log(){var _console;var headerLog=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'bunny';for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key2=1;_key2<_len;_key2++){args[_key2-1]=arguments[_key2];}return(_console=console).log.apply(_console,[styleHeader(headerLog),styleString('black')].concat(args));},warn:function warn(){var _console2;var headerLog=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'bunny';for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key3=1;_key3<_len2;_key3++){args[_key3-1]=arguments[_key3];}return(_console2=console).warn.apply(_console2,[styleHeader(headerLog),styleString('orange')].concat(args));},error:function error(){var _console3;var headerLog=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'bunny';for(var _len3=arguments.length,args=new Array(_len3>1?_len3-1:0),_key4=1;_key4<_len3;_key4++){args[_key4-1]=arguments[_key4];}return(_console3=console).error.apply(_console3,[styleHeader(headerLog),styleString('red')].concat(args));}};export var timeStart=function timeStart(){return performance?performance.now():new Date().getTime();};export var timeEnd=function timeEnd(startTime,headerLog,consoleConditionFn){var timeSpent=(performance?performance.now():new Date().getTime())-startTime;var isPassCondition=consoleConditionFn?consoleConditionFn(timeSpent):true;if(isPassCondition){bunnyConsole.log(headerLog?headerLog:'time spent',timeSpent.toFixed(2));}};export var arrayRemove=function arrayRemove(array,predicate){var i=-1,len=array?array.length:0,result=[];while(++i<len){var value=array[i];if(predicate(value,i,array)){result.push(value);Array.prototype.splice.call(array,i--,1);len--;}}return result;};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/utils/utils.ts"],"names":["result","characters","charactersLength","i","Math","uuidV4","r","v","c","IncrementId","prefix","_id","_prefix","idNumStr","newIdNum","parseInt","getValue","obj","isObject","object","looseEqual","a","strictEqual","strictObjectIsEqual","Object","deepObjectStrictEqual","keys1","keys2","key","val1","object1","val2","object2","areObjects","isTypeEqual","m","oldColorTemp","oldColor","str","Number","isSameStructure","objATraversable","objBTraversable","objAKeys","objBKeys","isSame","isLeafParent","isLeaf","value","addDays","date","WaitManager","_time1","_time2","_time3","_time4","_time10","_time20","_time30","_time60","_cusTime","_nXSpeed","nXSpeed","wait","setTimeout","finalResolveValue","resolveValue","resolve","AuthAPIError","new","Error","BunnyAPIError","NomicsAPIError","data","item","itemArray","keys","minutes","time","seconds","start","end","specificProbability","specificProbabilityStart","timeStamp","dateStamp","capitalizeWords","capitalizeFirstLetter","comparerArray","_","onlyInA","onlyInB","b","diffAB","StringUtil","deepKeysConvert","_toType","toType","Array","newKey","deepRemoveByKey","keysToBeRemoved","deepRenameKeys","currentKey","keysMap","deepReplaceValues","newObject","keyReducerMap","val","deepAdd","styleString","styleHeader","bunnyConsole","log","headerLog","args","warn","error","timeStart","performance","timeEnd","timeSpent","isPassCondition","consoleConditionFn","arrayRemove","len","array","predicate"],"mappings":"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","sourcesContent":["import {JSONObject, JSONSerializable} from '../types';\nimport {firebase} from '../firebase/firebase';\nimport _ from 'lodash';\n\nexport function randomText(length: number) {\n    let result = '';\n    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nexport const uuidV4 = function () {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n};\n\nexport class IncrementId {\n    private _id: string;\n    private readonly _prefix: string;\n\n    constructor(prefix?: string) {\n        this._prefix = prefix ? prefix : '';\n        this._id = this._prefix + '0';\n    }\n\n    getId() {\n        const {_id, _prefix} = this;\n        if (!_id) {\n            this._id = _prefix + '0';\n        } else {\n            let idNumStr = _id.substr(_prefix.length, _id.length - _prefix.length);\n            let newIdNum = parseInt(idNumStr, 10) + 1;\n            this._id = _prefix + newIdNum.toString();\n        }\n        return this._id;\n    }\n}\n\nexport function incrementId(prefix?: string) {\n    let _prefix = prefix ? prefix : '';\n    let _id = _prefix + '0';\n    return function id() {\n        let idNumStr = _id.substr(_prefix.length, _id.length - _prefix.length);\n        let newIdNum = parseInt(idNumStr, 10) + 1;\n        _id = _prefix + newIdNum.toString();\n        return _id;\n    };\n}\n\nexport const getValue = <T, K extends keyof T>(obj: T, names: K[]): Array<T[K]> => {\n    return names.map(i => obj[i]);\n};\n\nexport const isObject = (object: string | object | boolean | Function | number) => {\n    return object != null && typeof object === 'object';\n};\n\nexport const looseEqual = (a: any, b: any): boolean => {\n    return a == b;\n};\n\nexport const strictEqual = (a: any, b: any): boolean => {\n    return a === b;\n};\n\nexport const strictObjectIsEqual = (a: any, b: any): boolean => {\n    return Object.is(a, b);\n};\n\nexport const deepObjectStrictEqual = (object1: JSONSerializable, object2: JSONSerializable) => {\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const val1 = object1[key];\n        const val2 = object2[key];\n        const areObjects = isObject(val1) && isObject(val2);\n        if (\n            areObjects && !deepObjectStrictEqual(val1, val2) ||\n            !areObjects && val1 !== val2\n        ) {\n            return false;\n        }\n    }\n    return true;\n};\n\nexport const isTypeEqual = <T>(obj: unknown) => {\n    try {\n        let m = obj as unknown as T;\n    } catch (e: any) {\n    }\n};\n\nexport function reverseColor(oldColor: string) {\n    let oldColorTemp = '0x' + oldColor.replace(/#/g, '');\n    let str = '000000' + (0xFFFFFF - Number(oldColorTemp)).toString(16);\n    return '#' + str.substring(str.length - 6, str.length);\n}\n\nexport const isSameStructure = (objA: unknown, objB: unknown) => {\n    let objATraversable = objA as JSONSerializable;\n    let objBTraversable = objB as JSONSerializable;\n    const objAKeys = Object.keys(objATraversable);\n    const objBKeys = Object.keys(objBTraversable);\n    let isSame = true;\n    if (objAKeys.length !== objBKeys.length) {\n        return isSame = false;\n    } else {\n        objAKeys.forEach((i) => {\n            if (!objBKeys.includes(i)) {\n                return isSame = false;\n            }\n        });\n        return isSame;\n    }\n};\n\nexport const isLeafParent = (obj: object) => {\n    let isLeaf: boolean = true;\n    Object.values(obj).forEach(value => {\n        if (typeof value === 'object' && value instanceof Array) {\n            value.forEach(item => {\n                if (typeof item === 'object') {\n                    return false;\n                }\n            });\n            return isLeaf = true;\n        }\n        if (!['string', 'boolean', 'number', 'undefined', 'function'].includes(typeof value) && (value !== null)) {\n            return isLeaf = false;\n        }\n    });\n    return isLeaf;\n};\n\nexport const addDays = (date: Date, days: number): Date => {\n    date.setDate(date.getDate() + days);\n    return date;\n};\n\nexport class WaitManager {\n    private _time1: number = 1000;\n    get time1(): number {\n        return this._time1 / this._nXSpeed;\n    }\n\n    private _time2: number = 2000;\n    get time2(): number {\n        return this._time2 / this._nXSpeed;\n    }\n\n    private _time3: number = 3000;\n    get time3(): number {\n        return this._time3 / this._nXSpeed;\n    }\n\n    private _time4: number = 4000;\n    get time4(): number {\n        return this._time4 / this._nXSpeed;\n    }\n\n    private _time10: number = 10000;\n    get time10(): number {\n        return this._time10 / this._nXSpeed;\n    }\n\n    private _time20: number = 20000;\n    get time20(): number {\n        return this._time20 / this._nXSpeed;\n    }\n\n    private _time30: number = 20000;\n\n    get time50(): number {\n        return this._time30 / this._nXSpeed;\n    }\n\n    private _time60: number = 60000;\n    get time60(): number {\n        return this._time60 / this._nXSpeed;\n    }\n\n    private _cusTime: number = 1000;\n    get cusTime(): number {\n        return this._cusTime / this._nXSpeed;\n    }\n\n    set cusTime(v: number) {\n        this._cusTime = v;\n    }\n\n    private readonly _nXSpeed: number = 1;\n\n    constructor(nXSpeed?: number) {\n        if (nXSpeed === undefined) nXSpeed = 1;\n        this._nXSpeed = nXSpeed;\n    }\n}\n\nexport const wait = async (ms: number, resolveValue?: any) => {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            const finalResolveValue = resolveValue || true;\n            resolve(finalResolveValue);\n        }, ms);\n    });\n};\n\nexport class AuthAPIError extends Error {\n    protected serverErrorStack;\n    protected serverErrorCode;\n\n    constructor(serverErrorMessage: string, serverErrorCode?: string, serverErrorStack?: string) {\n        super(serverErrorMessage);\n        if (serverErrorStack) {\n            this.serverErrorStack = serverErrorStack;\n        }\n        if (serverErrorCode) {\n            this.serverErrorCode = serverErrorCode;\n        }\n        this.name = new.target.name;\n        if (typeof (Error as any).captureStackTrace === 'function') {\n            (Error as any).captureStackTrace(this, new.target);\n        }\n        if (typeof Object.setPrototypeOf === 'function') {\n            Object.setPrototypeOf(this, new.target.prototype);\n        } else {\n            (this as any).__proto__ = new.target.prototype;\n        }\n    }\n}\n\nexport class BunnyAPIError extends Error {\n    protected serverErrorStack;\n    protected serverErrorCode;\n\n    constructor(serverErrorMessage: string, serverErrorCode?: string, serverErrorStack?: string) {\n        super(serverErrorMessage);\n        if (serverErrorStack) {\n            this.serverErrorStack = serverErrorStack;\n        }\n        if (serverErrorCode) {\n            this.serverErrorCode = serverErrorCode;\n        }\n        this.name = new.target.name;\n        if (typeof (Error as any).captureStackTrace === 'function') {\n            (Error as any).captureStackTrace(this, new.target);\n        }\n        if (typeof Object.setPrototypeOf === 'function') {\n            Object.setPrototypeOf(this, new.target.prototype);\n        } else {\n            (this as any).__proto__ = new.target.prototype;\n        }\n    }\n}\n\nexport class NomicsAPIError extends Error {\n    protected serverErrorStack;\n    protected serverErrorCode;\n\n    constructor(serverErrorMessage: string, serverErrorCode?: string, serverErrorStack?: string) {\n        super(serverErrorMessage);\n        if (serverErrorStack) {\n            this.serverErrorStack = serverErrorStack;\n        }\n        if (serverErrorCode) {\n            this.serverErrorCode = serverErrorCode;\n        }\n        this.name = new.target.name;\n        if (typeof (Error as any).captureStackTrace === 'function') {\n            (Error as any).captureStackTrace(this, new.target);\n        }\n        if (typeof Object.setPrototypeOf === 'function') {\n            Object.setPrototypeOf(this, new.target.prototype);\n        } else {\n            (this as any).__proto__ = new.target.prototype;\n        }\n    }\n}\n\nexport function extractValue<Item>(data: { key: string, value: Item }[]) {\n    let result: Item[] = [];\n    if (data && data.length > 0) {\n        result = data.map(item => item.value);\n    }\n    return result;\n}\n\nexport function keyValueToArray<Item>(data: { [key: string]: Item }) {\n    const itemArray: Array<Item> = [];\n    const keys = Object.keys(data);\n    for (let i of keys) {\n        itemArray.push({...data[i], _id: i});\n    }\n    return itemArray;\n}\n\nexport function minuted(time: number) {\n    const minutes = Math.floor(time / 60000).toString();\n    const seconds = Math.floor((time % 60000) / 1000).toString().padStart(2, '0');\n    return `${minutes}:${seconds}`;\n}\n\nexport function randomDate(start?: Date, end?: Date, specificProbabilityStart?: Date, specificProbability?: number) {\n    if (!start) start = new Date('1970-1-1');\n    if (!end) end = new Date();\n\n    if (specificProbabilityStart) {\n        if (!specificProbability) specificProbability = 0.5;\n        if (Math.random() <= specificProbability) {\n            return new Date(specificProbabilityStart.getTime() + Math.random() * (end.getTime() - specificProbabilityStart.getTime()));\n        }\n    }\n\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n}\n\nexport function firestoreTimestampToDate(timeStamp: Date | number | firebase.firestore.Timestamp) {\n    let date: Date = new Date('1970-01-01');\n    switch (typeof timeStamp) {\n        case 'number':\n            date = new Date(timeStamp);\n            break;\n        case 'object':\n            if (timeStamp instanceof Date) {\n                date = timeStamp;\n            } else {\n                if (!timeStamp) {\n                    // When use firestore.FieldValue.serverTimestamp(),\n                    // the redux-firestore will not wait for addOnCompleteListener,\n                    // just update data immediately,the timestamp will be null\n                    date = new Date();\n                } else {\n                    const dateStamp = timeStamp as unknown as firebase.firestore.Timestamp;\n                    date = dateStamp.toDate();\n                }\n            }\n            break;\n        default:\n\n            break;\n\n    }\n    return date;\n}\n\nexport const capitalizeWords = (str: string) => {\n    return str.replace(/(?:^|\\s)\\S/g, (a: string) => a.toUpperCase());\n};\n\nexport const capitalizeFirstLetter = (str: string) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nexport const comparerArray = <T extends any>(otherArray: T[], limitKeys?: string[]) => {\n    return function (current: T) {\n        return otherArray.filter(function (other: T) {\n            if (!limitKeys) {\n                return _.isEqual(current, other);\n            } else {\n                // TODO\n            }\n        }).length == 0;\n    };\n};\n\nexport const onlyInA = <T extends any>(a: T[], b: T[]) => {\n    return a.filter(comparerArray(b));\n};\n\nexport const onlyInB = <T extends any>(a: T[], b: T[]) => {\n    return b.filter(comparerArray(a));\n};\n\nexport const diffAB = <T extends any>(a: T[], b: T[]) => {\n    return onlyInA(a, b).concat(onlyInB(a, b));\n};\n\nexport class StringUtil {\n    // camelCase\n    static toCamelCase(str: string) {\n        return _.camelCase(str);\n    }\n\n    // snake_case\n    static toSnakeCase(str: string) {\n        return _.snakeCase(str);\n    }\n\n    // PascalCase\n    static toPascalCase(str: string) {\n        return _.startCase(_.camelCase(str)).replace(/ /g, '');\n    }\n\n    // CONSTANT_CASE\n    static toConstantCase(str: string) {\n        return _.upperCase(str).replace(/ /g, '_');\n    }\n\n    // kebab-case\n    static toKebabCase(str: string) {\n        return _.kebabCase(str);\n    }\n\n    // lowercase\n    static toLowerCase(str: string) {\n        return _.lowerCase(str).replace(/ /g, '');\n    }\n\n    // Title Case\n    static toTitleCase(str: string) {\n        return _.startCase(_.camelCase(str));\n    }\n\n    // Sentence case\n    static toSentenceCase(str: string) {\n        return _.upperFirst(_.lowerCase(str));\n    }\n\n    // path/case\n    static toPathCase(str: string) {\n        return _.lowerCase(str).replace(/ /g, '/');\n    }\n\n    // dot.case\n    static toDotCase(str: string) {\n        return _.lowerCase(str).replace(/ /g, '.');\n    }\n}\n\ntype ToCase = 'camel' | 'snake' | 'pascal' | 'constant' | 'kebab' | 'lower' | 'title' | 'sentence' | 'path' | 'dot';\nexport const deepKeysConvert = (obj: any, toType?: ToCase): any => {\n    const _toType = toType || 'snake';\n    if (Array.isArray(obj)) {\n        return obj.map(v => deepKeysConvert(v, _toType));\n    } else if (obj !== null && obj.constructor === Object) {\n        return Object.keys(obj).reduce(\n            (result, key) => {\n                let newKey = '';\n                switch (_toType) {\n                    case 'camel':\n                        newKey = StringUtil.toCamelCase(key);\n                        break;\n                    case 'snake':\n                        newKey = StringUtil.toSnakeCase(key);\n                        break;\n                    case 'pascal':\n                        newKey = StringUtil.toPascalCase(key);\n                        break;\n                    case 'constant':\n                        newKey = StringUtil.toConstantCase(key);\n                        break;\n                    case 'kebab':\n                        newKey = StringUtil.toKebabCase(key);\n                        break;\n                    case 'lower':\n                        newKey = StringUtil.toLowerCase(key);\n                        break;\n                    case 'title':\n                        newKey = StringUtil.toTitleCase(key);\n                        break;\n                    case 'sentence':\n                        newKey = StringUtil.toSentenceCase(key);\n                        break;\n                    case 'path':\n                        newKey = StringUtil.toPathCase(key);\n                        break;\n                    case 'dot':\n                        newKey = StringUtil.toDotCase(key);\n                        break;\n                    default:\n                        newKey = StringUtil.toDotCase(key);\n                        break;\n                }\n                return {\n                    ...result,\n                    [newKey]: deepKeysConvert(obj[key], _toType),\n                };\n            },\n            {},\n        );\n    }\n    return obj;\n};\n\nexport const deepRemoveByKey = (obj: any, keysToBeRemoved: string[]) => {\n    const result = _.transform(obj, function (result: JSONSerializable, value, key: string) {\n        if (_.isObject(value)) {\n            value = deepRemoveByKey(value, keysToBeRemoved);\n        }\n        if (!keysToBeRemoved.includes(key)) {\n            _.isArray(obj) ? result.push(value) : result[key] = value;\n        }\n    });\n    return result as typeof obj;\n};\n\nexport const deepRenameKeys = (obj: JSONSerializable, keysMap: { [key in string]: string }) => {\n    return _.transform(obj, function (result: JSONSerializable, value, key) {\n        let currentKey = keysMap[key] || key;\n        result[currentKey] = _.isObject(value) ? deepRenameKeys(value, keysMap) : value;\n    });\n};\n\nexport const deepReplaceValues = (obj: JSONSerializable, keyReducerMap: { [key in string]: (item: JSONSerializable) => any }) => {\n    const newObject = _.clone(obj) as JSONSerializable;\n    _.each(obj, (val, key) => {\n        for (const item in keyReducerMap) {\n            if (key === item) {\n                newObject[key] = keyReducerMap[item](newObject);\n            } else if (typeof (val) === 'object' || val instanceof Array) {\n                newObject[key] = deepReplaceValues(val, keyReducerMap);\n            }\n        }\n    });\n    return newObject;\n};\n\n// function getCallStackSize() {\n//     let count = 0, fn = arguments.callee;\n//     while ( (fn = fn.caller) ) {\n//         count++;\n//     }\n//     return count;\n// }\n// TODO determine depth and pass root node as a param through callback\nexport const deepAdd = (obj: JSONSerializable, keyReducerMap: { [key in string]: (item: JSONSerializable) => any }, isItemRootParent?: boolean) => {\n    const newObject = _.clone(obj) as JSONObject | [];\n    if (_.isObject(newObject) && !_.isArray(newObject)) {\n        for (const item in keyReducerMap) {\n            newObject[item] = keyReducerMap[item](newObject);\n        }\n    }\n    _.each(obj, (val, key) => {\n        if (_.isObject(val)) {\n            for (const item in keyReducerMap) {\n                // @ts-ignore\n                newObject[key] = deepAdd(val, keyReducerMap, isItemRootParent);\n            }\n        }\n    });\n    return newObject;\n};\n\nconst styleString = (color: string) => `color: ${color}; font-weight: bold`;\n\n\nconst styleHeader = (header: string) => `%c[${header}]`;\n\nexport const bunnyConsole = {\n    log: (headerLog: string = 'bunny', ...args: any[]) => {\n        return console.log(styleHeader(headerLog), styleString('black'), ...args);\n    },\n    warn: (headerLog: string = 'bunny', ...args: any[]) => {\n        return console.warn(styleHeader(headerLog), styleString('orange'), ...args);\n    },\n    error: (headerLog: string = 'bunny', ...args: any[]) => {\n        return console.error(styleHeader(headerLog), styleString('red'), ...args);\n    }\n};\n\n\nexport const timeStart = () => {\n    return performance ? performance.now() : new Date().getTime();\n};\n\nexport const timeEnd = (startTime: number, headerLog?: string, consoleConditionFn?: (timeSpent: number) => boolean) => {\n    const timeSpent = (performance ? performance.now() : new Date().getTime()) - startTime;\n    const isPassCondition = consoleConditionFn ? consoleConditionFn(timeSpent) : true;\n    if (isPassCondition) {\n        bunnyConsole.log(headerLog ? headerLog : 'time spent', timeSpent.toFixed(2));\n    }\n};\n\nexport const arrayRemove = function <T>(array: T[], predicate: (item: T, index: number, array: T[]) => boolean): T[] {\n    let i = -1, len = array ? array.length : 0, result = [];\n\n    while (++i < len) {\n        let value = array[i];\n        if (predicate(value, i, array)) {\n            result.push(value);\n            Array.prototype.splice.call(array, i--, 1);\n            len--;\n        }\n    }\n\n    return result;\n};\n"]},"metadata":{},"sourceType":"module"}