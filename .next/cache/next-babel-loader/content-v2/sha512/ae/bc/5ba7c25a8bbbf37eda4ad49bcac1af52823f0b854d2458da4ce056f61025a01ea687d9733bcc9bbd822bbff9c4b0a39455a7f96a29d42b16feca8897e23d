{"ast":null,"code":"var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/screens/Settings/Settings.tsx\";import*as React from'react';import SettingsItem from\"./Item\";import{View}from\"../../components/UI\";import{shortenTFunctionKey}from\"../../providers/i18n-labor\";import{makeContainerStyles}from\"../../containers\";import{ThemePicker}from\"../../components/ThemePicker\";import{LanguagePicker}from\"../../components/LanguagePicker\";import{useBunnyKit}from\"../../hooks/bunny-kit\";export default function SettingsScreen(){var _this=this;var _useBunnyKit=useBunnyKit(),sizeLabor=_useBunnyKit.sizeLabor,themeLabor=_useBunnyKit.themeLabor,t=_useBunnyKit.t;var st=shortenTFunctionKey(t,'screens.Settings');var containerStyles=makeContainerStyles(sizeLabor,themeLabor);return React.createElement(View,{style:containerStyles.Screen,__self:this,__source:{fileName:_jsxFileName,lineNumber:15,columnNumber:9}},React.createElement(SettingsItem,{label:st(\"changeTheme\"),renderPicker:function renderPicker(){return React.createElement(ThemePicker,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:19,columnNumber:37}});},__self:this,__source:{fileName:_jsxFileName,lineNumber:17,columnNumber:13}}),React.createElement(SettingsItem,{label:st(\"changeLanguage\"),renderPicker:function renderPicker(){return React.createElement(LanguagePicker,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:23,columnNumber:37}});},__self:this,__source:{fileName:_jsxFileName,lineNumber:21,columnNumber:13}}));}","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/screens/Settings/Settings.tsx"],"names":["sizeLabor","themeLabor","t","useBunnyKit","st","shortenTFunctionKey","containerStyles","makeContainerStyles"],"mappings":"6FAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,YAAA,cACA,OAAA,IAAA,2BACA,OAAA,mBAAA,kCACA,OAAA,mBAAA,wBACA,OAAA,WAAA,oCACA,OAAA,cAAA,uCACA,OAAA,WAAA,6BAEA,cAAe,SAAA,CAAA,cAAA,EAA0B,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CACrC,GAAA,CAAA,YAAA,CAAmCG,WAAnC,EAAA,CAAOH,SAAP,CAAA,YAAA,CAAA,SAAA,CAAkBC,UAAlB,CAAA,YAAA,CAAA,UAAA,CAA8BC,CAA9B,CAAA,YAAA,CAAA,CAAA,CACA,GAAME,CAAAA,EAAE,CAAGC,mBAAmB,CAAA,CAAA,CAA9B,kBAA8B,CAA9B,CACA,GAAMC,CAAAA,eAAe,CAAGC,mBAAmB,CAAA,SAAA,CAA3C,UAA2C,CAA3C,CACA,MACI,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAED,eAAe,CAA5B,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAEI,KAAA,CAAA,aAAA,CAAA,YAAA,CAAA,CACI,KAAK,CAAEF,EAAE,CADb,aACa,CADb,CAEI,YAAY,CAAE,QAAA,CAAA,YAAA,EAAA,CAAA,MAAM,CAAA,KAAA,CAAA,aAAA,CAAA,WAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CAAN,CAFlB,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CAFJ,CAMI,KAAA,CAAA,aAAA,CAAA,YAAA,CAAA,CACI,KAAK,CAAEA,EAAE,CADb,gBACa,CADb,CAEI,YAAY,CAAE,QAAA,CAAA,YAAA,EAAA,CAAA,MAAM,CAAA,KAAA,CAAA,aAAA,CAAA,cAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CAAN,CAFlB,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CANJ,CADJ,CAiBH","sourcesContent":["import * as React from 'react';\nimport SettingsItem from './Item';\nimport {View} from '../../components/UI';\nimport {shortenTFunctionKey} from '../../providers/i18n-labor';\nimport {makeContainerStyles} from '../../containers';\nimport {ThemePicker} from '../../components/ThemePicker';\nimport {LanguagePicker} from '../../components/LanguagePicker';\nimport {useBunnyKit} from '../../hooks/bunny-kit';\n\nexport default function SettingsScreen() {\n    const {sizeLabor, themeLabor, t} = useBunnyKit();\n    const st = shortenTFunctionKey(t, 'screens.Settings');\n    const containerStyles = makeContainerStyles(sizeLabor, themeLabor);\n    return (\n        <View style={containerStyles.Screen}>\n\n            <SettingsItem\n                label={st(`changeTheme`)}\n                renderPicker={() => <ThemePicker/>}\n            />\n            <SettingsItem\n                label={st(`changeLanguage`)}\n                renderPicker={() => <LanguagePicker/>}\n            />\n            {/*<SettingsItem*/}\n            {/*    label={st(`rightToLeft`)}*/}\n            {/*    renderPicker={RTLSwitch}*/}\n            {/*/>*/}\n        </View>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}