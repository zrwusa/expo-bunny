{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from'react';import{ButtonTO,InButtonText,Text,TextInput,View}from\"../../components/UI\";import{checkColor,colorFaultTolerance,deltaEDes,diffColors}from\"../../utils/color\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import{makeStyles}from\"./styles\";import{palette,uuidV4}from\"../../utils\";import{Card,Col,Row}from\"../../containers\";import{collectBizLogicResult}from\"../../store/actions\";import{bizLogicError}from\"../../helpers\";import{useDispatch}from'react-redux';import{ColorTranslator}from'colortranslator';import{CopyableText}from\"../../components/CopyableText\";import{ColorValuesCard}from\"../../components/ColorValuesCard\";import{shortenTFunctionKey}from\"../../providers/i18n-labor\";import{Tab}from\"../../components\";import{useBunnyKit}from\"../../hooks/bunny-kit\";export function ColorFinderScreen(){var _useBunnyKit=useBunnyKit(),sizeLabor=_useBunnyKit.sizeLabor,themeLabor=_useBunnyKit.themeLabor,t=_useBunnyKit.t;var st=shortenTFunctionKey(t,'screens.ColorFinder');var dispatch=useDispatch();var themes=themeLabor.themes;var styles=makeStyles(sizeLabor,themeLabor);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputText=_useState2[0],setInputText=_useState2[1];var _useState3=useState({text:'',Hex:'',RGB:'',HSL:''}),_useState4=_slicedToArray(_useState3,2),colorInput=_useState4[0],setColorInput=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),similarColorsFromTheme=_useState6[0],setSimilarColorsFromTheme=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),similarColorsFromPalette=_useState8[0],setSimilarColorsFromPalette=_useState8[1];var _useState9=useState('Beautiful'),_useState10=_slicedToArray(_useState9,2),uglyType=_useState10[0],setUglyType=_useState10[1];var formatUglyStringToRGB=function formatUglyStringToRGB(colorString){if(colorString&&colorString.substring(0,3).toLowerCase()!=='rgb'){var escaped09=escape(colorString).replaceAll('%09',',');var escaped20=escaped09.replaceAll('%20',',');var truncated=escaped20.split(',').slice(0,3).join(',');return\"rgb(\"+truncated+\")\";}else{return colorString;}};var getIndexedColor=function getIndexedColor(themColorValue,colorKey,inputColorText,themeName,similarIndexed){var themeColor=colorFaultTolerance(themColorValue);if(themeColor&&inputColorText){var diff=diffColors(themeColor,inputColorText);var indexedColor={keyInThemeColors:colorKey,Hex:ColorTranslator.toHEX(themeColor),RGB:ColorTranslator.toRGB(themeColor),HSL:ColorTranslator.toHSL(themeColor),diff:diff,diffDes:deltaEDes(diff),themeName:themeName};similarIndexed.push(indexedColor);}};var getSimilarColor=function getSimilarColor(){var inputColorText=colorFaultTolerance(colorInput.text);var checkColorResult=checkColor(inputColorText);if(!checkColorResult.isColor){dispatch(collectBizLogicResult(bizLogicError('Not a color string',true)));return;}var themesKeys=Object.keys(themes);var _similarColorsFromTheme=[];var _similarColorsFromPalette=[];themesKeys.forEach(function(themeName){var theme=themes[themeName];var colors=theme.colors;var similarIndexed=[];var colorKeys=Object.keys(colors);colorKeys.forEach(function(colorKey){var themColorValue=colors[colorKey];if(themColorValue instanceof Array){}else{getIndexedColor(themColorValue,colorKey,inputColorText,themeName,similarIndexed);}});var sortedSimilarIndexed=similarIndexed.sort(function(a,b){return a.diff-b.diff;});var similarObj=sortedSimilarIndexed[0];_similarColorsFromTheme.push(similarObj);});setSimilarColorsFromTheme(_similarColorsFromTheme);var similarIndexedPalette=[];var colorPaletteKeys=Object.keys(palette);colorPaletteKeys.forEach(function(colorKey){var paletteColor=colorFaultTolerance(palette[colorKey]);if(paletteColor&&inputColorText){var diff=diffColors(paletteColor,inputColorText);var indexedColor={keyInPalette:colorKey,Hex:ColorTranslator.toHEX(paletteColor),RGB:ColorTranslator.toRGB(paletteColor),HSL:ColorTranslator.toHSL(paletteColor),diff:diff,diffDes:deltaEDes(diff)};similarIndexedPalette.push(indexedColor);}});var sortedSimilarIndexedPalette=similarIndexedPalette.sort(function(a,b){return a.diff-b.diff;});var similarObjPalette=sortedSimilarIndexedPalette[0];_similarColorsFromPalette.push(similarObjPalette);_similarColorsFromPalette.push(sortedSimilarIndexedPalette[1]);_similarColorsFromPalette.push(sortedSimilarIndexedPalette[3]);_similarColorsFromPalette.push(sortedSimilarIndexedPalette[4]);_similarColorsFromPalette.push(sortedSimilarIndexedPalette[5]);_similarColorsFromPalette.push(sortedSimilarIndexedPalette[6]);setSimilarColorsFromPalette(_similarColorsFromPalette);};var handleSimilarColor=function handleSimilarColor(){getSimilarColor();};var handleChangeTextFrom=function handleChangeTextFrom(text){setInputText(text);var beautiful='';switch(uglyType){case'RGB':beautiful=formatUglyStringToRGB(text);break;default:beautiful=text;break;}var _text=colorFaultTolerance(beautiful);if(_text){setColorInput({text:_text,Hex:ColorTranslator.toHEX(_text),RGB:ColorTranslator.toRGB(_text),HSL:ColorTranslator.toHSL(_text)});}else{setColorInput({text:'',Hex:'',RGB:'',HSL:''});}};var handleKeyPress=function handleKeyPress(_ref){var nativeEvent=_ref.nativeEvent;if(nativeEvent.key==='Enter'){getSimilarColor();}};return React.createElement(ScrollView,null,React.createElement(View,{style:styles.container},React.createElement(Card,{titleMode:\"OUT\",title:st('colorInput')},React.createElement(Tab,{items:['Beautiful','RGB','Hex','HSL'],value:uglyType,onChange:function onChange(item){setUglyType(item);}}),React.createElement(Row,{paddingVertical:\"l\"},React.createElement(Col,{size:30},React.createElement(TextInput,{style:styles.input,value:inputText,placeholder:st('inputAColorString'),onChangeText:handleChangeTextFrom,onKeyPress:handleKeyPress,autoCapitalize:\"none\"})),React.createElement(Col,{size:2}),React.createElement(Col,{size:20},React.createElement(ButtonTO,{onPress:handleSimilarColor},React.createElement(InButtonText,null,st('findSimilarColors'))))),React.createElement(ColorValuesCard,{item:colorInput})),React.createElement(Card,{titleMode:\"OUT\",title:st('similarColorFromPalette')},similarColorsFromPalette.map(function(similarColorItem){return React.createElement(View,{key:similarColorItem.keyInPalette},React.createElement(Row,{paddingVertical:\"xs\",style:styles.row},React.createElement(Text,null,\"Diff\"),React.createElement(Text,null,similarColorItem.diff.toFixed(2))),React.createElement(Row,{paddingVertical:\"xs\",style:styles.row},React.createElement(Text,null,\"Diff Tip\"),React.createElement(Text,null,similarColorItem.diffDes)),React.createElement(Row,{paddingVertical:\"xs\",style:styles.row},React.createElement(Text,null,\"Key\"),React.createElement(CopyableText,null,similarColorItem.keyInPalette)),React.createElement(ColorValuesCard,{item:similarColorItem}));})),React.createElement(Card,{titleMode:\"OUT\",title:st('similarColorsFromThemes')},similarColorsFromTheme.map(function(similarColorItem){return React.createElement(View,{key:uuidV4()},React.createElement(Row,{paddingVertical:\"m\",style:styles.row},React.createElement(Text,null,\"Diff\"),React.createElement(Text,null,similarColorItem.diff.toFixed(2))),React.createElement(Row,{paddingVertical:\"m\",style:styles.row},React.createElement(Text,null,\"Diff Tip\"),React.createElement(Text,null,similarColorItem.diffDes)),React.createElement(Row,{paddingVertical:\"m\",style:styles.row},React.createElement(Text,null,\"Theme\"),React.createElement(Text,null,similarColorItem.themeName)),React.createElement(Row,{paddingVertical:\"m\",style:styles.row},React.createElement(Text,null,\"Key\"),React.createElement(CopyableText,null,similarColorItem.keyInThemeColors)),React.createElement(ColorValuesCard,{item:similarColorItem}));}))));}","map":null,"metadata":{},"sourceType":"module"}