{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _this=this,_jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/providers/i18n-labor/I18nLaborProvider.tsx\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import*as React from'react';import{useEffect,useState}from'react';import AsyncStorage from'@react-native-async-storage/async-storage';import BunnyConstants from\"../../constants/constants\";import*as localization from'expo-localization';import{I18nLaborContext}from\"./I18nLaborContext\";import i18next from\"./i18next\";import{Preparing}from\"../../components/Preparing\";import{useTranslation}from'react-i18next';import{shortenTFunctionKey}from\"./shorten-t-function-key\";export var I18nLaborProvider=function I18nLaborProvider(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isReady=_useState2[0],setIsReady=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var st=shortenTFunctionKey(t,\"sys\");var children=props.children,i18n=props.i18n;var i18nValue=i18n||i18next;useEffect(function(){var bootstrapAsync=function bootstrapAsync(){var language,lang;return _regeneratorRuntime.async(function bootstrapAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(AsyncStorage.getItem(BunnyConstants.LANGUAGE_TYPE_PERSISTENCE_KEY));case 2:language=_context.sent;lang=language||localization.locale.substring(0,2);_context.t0=lang;if(!_context.t0){_context.next=8;break;}_context.next=8;return _regeneratorRuntime.awrap(i18nValue.changeLanguage(lang));case 8:case\"end\":return _context.stop();}}},null,null,null,Promise);};bootstrapAsync().then(function(){setIsReady(true);});},[]);return isReady?React.createElement(I18nLaborContext.Provider,{value:i18next,__self:_this,__source:{fileName:_jsxFileName,lineNumber:40,columnNumber:15}},children):React.createElement(Preparing,{text:st(\"I18nProviderLoading\"),__self:_this,__source:{fileName:_jsxFileName,lineNumber:43,columnNumber:15}});};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/providers/i18n-labor/I18nLaborProvider.tsx"],"names":["I18nLaborProvider","isReady","setIsReady","useState","t","useTranslation","st","shortenTFunctionKey","children","i18n","props","i18nValue","useEffect","bootstrapAsync","language","AsyncStorage","BunnyConstants","lang","localization"],"mappings":"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","sourcesContent":["// todo description this provider\nimport * as React from 'react';\nimport {ReactNode, useEffect, useState} from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport BunnyConstants from '../../constants/constants';\nimport * as localization from 'expo-localization';\nimport {I18nLaborContext} from './I18nLaborContext';\nimport i18next from './i18next';\nimport {i18n as I18n} from 'i18next';\nimport {Preparing} from '../../components/Preparing';\nimport {useTranslation} from 'react-i18next';\nimport {shortenTFunctionKey} from './shorten-t-function-key';\n\nexport interface I18nProviderProps {\n    children: ReactNode,\n    i18n?: I18n,\n    defaultNS?: string\n}\n\nexport const I18nLaborProvider = (props: I18nProviderProps): JSX.Element => {\n    const [isReady, setIsReady] = useState(false);\n    const {t} = useTranslation();\n    const st = shortenTFunctionKey(t, `sys`);\n    const {children, i18n} = props;\n    const i18nValue = i18n || i18next;\n\n    useEffect(() => {\n        const bootstrapAsync = async () => {\n            const language = await AsyncStorage.getItem(BunnyConstants.LANGUAGE_TYPE_PERSISTENCE_KEY);\n            const lang = language || localization.locale.substring(0, 2);\n            lang && await i18nValue.changeLanguage(lang);\n        };\n        bootstrapAsync().then(() => {\n            setIsReady(true);\n        });\n    }, []);\n\n    return (\n        isReady\n            ? <I18nLaborContext.Provider value={i18next}>\n                {children}\n            </I18nLaborContext.Provider>\n            : <Preparing text={st(`I18nProviderLoading`)}/>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}