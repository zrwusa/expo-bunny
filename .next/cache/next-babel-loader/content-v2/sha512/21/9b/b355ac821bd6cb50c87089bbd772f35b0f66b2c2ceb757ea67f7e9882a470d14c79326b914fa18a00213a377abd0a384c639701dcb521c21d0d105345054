{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/screens/DemoCryptoCurrency/Alert/Alert.tsx\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import _regeneratorRuntime from\"@babel/runtime/regenerator\";import*as React from'react';import{useEffect,useState}from'react';import Platform from\"react-native-web/dist/exports/Platform\";import View from\"react-native-web/dist/exports/View\";import{ButtonTO,InButtonText,PickerSelectChevronRight,Text}from\"../../../components/UI\";import{shortenTFunctionKey}from\"../../../providers/i18n-labor\";import{Col,makeContainerStyles,Row}from\"../../../containers\";import*as Notifications from'expo-notifications';import{defaultNotification,registerForPushNotificationsAsync}from\"../../../utils/expo-notification\";import{cancelAlertSettings,collectSysError,getCurrentPrice,saveQuickAlertSettings}from\"../../../store/actions\";import{useDispatch,useSelector}from'react-redux';import{makeStyles}from\"./styles\";import{getSharedStyles}from\"../../../helpers\";import{useBunnyKit}from\"../../../hooks/bunny-kit\";export default function CryptoCurrencyAlertScreen(_ref){var route=_ref.route,navigation=_ref.navigation;var _useBunnyKit=useBunnyKit(),sizeLabor=_useBunnyKit.sizeLabor,themeLabor=_useBunnyKit.themeLabor,t=_useBunnyKit.t;var st=shortenTFunctionKey(t,'screens.CryptoCurrencyAlert');var i18nSysPrefix='sys';var stSys=shortenTFunctionKey(t,i18nSysPrefix);var containerStyles=makeContainerStyles(sizeLabor,themeLabor);var _getSharedStyles=getSharedStyles(sizeLabor,themeLabor),sharedStyles=_getSharedStyles.sharedStyles;var styles=makeStyles(sizeLabor,themeLabor);var dispatch=useDispatch();var _useSelector=useSelector(function(rootState){return rootState.demoCryptoCurrencyState;}),currentPrice=_useSelector.currentPrice,dictionaries=_useSelector.dictionaries;var dicGranularity=dictionaries.granularity;var dicReminderTimes=dictionaries.times;var dicReminderInterval=dictionaries.interval;var notificationReceivedListener={remove:function remove(){}};var notificationRespondedListener={remove:function remove(){}};var _useState=useState(''),_useState2=_slicedToArray(_useState,2),expoPushToken=_useState2[0],setExpoPushToken=_useState2[1];var _useState3=useState(defaultNotification),_useState4=_slicedToArray(_useState3,2),notification=_useState4[0],setNotification=_useState4[1];var _useState5=useState(0.05),_useState6=_slicedToArray(_useState5,2),granularity=_useState6[0],setGranularity=_useState6[1];var _useState7=useState({times:3,interval:'1m'}),_useState8=_slicedToArray(_useState7,2),reminder=_useState8[0],setReminder=_useState8[1];var handleSaveQuickAlertSettings=function handleSaveQuickAlertSettings(){return _regeneratorRuntime.async(function handleSaveQuickAlertSettings$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(saveQuickAlertSettings({token:expoPushToken,granularity:granularity,reminder:reminder}));case 1:case\"end\":return _context.stop();}}},null,null,null,Promise);};var handleCancelAllAlertSettings=function handleCancelAllAlertSettings(){return _regeneratorRuntime.async(function handleCancelAllAlertSettings$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(cancelAlertSettings({token:expoPushToken,cancelAll:true}));case 1:case\"end\":return _context2.stop();}}},null,null,null,Promise);};useEffect(function(){Notifications.setNotificationHandler({handleNotification:function handleNotification(){return _regeneratorRuntime.async(function handleNotification$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",{shouldShowAlert:true,shouldPlaySound:false,shouldSetBadge:false});case 1:case\"end\":return _context3.stop();}}},null,null,null,Promise);}});var initPushNotification=function initPushNotification(){var token;return _regeneratorRuntime.async(function initPushNotification$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return _regeneratorRuntime.awrap(registerForPushNotificationsAsync({failedToGetToken:stSys(\"failedToGetToken\"),mustUsePhysicalDevice:stSys(\"mustUsePhysicalDevice\")}));case 2:token=_context4.sent;if(token){setExpoPushToken(token);}try{dispatch(getCurrentPrice());}catch(e){dispatch(collectSysError(e));}notificationReceivedListener=Notifications.addNotificationReceivedListener(function(notification){setNotification(notification);});notificationRespondedListener=Notifications.addNotificationResponseReceivedListener(function(response){});case 7:case\"end\":return _context4.stop();}}},null,null,null,Promise);};initPushNotification().then();return function(){Notifications.removeNotificationSubscription(notificationReceivedListener);Notifications.removeNotificationSubscription(notificationRespondedListener);};},[]);var granularityLabelPrefix=st(\"granularity\").padEnd(35,\"\\u2004\");var mappedDicGranularity=dicGranularity.map(function(item){item.inputLabel=granularityLabelPrefix+item.label;return item;});var remindTimesLabelPrefix=st(\"remindTimesLabel\").padEnd(35,\"\\u2004\");var mappedDicReminderTimes=dicReminderTimes.map(function(item){item.inputLabel=remindTimesLabelPrefix+item.label;return item;});var remindIntervalLabelPrefix=st(\"remindIntervalLabel\").padEnd(35,\"\\u2004\");var mappedDicReminderInterval=dicReminderInterval.map(function(item){item.inputLabel=remindIntervalLabelPrefix+item.label;return item;});var currentPriceLabelPrefix=st(\"currentPriceLabel\").padEnd(30,\"\\u2004\");return Platform.OS!=='web'?React.createElement(View,{style:containerStyles.Screen,__self:this,__source:{fileName:_jsxFileName,lineNumber:121,columnNumber:9}},React.createElement(View,{style:styles.container,__self:this,__source:{fileName:_jsxFileName,lineNumber:122,columnNumber:13}},React.createElement(View,{__self:this,__source:{fileName:_jsxFileName,lineNumber:123,columnNumber:17}},notification?React.createElement(View,{__self:this,__source:{fileName:_jsxFileName,lineNumber:127,columnNumber:31}},React.createElement(Row,{__self:this,__source:{fileName:_jsxFileName,lineNumber:128,columnNumber:33}},React.createElement(Col,{size:1,__self:this,__source:{fileName:_jsxFileName,lineNumber:129,columnNumber:37}},React.createElement(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:130,columnNumber:41}},\"Title:\")),React.createElement(Col,{size:4,__self:this,__source:{fileName:_jsxFileName,lineNumber:132,columnNumber:37}},React.createElement(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:133,columnNumber:41}},notification.request.content.title,\" \"))),React.createElement(Row,{__self:this,__source:{fileName:_jsxFileName,lineNumber:137,columnNumber:33}},React.createElement(Col,{size:1,__self:this,__source:{fileName:_jsxFileName,lineNumber:138,columnNumber:37}},React.createElement(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:139,columnNumber:41}},\"Body:\")),React.createElement(Col,{size:4,__self:this,__source:{fileName:_jsxFileName,lineNumber:141,columnNumber:37}},React.createElement(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:142,columnNumber:41}},notification.request.content.body,\" \")))):null),React.createElement(View,{__self:this,__source:{fileName:_jsxFileName,lineNumber:149,columnNumber:17}},React.createElement(View,{style:styles.box,__self:this,__source:{fileName:_jsxFileName,lineNumber:150,columnNumber:21}},React.createElement(Text,{style:styles.text,__self:this,__source:{fileName:_jsxFileName,lineNumber:151,columnNumber:25}},currentPriceLabelPrefix+currentPrice)),React.createElement(PickerSelectChevronRight,{value:granularity,placeholder:{label:'Select '+granularityLabelPrefix,value:0},items:mappedDicGranularity,onValueChange:function onValueChange(itemValue){return setGranularity(itemValue);},__self:this,__source:{fileName:_jsxFileName,lineNumber:153,columnNumber:21}}),React.createElement(PickerSelectChevronRight,{value:reminder.times,placeholder:{label:'Select '+remindTimesLabelPrefix,value:0},items:mappedDicReminderTimes,onValueChange:function onValueChange(itemValue){return setReminder(_objectSpread(_objectSpread({},reminder),{},{times:itemValue}));},__self:this,__source:{fileName:_jsxFileName,lineNumber:159,columnNumber:21}}),React.createElement(PickerSelectChevronRight,{value:reminder.interval,placeholder:{label:'Select '+remindIntervalLabelPrefix,value:''},items:mappedDicReminderInterval,onValueChange:function onValueChange(itemValue){return setReminder(_objectSpread(_objectSpread({},reminder),{},{interval:itemValue}));},__self:this,__source:{fileName:_jsxFileName,lineNumber:165,columnNumber:21}})),React.createElement(Row,{style:styles.bottomBar,__self:this,__source:{fileName:_jsxFileName,lineNumber:172,columnNumber:17}},React.createElement(Col,{size:1,__self:this,__source:{fileName:_jsxFileName,lineNumber:173,columnNumber:21}},React.createElement(ButtonTO,{onPress:handleSaveQuickAlertSettings,__self:this,__source:{fileName:_jsxFileName,lineNumber:174,columnNumber:25}},React.createElement(InButtonText,{__self:this,__source:{fileName:_jsxFileName,lineNumber:175,columnNumber:29}},st(\"saveQuickSettings\")))),React.createElement(Col,{size:1,style:{marginLeft:6},__self:this,__source:{fileName:_jsxFileName,lineNumber:178,columnNumber:21}},React.createElement(ButtonTO,{onPress:handleCancelAllAlertSettings,__self:this,__source:{fileName:_jsxFileName,lineNumber:179,columnNumber:25}},React.createElement(InButtonText,{__self:this,__source:{fileName:_jsxFileName,lineNumber:180,columnNumber:29}},st(\"cancelAlertSettings\"))))))):React.createElement(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:186,columnNumber:10}},\"Dummy CryptoCurrencyAlert\");}","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/screens/DemoCryptoCurrency/Alert/Alert.tsx"],"names":["route","navigation","sizeLabor","themeLabor","t","useBunnyKit","st","shortenTFunctionKey","i18nSysPrefix","stSys","containerStyles","makeContainerStyles","sharedStyles","getSharedStyles","styles","makeStyles","dispatch","useDispatch","currentPrice","dictionaries","useSelector","rootState","dicGranularity","dicReminderTimes","dicReminderInterval","notificationReceivedListener","remove","notificationRespondedListener","expoPushToken","setExpoPushToken","useState","notification","setNotification","granularity","setGranularity","reminder","setReminder","times","interval","handleSaveQuickAlertSettings","saveQuickAlertSettings","token","handleCancelAllAlertSettings","cancelAlertSettings","cancelAll","useEffect","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","initPushNotification","registerForPushNotificationsAsync","failedToGetToken","mustUsePhysicalDevice","getCurrentPrice","collectSysError","granularityLabelPrefix","mappedDicGranularity","item","remindTimesLabelPrefix","mappedDicReminderTimes","remindIntervalLabelPrefix","mappedDicReminderInterval","currentPriceLabelPrefix","Platform","label","value","itemValue","marginLeft"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {useEffect, useState} from 'react';\nimport {Platform, View} from 'react-native';\nimport {RouteProp} from '@react-navigation/native';\nimport {DemoCryptoCurrencyTabStackParam, RootStackParam, RootState} from '../../../types';\nimport {ButtonTO, InButtonText, PickerSelectChevronRight, Text} from '../../../components/UI';\nimport {shortenTFunctionKey} from '../../../providers/i18n-labor';\nimport {Col, makeContainerStyles, Row} from '../../../containers';\nimport * as Notifications from 'expo-notifications';\nimport {defaultNotification, registerForPushNotificationsAsync} from '../../../utils/expo-notification';\nimport {cancelAlertSettings, collectSysError, getCurrentPrice, saveQuickAlertSettings} from '../../../store/actions';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {makeStyles} from './styles';\nimport {getSharedStyles} from '../../../helpers';\nimport {StackNavigationProp} from '@react-navigation/stack';\nimport {useBunnyKit} from '../../../hooks/bunny-kit';\n\ntype CryptoCurrencyAlertRouteProp = RouteProp<DemoCryptoCurrencyTabStackParam, 'CryptoCurrencyAlert'>;\ntype CryptoCurrencyAlertNavigationProp = StackNavigationProp<RootStackParam, 'DemoCryptoCurrency'>;\n\nexport interface CryptoCurrencyAlertProps {\n    route?: CryptoCurrencyAlertRouteProp,\n    navigation?: CryptoCurrencyAlertNavigationProp\n}\n\nexport default function CryptoCurrencyAlertScreen({route, navigation}: CryptoCurrencyAlertProps) {\n    const {sizeLabor, themeLabor, t} = useBunnyKit();\n    const st = shortenTFunctionKey(t, 'screens.CryptoCurrencyAlert');\n    const i18nSysPrefix = 'sys';\n    const stSys = shortenTFunctionKey(t, i18nSysPrefix);\n    const containerStyles = makeContainerStyles(sizeLabor, themeLabor);\n    const {sharedStyles} = getSharedStyles(sizeLabor, themeLabor);\n    const styles = makeStyles(sizeLabor, themeLabor);\n    const dispatch = useDispatch();\n    const {currentPrice, dictionaries} = useSelector((rootState: RootState) => rootState.demoCryptoCurrencyState);\n    const dicGranularity = dictionaries.granularity;\n    const dicReminderTimes = dictionaries.times;\n    const dicReminderInterval = dictionaries.interval;\n\n    let notificationReceivedListener = {\n        remove: () => {\n        }\n    };\n    let notificationRespondedListener = {\n        remove: () => {\n        }\n    };\n\n    const [expoPushToken, setExpoPushToken] = useState('');\n    const [notification, setNotification] = useState(defaultNotification);\n    const [granularity, setGranularity] = useState(0.05);\n    const [reminder, setReminder] = useState({times: 3, interval: '1m'});\n\n    const handleSaveQuickAlertSettings = async function () {\n        dispatch(saveQuickAlertSettings({token: expoPushToken, granularity, reminder}));\n    };\n\n    const handleCancelAllAlertSettings = async function () {\n        dispatch(cancelAlertSettings({token: expoPushToken, cancelAll: true}));\n    };\n\n    useEffect(() => {\n        Notifications.setNotificationHandler({\n            handleNotification: async () => ({\n                shouldShowAlert: true,\n                shouldPlaySound: false,\n                shouldSetBadge: false,\n            }),\n        });\n        const initPushNotification = async () => {\n            const token = await registerForPushNotificationsAsync({\n                failedToGetToken: stSys(`failedToGetToken`),\n                mustUsePhysicalDevice: stSys(`mustUsePhysicalDevice`)\n            });\n            if (token) {\n                setExpoPushToken(token);\n            }\n\n            try {\n                dispatch(getCurrentPrice());\n            } catch (e: any) {\n                dispatch(collectSysError(e));\n            }\n\n            notificationReceivedListener = Notifications\n                .addNotificationReceivedListener((notification) => {\n                    setNotification(notification);\n                });\n\n            notificationRespondedListener = Notifications\n                .addNotificationResponseReceivedListener(response => {\n                });\n        };\n        initPushNotification().then();\n        return () => {\n            Notifications.removeNotificationSubscription(notificationReceivedListener);\n            Notifications.removeNotificationSubscription(notificationRespondedListener);\n        };\n    }, []);\n\n    const granularityLabelPrefix = st(`granularity`).padEnd(35, '\\u2004');\n    const mappedDicGranularity = dicGranularity.map(item => {\n        item.inputLabel = granularityLabelPrefix + item.label;\n        return item;\n    });\n    const remindTimesLabelPrefix = st(`remindTimesLabel`).padEnd(35, '\\u2004');\n    const mappedDicReminderTimes = dicReminderTimes.map(item => {\n        item.inputLabel = remindTimesLabelPrefix + item.label;\n        return item;\n    });\n\n    const remindIntervalLabelPrefix = st(`remindIntervalLabel`).padEnd(35, '\\u2004');\n    const mappedDicReminderInterval = dicReminderInterval.map(item => {\n        item.inputLabel = remindIntervalLabelPrefix + item.label;\n        return item;\n    });\n\n    const currentPriceLabelPrefix = st(`currentPriceLabel`).padEnd(30, '\\u2004');\n\n    return Platform.OS !== 'web' ? (\n        <View style={containerStyles.Screen}>\n            <View style={styles.container}>\n                <View>\n                    {/*<Text>Your expo push token: {expoPushToken}</Text>*/}\n                    {\n                        notification\n                            ? <View>\n                                <Row>\n                                    <Col size={1}>\n                                        <Text>Title:</Text>\n                                    </Col>\n                                    <Col size={4}>\n                                        <Text>{notification.request.content.title} </Text>\n                                    </Col>\n                                    {/*<Text>Data: {JSON.stringify(notification.request.content.data)}</Text>*/}\n                                </Row>\n                                <Row>\n                                    <Col size={1}>\n                                        <Text>Body:</Text>\n                                    </Col>\n                                    <Col size={4}>\n                                        <Text>{notification.request.content.body} </Text>\n                                    </Col>\n                                </Row>\n                            </View>\n                            : null\n                    }\n                </View>\n                <View>\n                    <View style={styles.box}>\n                        <Text style={styles.text}>{currentPriceLabelPrefix + currentPrice}</Text>\n                    </View>\n                    <PickerSelectChevronRight\n                        value={granularity}\n                        placeholder={{label: 'Select ' + granularityLabelPrefix, value: 0}}\n                        items={mappedDicGranularity}\n                        onValueChange={(itemValue) => setGranularity(itemValue)}\n                    />\n                    <PickerSelectChevronRight\n                        value={reminder.times}\n                        placeholder={{label: 'Select ' + remindTimesLabelPrefix, value: 0}}\n                        items={mappedDicReminderTimes}\n                        onValueChange={(itemValue) => setReminder({...reminder, times: itemValue})}\n                    />\n                    <PickerSelectChevronRight\n                        value={reminder.interval}\n                        placeholder={{label: 'Select ' + remindIntervalLabelPrefix, value: ''}}\n                        items={mappedDicReminderInterval}\n                        onValueChange={(itemValue) => setReminder({...reminder, interval: itemValue})}\n                    />\n                </View>\n                <Row style={styles.bottomBar}>\n                    <Col size={1}>\n                        <ButtonTO onPress={handleSaveQuickAlertSettings}>\n                            <InButtonText>{st(`saveQuickSettings`)}</InButtonText>\n                        </ButtonTO>\n                    </Col>\n                    <Col size={1} style={{marginLeft: 6}}>\n                        <ButtonTO onPress={handleCancelAllAlertSettings}>\n                            <InButtonText>{st(`cancelAlertSettings`)}</InButtonText>\n                        </ButtonTO>\n                    </Col>\n                </Row>\n            </View>\n        </View>\n    ) : (<Text>Dummy CryptoCurrencyAlert</Text>);\n}\n"]},"metadata":{},"sourceType":"module"}