{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/src/components/BunnyChat/InputToolbar.tsx\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React from'react';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Composer from\"./Composer\";import Send from\"./Send\";import Actions from\"./Actions\";import{withBunnyKit}from\"../../hooks/bunny-kit\";var makeStyles=function makeStyles(sizeLabor,themeLabor){var wp=sizeLabor.designsBasedOn.iphoneX.wp;var colors=themeLabor.theme.colors;return StyleSheet.create({container:{borderTopWidth:StyleSheet.hairlineWidth,borderTopColor:colors.border,backgroundColor:colors.background,bottom:0,left:0,right:0},primary:{flexDirection:'row',alignItems:'flex-end'},accessory:{height:wp(44)}});};var InputToolbar=function(_React$Component){_inherits(InputToolbar,_React$Component);var _super=_createSuper(InputToolbar);function InputToolbar(){var _this;_classCallCheck(this,InputToolbar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={position:'absolute'};_this.keyboardWillShowListener=undefined;_this.keyboardWillHideListener=undefined;_this.keyboardWillShow=function(){if(_this.state.position!=='relative'){_this.setState({position:'relative'});}};_this.keyboardWillHide=function(){if(_this.state.position!=='absolute'){_this.setState({position:'absolute'});}};return _this;}_createClass(InputToolbar,[{key:\"componentDidMount\",value:function componentDidMount(){this.keyboardWillShowListener=Keyboard.addListener('keyboardWillShow',this.keyboardWillShow);this.keyboardWillHideListener=Keyboard.addListener('keyboardWillHide',this.keyboardWillHide);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this.keyboardWillShowListener){this.keyboardWillShowListener.remove();}if(this.keyboardWillHideListener){this.keyboardWillHideListener.remove();}}},{key:\"renderActions\",value:function renderActions(){var _this$props=this.props,actionsConfig=_this$props.actionsConfig,actionOptionTintColor=_this$props.actionOptionTintColor,renderActionIcon=_this$props.renderActionIcon,actionContainerStyle=_this$props.actionContainerStyle,actionIconTextStyle=_this$props.actionIconTextStyle,actionWrapperStyle=_this$props.actionWrapperStyle;var actionsProps={actionsConfig:actionsConfig,actionOptionTintColor:actionOptionTintColor,renderActionIcon:renderActionIcon,actionContainerStyle:actionContainerStyle,actionIconTextStyle:actionIconTextStyle,actionWrapperStyle:actionWrapperStyle};if(this.props.renderActions){return this.props.renderActions(actionsProps);}else if(actionsConfig){return React.createElement(Actions,_extends({},actionsProps,{__self:this,__source:{fileName:_jsxFileName,lineNumber:137,columnNumber:20}}));}return null;}},{key:\"renderSend\",value:function renderSend(){var _this$props2=this.props,text=_this$props2.text,onSend=_this$props2.onSend,sendLabel=_this$props2.sendLabel,sendContainerStyle=_this$props2.sendContainerStyle,sendTextStyle=_this$props2.sendTextStyle,children=_this$props2.children,alwaysShowSend=_this$props2.alwaysShowSend,disabled=_this$props2.disabled,sendButtonProps=_this$props2.sendButtonProps;var sendProps={text:text,onSend:onSend,sendLabel:sendLabel,sendContainerStyle:sendContainerStyle,sendTextStyle:sendTextStyle,children:children,alwaysShowSend:alwaysShowSend,disabled:disabled,sendButtonProps:sendButtonProps};if(this.props.renderSend){return this.props.renderSend(sendProps);}return React.createElement(Send,_extends({},sendProps,{__self:this,__source:{fileName:_jsxFileName,lineNumber:168,columnNumber:16}}));}},{key:\"renderComposer\",value:function renderComposer(){var _this$props3=this.props,composerHeight=_this$props3.composerHeight,text=_this$props3.text,placeholderTextColor=_this$props3.placeholderTextColor,placeholder=_this$props3.placeholder,textInputProps=_this$props3.textInputProps,multiline=_this$props3.multiline,disableComposer=_this$props3.disableComposer,textInputStyle=_this$props3.textInputStyle,textInputAutoFocus=_this$props3.textInputAutoFocus,keyboardAppearance=_this$props3.keyboardAppearance,onTextChanged=_this$props3.onTextChanged,onInputSizeChanged=_this$props3.onInputSizeChanged;var composerProps={composerHeight:composerHeight,text:text,placeholderTextColor:placeholderTextColor,placeholder:placeholder,textInputProps:textInputProps,multiline:multiline,disableComposer:disableComposer,textInputStyle:textInputStyle,textInputAutoFocus:textInputAutoFocus,keyboardAppearance:keyboardAppearance,onTextChanged:onTextChanged,onInputSizeChanged:onInputSizeChanged};if(this.props.renderComposer){return this.props.renderComposer(composerProps);}return React.createElement(Composer,_extends({},composerProps,{__self:this,__source:{fileName:_jsxFileName,lineNumber:205,columnNumber:16}}));}},{key:\"renderAccessory\",value:function renderAccessory(){if(this.props.renderAccessory){var _this$props$bunnyKit=this.props.bunnyKit,sizeLabor=_this$props$bunnyKit.sizeLabor,themeLabor=_this$props$bunnyKit.themeLabor;var styles=makeStyles(sizeLabor,themeLabor);return React.createElement(View,{style:[styles.accessory,this.props.accessoryStyle],__self:this,__source:{fileName:_jsxFileName,lineNumber:213,columnNumber:17}},this.props.renderAccessory(this.props));}return null;}},{key:\"render\",value:function render(){var _this$props$bunnyKit2=this.props.bunnyKit,sizeLabor=_this$props$bunnyKit2.sizeLabor,themeLabor=_this$props$bunnyKit2.themeLabor;var styles=makeStyles(sizeLabor,themeLabor);return React.createElement(View,{style:[styles.container,{position:this.state.position},this.props.inputToolbarContainerStyle],__self:this,__source:{fileName:_jsxFileName,lineNumber:225,columnNumber:13}},React.createElement(View,{style:[styles.primary,this.props.primaryStyle],__self:this,__source:{fileName:_jsxFileName,lineNumber:234,columnNumber:17}},this.renderActions(),this.renderComposer(),this.renderSend()),this.renderAccessory());}}]);return InputToolbar;}(React.Component);InputToolbar.defaultProps={renderAccessory:undefined,renderActions:undefined,renderSend:undefined,renderComposer:undefined,inputToolbarContainerStyle:{},primaryStyle:{},accessoryStyle:{},onPressActionButton:function onPressActionButton(){}};export default withBunnyKit(InputToolbar);","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/components/BunnyChat/InputToolbar.tsx"],"names":["makeStyles","wp","sizeLabor","colors","themeLabor","container","borderTopWidth","StyleSheet","borderTopColor","backgroundColor","bottom","left","right","primary","flexDirection","alignItems","accessory","height","InputToolbar","React","Component","defaultProps","renderAccessory","renderActions","renderSend","renderComposer","inputToolbarContainerStyle","primaryStyle","accessoryStyle","onPressActionButton","state","position","keyboardWillShowListener","undefined","keyboardWillHideListener","Keyboard","keyboardWillShow","keyboardWillHide","actionsConfig","actionOptionTintColor","renderActionIcon","actionContainerStyle","actionIconTextStyle","actionWrapperStyle","actionsProps","text","onSend","sendLabel","sendContainerStyle","sendTextStyle","children","alwaysShowSend","disabled","sendButtonProps","sendProps","composerHeight","placeholderTextColor","placeholder","textInputProps","multiline","disableComposer","textInputStyle","textInputAutoFocus","keyboardAppearance","onTextChanged","onInputSizeChanged","composerProps","styles","withBunnyKit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {EmitterSubscription, Keyboard, StyleProp, StyleSheet, View, ViewStyle,} from 'react-native';\n\nimport Composer, {ComposerProps} from './Composer';\nimport Send, {SendProps} from './Send';\nimport Actions, {ActionsProps} from './Actions';\nimport {IMessage} from './types';\nimport {WithBunnyKit, withBunnyKit} from '../../hooks/bunny-kit';\nimport {SizeLabor, ThemeLabor} from '../../types';\n\nconst makeStyles = (sizeLabor: SizeLabor, themeLabor: ThemeLabor) => {\n    const {wp} = sizeLabor.designsBasedOn.iphoneX;\n    const {theme: {colors}} = themeLabor;\n    return StyleSheet.create({\n        container: {\n            borderTopWidth: StyleSheet.hairlineWidth, // TODO use bunnyKit measure\n            borderTopColor: colors.border,\n            backgroundColor: colors.background,\n            bottom: 0,\n            left: 0,\n            right: 0,\n        },\n        primary: {\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n        },\n        accessory: {\n            height: wp(44),\n        },\n    });\n};\n\n\nexport interface InputToolbarProps<TMessage extends IMessage> extends ActionsProps,\n    SendProps<TMessage>,\n    ComposerProps {\n    inputToolbarContainerStyle?: StyleProp<ViewStyle>,\n\n    renderActions?(props: ActionsProps): React.ReactNode,\n\n    renderSend?(props: SendProps<TMessage>): React.ReactNode,\n\n    renderComposer?(props: ComposerProps): React.ReactNode,\n\n    renderAccessory?(props: InputToolbarProps<TMessage>): React.ReactNode,\n\n    accessoryStyle?: StyleProp<ViewStyle>,\n    primaryStyle?: StyleProp<ViewStyle>,\n\n    onPressActionButton?(): void\n}\n\nexport interface InputToolbarState {\n    position: string;\n}\n\nclass InputToolbar<TMessage extends IMessage> extends React.Component<InputToolbarProps<TMessage> & WithBunnyKit,\n    InputToolbarState> {\n    static defaultProps = {\n        renderAccessory: undefined,\n        renderActions: undefined,\n        renderSend: undefined,\n        renderComposer: undefined,\n        inputToolbarContainerStyle: {},\n        primaryStyle: {},\n        accessoryStyle: {},\n        onPressActionButton: () => {\n        },\n    };\n\n    // TODO constructor\n    state = {\n        position: 'absolute',\n    };\n\n    keyboardWillShowListener?: EmitterSubscription = undefined;\n    keyboardWillHideListener?: EmitterSubscription = undefined;\n\n    componentDidMount() {\n        this.keyboardWillShowListener = Keyboard.addListener(\n            'keyboardWillShow',\n            this.keyboardWillShow,\n        );\n        this.keyboardWillHideListener = Keyboard.addListener(\n            'keyboardWillHide',\n            this.keyboardWillHide,\n        );\n    }\n\n    componentWillUnmount() {\n        if (this.keyboardWillShowListener) {\n            this.keyboardWillShowListener.remove();\n        }\n        if (this.keyboardWillHideListener) {\n            this.keyboardWillHideListener.remove();\n        }\n    }\n\n    keyboardWillShow = () => {\n        if (this.state.position !== 'relative') {\n            this.setState({\n                position: 'relative',\n            });\n        }\n    };\n\n    keyboardWillHide = () => {\n        if (this.state.position !== 'absolute') {\n            this.setState({\n                position: 'absolute',\n            });\n        }\n    };\n\n    renderActions() {\n        const {\n            actionsConfig,\n            actionOptionTintColor,\n            renderActionIcon,\n            actionContainerStyle,\n            actionIconTextStyle,\n            actionWrapperStyle,\n        } = this.props;\n        const actionsProps = {\n            actionsConfig,\n            actionOptionTintColor,\n            renderActionIcon,\n            actionContainerStyle,\n            actionIconTextStyle,\n            actionWrapperStyle,\n        };\n        if (this.props.renderActions) {\n            return this.props.renderActions(actionsProps);\n            // } else {\n        } else if (actionsConfig) {\n            // TODO why need onPressActionButton to render Actions\n            return <Actions {...actionsProps} />;\n        }\n        return null;\n    }\n\n    renderSend() {\n        const {\n            text,\n            onSend,\n            sendLabel,\n            sendContainerStyle,\n            sendTextStyle,\n            children,\n            alwaysShowSend,\n            disabled,\n            sendButtonProps\n        } = this.props;\n        const sendProps = {\n            text,\n            onSend,\n            sendLabel,\n            sendContainerStyle,\n            sendTextStyle,\n            children,\n            alwaysShowSend,\n            disabled,\n            sendButtonProps\n        };\n        if (this.props.renderSend) {\n            return this.props.renderSend(sendProps);\n        }\n        return <Send<TMessage> {...sendProps} />;\n        // return <Send {...sendProps} />\n    }\n\n    renderComposer() {\n        const {\n            composerHeight,\n            text,\n            placeholderTextColor,\n            placeholder,\n            textInputProps,\n            multiline,\n            disableComposer,\n            textInputStyle,\n            textInputAutoFocus,\n            keyboardAppearance,\n            onTextChanged,\n            onInputSizeChanged\n        } = this.props;\n        const composerProps = {\n            composerHeight,\n            text,\n            placeholderTextColor,\n            placeholder,\n            textInputProps,\n            multiline,\n            disableComposer,\n            textInputStyle,\n            textInputAutoFocus,\n            keyboardAppearance,\n            onTextChanged,\n            onInputSizeChanged\n        };\n        if (this.props.renderComposer) {\n            return this.props.renderComposer(composerProps);\n        }\n\n        return <Composer {...composerProps} />;\n    }\n\n    renderAccessory() {\n        if (this.props.renderAccessory) {\n            const {bunnyKit: {sizeLabor, themeLabor}} = this.props;\n            const styles = makeStyles(sizeLabor, themeLabor);\n            return (\n                <View style={[styles.accessory, this.props.accessoryStyle]}>\n                    {this.props.renderAccessory(this.props)}\n                </View>\n            );\n        }\n        return null;\n    }\n\n    render() {\n        const {bunnyKit: {sizeLabor, themeLabor}} = this.props;\n        const styles = makeStyles(sizeLabor, themeLabor);\n        return (\n            <View\n                style={\n                    [\n                        styles.container,\n                        {position: this.state.position},\n                        this.props.inputToolbarContainerStyle,\n                    ] as ViewStyle\n                }\n            >\n                <View style={[styles.primary, this.props.primaryStyle]}>\n                    {this.renderActions()}\n                    {this.renderComposer()}\n                    {this.renderSend()}\n                </View>\n                {this.renderAccessory()}\n            </View>\n        );\n    }\n}\n\nexport default withBunnyKit(InputToolbar);\n"]},"metadata":{},"sourceType":"module"}