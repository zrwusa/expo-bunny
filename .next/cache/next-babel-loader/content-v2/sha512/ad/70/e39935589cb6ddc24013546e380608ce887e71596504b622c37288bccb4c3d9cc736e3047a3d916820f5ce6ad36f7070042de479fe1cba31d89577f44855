{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{BinaryTree,BinaryTreeNode}from\"./binary-tree\";export var BSTNode=function(_BinaryTreeNode){_inherits(BSTNode,_BinaryTreeNode);var _super=_createSuper(BSTNode);function BSTNode(){_classCallCheck(this,BSTNode);return _super.apply(this,arguments);}_createClass(BSTNode,[{key:\"clone\",value:function clone(){return new BSTNode(this._id,this._val,this._count);}}]);return BSTNode;}(BinaryTreeNode);export var BST=function(_BinaryTree){_inherits(BST,_BinaryTree);var _super2=_createSuper(BST);function BST(autoPrefixSum,id,val,count){var _this;_classCallCheck(this,BST);_this=_super2.call(this,id,val,count);_this._autoAllLesserSum=false;if(autoPrefixSum){_this._autoAllLesserSum=true;}return _this;}_createClass(BST,[{key:\"createNode\",value:function createNode(id,val,count){return new BSTNode(id,val,count);}},{key:\"insert\",value:function insert(id,val,count){var inserted=[];var newNode=this.createNode(id,val,count);var newId=newNode.id;if(this.root===null){this.root=newNode;this._size++;inserted.push(this.root);}else{var cur=this.root;var traversing=true;while(traversing){if(cur.id===newId){this._autoAllLesserSum&&cur.right&&this.subTreeAdd(cur.right,newNode.count,'allLesserSum');cur.count+=newNode.count;traversing=false;inserted.push(cur);}else if(newId<cur.id){this._autoAllLesserSum&&cur.right&&this.subTreeAdd(cur.right,newNode.count,'allLesserSum');if(this._autoAllLesserSum)cur.allLesserSum+=newNode.count;if(cur.left===null){if(this._autoAllLesserSum)newNode.allLesserSum=cur.allLesserSum-newNode.count;newNode.parent=cur;newNode.familyPosition=1;cur.left=newNode;this._size++;traversing=false;inserted.push(cur.left);}else{cur=cur.left;}}else if(newId>cur.id){if(cur.right===null){if(this._autoAllLesserSum)newNode.allLesserSum=cur.allLesserSum+cur.count;newNode.parent=cur;newNode.familyPosition=2;cur.right=newNode;this._size++;traversing=false;inserted.push(cur.right);}else{cur=cur.right;}}}}return inserted;}},{key:\"remove\",value:function remove(id,isUpdateAllLeftSum){if(isUpdateAllLeftSum===undefined){isUpdateAllLeftSum=true;}var bstDeletedResult=[];if(this.root===null)return bstDeletedResult;var current=this.getNode(id);if(current===null)return bstDeletedResult;var parent=current!=null&&current.parent?current.parent:null;var needBalanced=null;var orgCurrent=current;var deletedCount=current.count;if(current.left===null){if(parent===null){this.root=current.right;}else{switch(current.familyPosition){case 1:parent.left=current.right;break;case 2:parent.right=current.right;break;}needBalanced=parent;}}else{var leftSubTreeMax=this.getMaxNode(current.left);var parentOfLeftSubTreeMax=leftSubTreeMax.parent;orgCurrent=current.swapLocation(leftSubTreeMax);if(parentOfLeftSubTreeMax){if(parentOfLeftSubTreeMax.right===leftSubTreeMax){parentOfLeftSubTreeMax.right=leftSubTreeMax.left;}else{parentOfLeftSubTreeMax.left=leftSubTreeMax.left;}needBalanced=parentOfLeftSubTreeMax;}}this._size--;this._autoAllLesserSum&&isUpdateAllLeftSum&&this.allGreaterNodesAdd(current,-deletedCount,'allLesserSum');bstDeletedResult.push({deleted:orgCurrent,needBalanced:needBalanced});return bstDeletedResult;}},{key:\"isBST\",value:function isBST(){if(!this.root)return true;function dfs(cur,min,max){if(!cur)return true;if(cur.id<=min||cur.id>=max)return false;return dfs(cur.left,min,cur.id)&&dfs(cur.right,cur.id,max);}return dfs(this.root,Number.MIN_SAFE_INTEGER,Number.MAX_SAFE_INTEGER);}},{key:\"contains\",value:function contains(node){return false;}},{key:\"getNodes\",value:function getNodes(nodeProperty,propertyName,onlyOne){if(propertyName===undefined){propertyName='id';}var result=[];function _traverse(cur){switch(propertyName){case'id':if(cur.id===nodeProperty){result.push(cur);if(onlyOne)return;}break;case'count':if(cur.count===nodeProperty){result.push(cur);if(onlyOne)return;}break;case'val':if(cur.val===nodeProperty){result.push(cur);if(onlyOne)return;}break;case'allLesserSum':if(cur.allLesserSum===nodeProperty){result.push(cur);if(onlyOne)return;}break;default:if(cur.id===nodeProperty){result.push(cur);if(onlyOne)return;}break;}if(!cur.left&&!cur.right)return null;if(propertyName==='id'){if(nodeProperty<cur.id){cur.left?_traverse(cur.left):null;}if(nodeProperty>cur.id){cur.right?_traverse(cur.right):null;}}else{cur.left?_traverse(cur.left):null;cur.right?_traverse(cur.right):null;}}this.root&&_traverse(this.root);return result;}},{key:\"getNode\",value:function getNode(nodeProperty,propertyName){if(propertyName===undefined){propertyName='id';}var node=this.getNodes(nodeProperty,propertyName,true)[0];if(node){return node;}else{return null;}}},{key:\"getMinNode\",value:function getMinNode(node){if(!node){node=this.root;}function _traverse(cur){if(!cur.left)return cur;return _traverse(cur.left);}return node?_traverse(node):null;}},{key:\"getMaxNode\",value:function getMaxNode(node){if(!node){node=this.root;}function _traverse(cur){if(!cur.right)return cur;return _traverse(cur.right);}return node?_traverse(node):null;}},{key:\"lesserSum\",value:function lesserSum(id,propertyName){var _this2=this;if(propertyName===undefined){propertyName='id';}var sum=0;var _traverse=function _traverse(cur){var needSum;switch(propertyName){case'id':needSum=cur.id;break;case'count':needSum=cur.count;break;case'allLesserSum':needSum=cur.allLesserSum;break;default:needSum=cur.id;break;}var curId=cur.id;if(id===curId){if(cur.right){sum+=_this2.subTreeSum(cur.right,propertyName);}return;}if(id>curId){if(cur.left){sum+=_this2.subTreeSum(cur.left,propertyName);}sum+=needSum;if(cur.right){_traverse(cur.right);}else{return;}}if(id<curId){if(cur.left){_traverse(cur.left);}else{return;}}};this.root&&_traverse(this.root);return sum;}},{key:\"subTreeAdd\",value:function subTreeAdd(subTreeRoot,delta,propertyName){var _this3=this;if(propertyName===undefined){propertyName='id';}var _traverse=function _traverse(cur){switch(propertyName){case'id':cur.id+=delta;break;case'count':cur.count+=delta;_this3._autoAllLesserSum&&_this3.allGreaterNodesAdd(cur,delta,'allLesserSum');break;case'allLesserSum':cur.allLesserSum+=delta;break;default:cur.id+=delta;break;}if(!cur.left&&!cur.right)return;cur.left&&_traverse(cur.left);cur.right&&_traverse(cur.right);};if(subTreeRoot){_traverse(subTreeRoot);return true;}return false;}},{key:\"allGreaterNodesAdd\",value:function allGreaterNodesAdd(node,delta,propertyName){var _this4=this;if(propertyName===undefined){propertyName='id';}var _traverse=function _traverse(cur){if(cur.id>node.id){switch(propertyName){case'id':cur.id+=delta;break;case'count':cur.count+=delta;_this4._autoAllLesserSum&&_this4.allGreaterNodesAdd(cur,delta,'allLesserSum');break;case'allLesserSum':cur.allLesserSum+=delta;break;default:cur.id+=delta;break;}}if(!cur.left&&!cur.right)return;cur.left&&cur.id>node.id&&_traverse(cur.left);cur.right&&_traverse(cur.right);};if(this.root){_traverse(this.root);return true;}return false;}},{key:\"balance\",value:function balance(){var _this5=this;var sorted=this.DFS('in','node');this.clear();var buildBalanceBST=function buildBalanceBST(l,r){if(l>r)return;var m=Math.floor(l+(r-l)/2);var midNode=sorted[Math.floor(l+(r-l)/2)];_this5.insert(midNode.id,midNode.val,midNode.count);buildBalanceBST(l,m-1);buildBalanceBST(m+1,r);};if(sorted.length>0){buildBalanceBST(0,sorted.length-1);return true;}else{return false;}}},{key:\"isAVLBalanced\",value:function isAVLBalanced(){var balanced=true;var _height=function _height(cur){if(!cur)return 0;var leftHeight=_height(cur.left);var rightHeight=_height(cur.right);if(Math.abs(leftHeight-rightHeight)>1){balanced=false;return Infinity;}return Math.max(leftHeight,rightHeight)+1;};_height(this.root);return balanced;}}]);return BST;}(BinaryTree);","map":null,"metadata":{},"sourceType":"module"}