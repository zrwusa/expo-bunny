{"ast":null,"code":"import _ from'lodash';import{AuthAPIError,BunnyAPIError,NomicsAPIError}from\"../utils\";import{collectSysError}from\"../store/actions/sys\";import{EBizLogicMsg}from\"../constants\";import store from\"../store/store\";var dispatch=store.dispatch;export var checkCommonAPIProtocol=function checkCommonAPIProtocol(data,PErrorClass){var dataKeys;try{dataKeys=Object.keys(data);}catch(err){throw new PErrorClass(err.message,err.stack);}var isDataKeysEqual=_.isEqual(dataKeys.sort(),['time_spent','data','http_extra','business_logic','server_error'].sort());if(!isDataKeysEqual){return false;}var business_logic=data.business_logic,http_extra=data.http_extra,server_error=data.server_error;var blKeys=Object.keys(business_logic);var isBLKeysEqual=_.isEqual(blKeys.sort(),['code','message','description','error_code','error_message','error_description','error_stack'].sort());if(!isBLKeysEqual){dispatch(collectSysError(new PErrorClass(EBizLogicMsg.NOT_CONFORM_TO_API_RESPONSE_BL_STRUCTURE)));return false;}var httpExtraKeys=Object.keys(http_extra);var isHttpExtraKeysEqual=_.isEqual(httpExtraKeys.sort(),['code','message','description'].sort());if(!isHttpExtraKeysEqual){dispatch(collectSysError(new PErrorClass(EBizLogicMsg.NOT_CONFORM_TO_API_RESPONSE_EXTRA_STRUCTURE)));return false;}var serverErrorKeys=Object.keys(server_error);var isServerErrorKeysEqual=_.isEqual(serverErrorKeys.sort(),['code','message','stack'].sort());if(!isServerErrorKeysEqual){dispatch(collectSysError(new PErrorClass(EBizLogicMsg.NOT_CONFORM_TO_API_RESPONSE_SERVER_STRUCTURE)));return false;}return true;};export var checkAuthAPIProtocol=function checkAuthAPIProtocol(data){return checkCommonAPIProtocol(data,AuthAPIError);};export var checkBunnyAPIProtocol=function checkBunnyAPIProtocol(data){return checkCommonAPIProtocol(data,BunnyAPIError);};export var checkNomicsAPIProtocol=function checkNomicsAPIProtocol(data){return checkCommonAPIProtocol(data,NomicsAPIError);};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/src/helpers/api-protocols.ts"],"names":["dispatch","store","checkCommonAPIProtocol","dataKeys","Object","err","isDataKeysEqual","_","business_logic","http_extra","server_error","data","blKeys","isBLKeysEqual","collectSysError","EBizLogicMsg","httpExtraKeys","isHttpExtraKeysEqual","serverErrorKeys","isServerErrorKeysEqual","checkAuthAPIProtocol","checkBunnyAPIProtocol","checkNomicsAPIProtocol"],"mappings":"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","sourcesContent":["import {ErrorClass} from '../types';\nimport _ from 'lodash';\nimport {AuthAPIError, BunnyAPIError, NomicsAPIError} from '../utils';\nimport {collectSysError} from '../store/actions/sys';\nimport {EBizLogicMsg} from '../constants';\nimport store from '../store/store';\n\nconst {dispatch} = store;\nexport const checkCommonAPIProtocol = (data: any, PErrorClass: ErrorClass) => {\n    let dataKeys;\n    try {\n        dataKeys = Object.keys(data);\n    } catch (err: any) {\n        throw new PErrorClass(err.message, err.stack);\n    }\n    const isDataKeysEqual = _.isEqual(dataKeys.sort(), ['time_spent', 'data', 'http_extra', 'business_logic', 'server_error'].sort());\n    if (!isDataKeysEqual) {\n        // dispatch(collectSysError(new PErrorClass(EBizLogicMsg.NOT_CONFORM_TO_API_RESPONSE_ROOT_STRUCTURE)));\n        return false;\n    }\n    const {business_logic, http_extra, server_error} = data;\n    const blKeys = Object.keys(business_logic);\n    const isBLKeysEqual = _.isEqual(blKeys.sort(), ['code', 'message', 'description', 'error_code', 'error_message', 'error_description', 'error_stack'].sort());\n    if (!isBLKeysEqual) {\n        dispatch(collectSysError(new PErrorClass(EBizLogicMsg.NOT_CONFORM_TO_API_RESPONSE_BL_STRUCTURE)));\n        return false;\n    }\n    const httpExtraKeys = Object.keys(http_extra);\n    const isHttpExtraKeysEqual = _.isEqual(httpExtraKeys.sort(), ['code', 'message', 'description'].sort());\n\n    if (!isHttpExtraKeysEqual) {\n        dispatch(collectSysError(new PErrorClass(EBizLogicMsg.NOT_CONFORM_TO_API_RESPONSE_EXTRA_STRUCTURE)));\n        return false;\n    }\n\n    const serverErrorKeys = Object.keys(server_error);\n    const isServerErrorKeysEqual = _.isEqual(serverErrorKeys.sort(), ['code', 'message', 'stack'].sort());\n\n    if (!isServerErrorKeysEqual) {\n        dispatch(collectSysError(new PErrorClass(EBizLogicMsg.NOT_CONFORM_TO_API_RESPONSE_SERVER_STRUCTURE)));\n        return false;\n    }\n    return true;\n};\nexport const checkAuthAPIProtocol = (data: any) => {\n    return checkCommonAPIProtocol(data, AuthAPIError);\n};\n\nexport const checkBunnyAPIProtocol = (data: any) => {\n    return checkCommonAPIProtocol(data, BunnyAPIError);\n};\n\nexport const checkNomicsAPIProtocol = (data: any) => {\n    return checkCommonAPIProtocol(data, NomicsAPIError);\n};\n"]},"metadata":{},"sourceType":"module"}