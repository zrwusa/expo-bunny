{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";export var HeapNode=function(){function HeapNode(id,val){_classCallCheck(this,HeapNode);if(val===undefined){val=null;}this._id=id;this._val=val||null;}_createClass(HeapNode,[{key:\"id\",get:function get(){return this._id;},set:function set(v){this._id=v;}},{key:\"val\",get:function get(){return this._val;},set:function set(v){this._val=v;}}]);return HeapNode;}();export var Heap=function(){function Heap(nodes){_classCallCheck(this,Heap);this._nodes=Array.isArray(nodes)?_toConsumableArray(nodes):[];this._fix();}_createClass(Heap,[{key:\"_swap\",value:function _swap(i,j){var temp=this._nodes[i];this._nodes[i]=this._nodes[j];this._nodes[j]=temp;}},{key:\"_shouldSwap\",value:function _shouldSwap(parentIndex,childIndex){if(parentIndex<0||parentIndex>=this.size()-1)return false;if(childIndex<1||childIndex>this.size()-1)return false;return!this.compare(parentIndex,childIndex);}},{key:\"_parentIndex\",value:function _parentIndex(childIndex){var parentIndex=Math.floor((childIndex-1)/2);if(parentIndex<0||parentIndex>=this.size()-1)return-1;return parentIndex;}},{key:\"_hasParent\",value:function _hasParent(childIndex){return this._parentIndex(childIndex)>-1;}},{key:\"_leftChildIndex\",value:function _leftChildIndex(parentIndex){var leftChildIndex=parentIndex*2+1;if(leftChildIndex<1||leftChildIndex>this.size()-1){return-1;}else{return leftChildIndex;}}},{key:\"_rightChildIndex\",value:function _rightChildIndex(parentIndex){var rightChildIndex=parentIndex*2+2;if(rightChildIndex<1||rightChildIndex>this.size()-1){return-1;}else{return rightChildIndex;}}},{key:\"_hasLeftChild\",value:function _hasLeftChild(parentIndex){return this._leftChildIndex(parentIndex)!==-1;}},{key:\"_hasRightChild\",value:function _hasRightChild(parentIndex){return this._rightChildIndex(parentIndex)!==-1;}},{key:\"_compareChildren\",value:function _compareChildren(parentIndex){if(!this._hasLeftChild(parentIndex)&&!this._hasRightChild(parentIndex))return-1;var leftChildIndex=this._leftChildIndex(parentIndex),rightChildIndex=this._rightChildIndex(parentIndex);if(!this._hasLeftChild(parentIndex))return rightChildIndex;if(!this._hasRightChild(parentIndex))return leftChildIndex;return this.compare(leftChildIndex,rightChildIndex)?leftChildIndex:rightChildIndex;}},{key:\"_fix\",value:function _fix(){for(var i=Math.floor(this.size()/2);i>-1;i--){this.heapifyDown(i);}}},{key:\"heapifyUp\",value:function heapifyUp(startingIndex){var childIndex=startingIndex;var parentIndex=Math.floor((childIndex-1)/2);while(this._shouldSwap(parentIndex,childIndex)){this._swap(parentIndex,childIndex);childIndex=parentIndex;parentIndex=Math.floor((childIndex-1)/2);}return childIndex;}},{key:\"heapifyDown\",value:function heapifyDown(startingIndex){var parentIndex=startingIndex;var childIndex=this._compareChildren(parentIndex);while(this._shouldSwap(parentIndex,childIndex)){this._swap(parentIndex,childIndex);parentIndex=childIndex;childIndex=this._compareChildren(parentIndex);}return parentIndex;}},{key:\"poll\",value:function poll(){var res;if(this.size()>1){this._swap(0,this._nodes.length-1);res=this._nodes.pop();this.heapifyDown(0);}else{if(this.size()===1){res=this._nodes.pop();}else{res=null;}}return res;}},{key:\"insert\",value:function insert(node,priority){if(priority!==undefined){if(node instanceof HeapNode){node.id=priority;}}this._nodes.push(node);this.heapifyUp(this._nodes.length-1);}},{key:\"isValidNode\",value:function isValidNode(index){return this._nodes[index]!==undefined;}},{key:\"isValid\",value:function isValid(){var _this=this;var isValidRecursive=function isValidRecursive(parentIndex){var isValidLeft=true;var isValidRight=true;if(_this._hasLeftChild(parentIndex)){var leftChildIndex=parentIndex*2+1;if(!_this.compare(parentIndex,leftChildIndex))return false;isValidLeft=isValidRecursive(leftChildIndex);}if(_this._hasRightChild(parentIndex)){var rightChildIndex=parentIndex*2+2;if(!_this.compare(parentIndex,rightChildIndex))return false;isValidRight=isValidRecursive(rightChildIndex);}return isValidLeft&&isValidRight;};return isValidRecursive(0);}},{key:\"toArray\",value:function toArray(){return this._nodes;}},{key:\"peek\",value:function peek(){return this.isValidNode(0)?this._nodes[0]:null;}},{key:\"leaf\",value:function leaf(){return this.isValidNode(this.size()-1)?this._nodes[this.size()-1]:null;}},{key:\"size\",value:function size(){return this._nodes.length;}},{key:\"isEmpty\",value:function isEmpty(){return this.size()===0;}},{key:\"sort\",value:function sort(nodeOrPropertyName){var visitedId=[];var visitedVal=[];var visitedNode=[];var visitedNumber=[];var pushByValueType=function pushByValueType(node){switch(nodeOrPropertyName){case'id':if(node instanceof HeapNode){visitedId.push(node.id);}break;case'val':if(node instanceof HeapNode){visitedVal.push(node.val);}break;case'node':if(node instanceof HeapNode){visitedNode.push(node);}break;default:if(typeof node==='number'){visitedNumber.push(node);}break;}};while(!this.isEmpty()){var top=this.poll();if(top){pushByValueType(top);}}switch(nodeOrPropertyName){case'id':return visitedId;case'val':return visitedVal;case'node':return visitedNode;default:return visitedNumber;}}},{key:\"DFS\",value:function DFS(dfsMode,nodeOrPropertyName){var _this2=this;var visitedId=[];var visitedVal=[];var visitedNode=[];var visitedNumber=[];var pushByValueType=function pushByValueType(index){var node=_this2._nodes[index];switch(nodeOrPropertyName){case'id':if(node instanceof HeapNode){visitedId.push(node.id);}break;case'val':if(node instanceof HeapNode){visitedVal.push(node.val);}break;case'node':if(node instanceof HeapNode){visitedNode.push(node);}break;default:if(typeof node==='number'){visitedNumber.push(node);}break;}};var _traverse=function _traverse(cur){var leftChildIndex=cur*2+1;var rightChildIndex=cur*2+2;switch(dfsMode){case'in':if(_this2.isValidNode(leftChildIndex))_traverse(leftChildIndex);pushByValueType(cur);if(_this2.isValidNode(rightChildIndex))_traverse(rightChildIndex);break;case'pre':pushByValueType(cur);if(_this2.isValidNode(leftChildIndex))_traverse(leftChildIndex);if(_this2.isValidNode(rightChildIndex))_traverse(rightChildIndex);break;case'post':if(_this2.isValidNode(leftChildIndex))_traverse(leftChildIndex);if(_this2.isValidNode(rightChildIndex))_traverse(rightChildIndex);pushByValueType(cur);break;}};this.isValidNode(0)&&_traverse(0);switch(nodeOrPropertyName){case'id':return visitedId;case'val':return visitedVal;case'node':return visitedNode;default:return visitedNumber;}}},{key:\"clear\",value:function clear(){this._nodes=[];}}]);return Heap;}();","map":null,"metadata":{},"sourceType":"module"}