{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useEffect,useState}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import View from\"react-native-web/dist/exports/View\";import{PanGestureHandler,State}from'react-native-gesture-handler';import{useBunnyKit}from\"../../../src/hooks/bunny-kit\";var SMALL_SIZE=24;var MEDIUM_SIZE=34;var LARGE_SIZE=44;var osRtl=I18nManager.isRTL;export default(function(props){var _useBunnyKit=useBunnyKit(),colors=_useBunnyKit.colors;var min=props.min,max=props.max,fromValueOnChange=props.fromValueOnChange,toValueOnChange=props.toValueOnChange,_props$step=props.step,step=_props$step===void 0?1:_props$step,_props$styleSize=props.styleSize,styleSize=_props$styleSize===void 0?'medium':_props$styleSize,_props$fromKnobColor=props.fromKnobColor,fromKnobColor=_props$fromKnobColor===void 0?colors.primary:_props$fromKnobColor,_props$toKnobColor=props.toKnobColor,toKnobColor=_props$toKnobColor===void 0?colors.primary:_props$toKnobColor,_props$inRangeBarColo=props.inRangeBarColor,inRangeBarColor=_props$inRangeBarColo===void 0?colors.primary:_props$inRangeBarColo,_props$outOfRangeBarC=props.outOfRangeBarColor,outOfRangeBarColor=_props$outOfRangeBarC===void 0?colors.divider:_props$outOfRangeBarC,_props$valueLabelsTex=props.valueLabelsTextColor,valueLabelsTextColor=_props$valueLabelsTex===void 0?colors.text2:_props$valueLabelsTex,_props$valueLabelsBac=props.valueLabelsBackgroundColor,valueLabelsBackgroundColor=_props$valueLabelsBac===void 0?'#3a4766':_props$valueLabelsBac,_props$rangeLabelsTex=props.rangeLabelsTextColor,rangeLabelsTextColor=_props$rangeLabelsTex===void 0?'rgb(60,60,60)':_props$rangeLabelsTex,_props$showRangeLabel=props.showRangeLabels,showRangeLabels=_props$showRangeLabel===void 0?true:_props$showRangeLabel,_props$showValueLabel=props.showValueLabels,showValueLabels=_props$showValueLabel===void 0?true:_props$showValueLabel,initialFromValue=props.initialFromValue,initialToValue=props.initialToValue,_props$valueLabelsPos=props.valueLabelsPosition,valueLabelsPosition=_props$valueLabelsPos===void 0?'down':_props$valueLabelsPos,_props$showBubbles=props.showBubbles,showBubbles=_props$showBubbles===void 0?false:_props$showBubbles,_props$showValueLabel2=props.showValueLabelsOnlyWhenDrag,showValueLabelsOnlyWhenDrag=_props$showValueLabel2===void 0?false:_props$showValueLabel2,_props$valueLabelsUni=props.valueLabelsUnit,valueLabelsUnit=_props$valueLabelsUni===void 0?'':_props$valueLabelsUni,fromValueOnIndicated=props.fromValueOnIndicated,toValueOnIndicated=props.toValueOnIndicated;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),wasInitialized=_useState2[0],setWasInitialized=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),knobSize=_useState4[0],setKnobSize=_useState4[1];var _useState5=useState(15),_useState6=_slicedToArray(_useState5,2),fontSize=_useState6[0],setFontSize=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),stepInPixels=_useState8[0],setStepInPixels=_useState8[1];var _useState9=useState('row'),_useState10=_slicedToArray(_useState9,2),flexDirection=_useState10[0],setFlexDirection=_useState10[1];var _useState11=useState({left:(knobSize-40)/2}),_useState12=_slicedToArray(_useState11,2),svgOffset=_useState12[0],setSvgOffset=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),fromValueOffset=_useState14[0],setFromValueOffset=_useState14[1];var _useState15=useState(0),_useState16=_slicedToArray(_useState15,2),toValueOffset=_useState16[0],setToValueOffset=_useState16[1];var _useState17=useState(0),_useState18=_slicedToArray(_useState17,2),sliderWidth=_useState18[0],setSliderWidth=_useState18[1];var _useState19=useState(3),_useState20=_slicedToArray(_useState19,2),fromElevation=_useState20[0],setFromElevation=_useState20[1];var _useState21=useState(3),_useState22=_slicedToArray(_useState21,2),toElevation=_useState22[0],setToElevation=_useState22[1];var _useState23=useState(new Animated.Value(0)),_useState24=_slicedToArray(_useState23,1),translateXFromValue=_useState24[0];var _useState25=useState(new Animated.Value(0)),_useState26=_slicedToArray(_useState25,1),translateXtoValue=_useState26[0];var _useState27=useState(new Animated.Value(showValueLabelsOnlyWhenDrag?0.01:1)),_useState28=_slicedToArray(_useState27,1),fromValueScale=_useState28[0];var _useState29=useState(new Animated.Value(showValueLabelsOnlyWhenDrag?0.01:1)),_useState30=_slicedToArray(_useState29,1),toValueScale=_useState30[0];var _useState31=useState(new Animated.Value(0.01)),_useState32=_slicedToArray(_useState31,1),rightBarScaleX=_useState32[0];var _useState33=useState(new Animated.Value(0.01)),_useState34=_slicedToArray(_useState33,1),leftBarScaleX=_useState34[0];var toValueTextRef=React.createRef();var fromValueTextRef=React.createRef();var opacity=React.useRef(new Animated.Value(0)).current;useEffect(function(){setFlexDirection(osRtl?'row-reverse':'row');setSvgOffset(osRtl?{right:(knobSize-40)/2}:{left:(knobSize-40)/2});},[knobSize]);useEffect(function(){if(wasInitialized){var _fromValueTextRef$cur,_toValueTextRef$curre;var stepSize=setStepSize(max,min,step);(_fromValueTextRef$cur=fromValueTextRef.current)==null?void 0:_fromValueTextRef$cur.setNativeProps({text:min.toString()+valueLabelsUnit});(_toValueTextRef$curre=toValueTextRef.current)==null?void 0:_toValueTextRef$curre.setNativeProps({text:max.toString()+valueLabelsUnit});if(typeof initialFromValue==='number'&&initialFromValue>=min&&initialFromValue<=max){var offset=(initialFromValue-min)/step*stepSize-knobSize/2;setFromValueStatic(offset,knobSize,stepSize);setValueText(offset,true);}if(typeof initialToValue==='number'&&initialToValue>=min&&initialToValue<=max&&typeof initialFromValue==='number'&&initialToValue>initialFromValue){var _offset=(initialToValue-min)/step*stepSize-knobSize/2;setToValueStatic(_offset,knobSize,stepSize);setValueText(_offset,false);}Animated.timing(opacity,{toValue:1,duration:64,useNativeDriver:true}).start();}},[min,max,step,initialFromValue,initialToValue,wasInitialized]);var sizeMap={'small':SMALL_SIZE,'medium':MEDIUM_SIZE,'large':LARGE_SIZE};useEffect(function(){var size=typeof styleSize==='number'?styleSize:sizeMap[styleSize];setKnobSize(size);translateXFromValue.setValue(-size/4);},[styleSize]);var calculateFromValue=function calculateFromValue(newOffset,knobSize,stepInPixels){return Math.floor((newOffset+knobSize/2)/stepInPixels)*stepInPixels-knobSize/2;};var setFromValueStatic=function setFromValueStatic(newOffset,knobSize,stepInPixels){newOffset=calculateFromValue(newOffset,knobSize,stepInPixels);setFromValue(newOffset);setFromValueOffset(newOffset);fromValueOnChange(Math.floor((newOffset+knobSize/2)*(max-min)/sliderWidth/step)*step+min);};var setFromValue=function setFromValue(newOffset){translateXFromValue.setValue(newOffset);leftBarScaleX.setValue((newOffset+knobSize/2)/sliderWidth+0.01);};var calculateToValue=function calculateToValue(newOffset,knobSize,stepInPixels){return Math.ceil((newOffset+knobSize/2)/stepInPixels)*stepInPixels-knobSize/2;};var setToValueStatic=function setToValueStatic(newOffset,knobSize,stepInPixels){newOffset=calculateToValue(newOffset,knobSize,stepInPixels);setToValue(newOffset);setToValueOffset(newOffset);toValueOnChange(Math.ceil((newOffset+knobSize/2)*(max-min)/sliderWidth/step)*step+min);};var setToValue=function setToValue(newOffset){translateXtoValue.setValue(newOffset);rightBarScaleX.setValue(1.01-(newOffset+knobSize/2)/sliderWidth);};var setStepSize=function setStepSize(max,min,step){var numberOfSteps=(max-min)/step;var stepSize=sliderWidth/numberOfSteps;setStepInPixels(stepSize);return stepSize;};var setValueText=function setValueText(totalOffset){var isFrom=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;if(isFrom&&fromValueTextRef!=null){var _fromValueTextRef$cur2;var numericValue=Math.floor((totalOffset+knobSize/2)*(max-min)/sliderWidth/step)*step+min;fromValueOnIndicated==null?void 0:fromValueOnIndicated(numericValue);(_fromValueTextRef$cur2=fromValueTextRef.current)==null?void 0:_fromValueTextRef$cur2.setNativeProps({text:numericValue.toString()+valueLabelsUnit});}else if(!isFrom&&toValueTextRef!=null){var _toValueTextRef$curre2;var _numericValue=Math.ceil((totalOffset+knobSize/2)*(max-min)/sliderWidth/step)*step+min;toValueOnIndicated==null?void 0:toValueOnIndicated(_numericValue);(_toValueTextRef$curre2=toValueTextRef.current)==null?void 0:_toValueTextRef$curre2.setNativeProps({text:_numericValue.toString()+valueLabelsUnit});}};var onGestureEventFromValue=function onGestureEventFromValue(event){var totalOffset=event.nativeEvent.translationX+fromValueOffset;if(totalOffset>=-knobSize/2&&totalOffset<toValueOffset){translateXFromValue.setValue(totalOffset);setValueText(totalOffset,true);leftBarScaleX.setValue((totalOffset+knobSize/2)/sliderWidth+0.01);}};var onHandlerStateChangeFromValue=function onHandlerStateChangeFromValue(event){if(event.nativeEvent.state===State.BEGAN){if(showValueLabelsOnlyWhenDrag)scaleTo(fromValueScale,1);setElevations(6,5);}if(event.nativeEvent.state===State.END){var newOffset=event.nativeEvent.translationX+fromValueOffset;newOffset=calculateFromValue(newOffset,knobSize,stepInPixels);if(newOffset<-knobSize/2){newOffset=-knobSize/2;}else if(newOffset>=toValueOffset){newOffset=toValueOffset-stepInPixels;}setFromValueStatic(newOffset,knobSize,stepInPixels);if(showValueLabelsOnlyWhenDrag)scaleTo(fromValueScale,0.01);}};var onGestureEventToValue=function onGestureEventToValue(event){var totalOffset=event.nativeEvent.translationX+toValueOffset;if(totalOffset<=sliderWidth-knobSize/2&&totalOffset>fromValueOffset){translateXtoValue.setValue(totalOffset);setValueText(totalOffset,false);rightBarScaleX.setValue(1.01-(totalOffset+knobSize/2)/sliderWidth);}};var onHandlerStateChangeToValue=function onHandlerStateChangeToValue(event){if(event.nativeEvent.state===State.BEGAN){if(showValueLabelsOnlyWhenDrag)scaleTo(toValueScale,1);setElevations(5,6);}if(event.nativeEvent.state===State.END){var newOffset=event.nativeEvent.translationX+toValueOffset;newOffset=calculateToValue(newOffset,knobSize,stepInPixels);if(newOffset>sliderWidth-knobSize/2){newOffset=sliderWidth-knobSize/2;}else if(newOffset<=fromValueOffset){newOffset=fromValueOffset+stepInPixels;}setToValueOffset(newOffset);translateXtoValue.setValue(newOffset);rightBarScaleX.setValue(1.01-(newOffset+knobSize/2)/sliderWidth);if(showValueLabelsOnlyWhenDrag)scaleTo(toValueScale,0.01);toValueOnChange(Math.ceil((newOffset+knobSize/2)*(max-min)/sliderWidth/step)*step+min);}};var scaleTo=function scaleTo(param,toValue){return Animated.timing(param,{toValue:toValue,duration:150,useNativeDriver:true}).start();};var setElevations=function setElevations(fromValue,toValue){setFromElevation(fromValue);setToElevation(toValue);};var onLayout=function onLayout(event){if(!wasInitialized){var width=event.nativeEvent.layout.width;setSliderWidth(width);translateXtoValue.setValue(width-knobSize/2);setToValueOffset(width-knobSize/2);setWasInitialized(true);}};var bubbleSizeMap={'small':{width:20,height:28},'medium':{width:40,height:56},'large':{width:50,height:70}};var bubbleSize=typeof styleSize==='number'?{width:styleSize,height:styleSize}:bubbleSizeMap[styleSize];var bubbleBottomValue=typeof styleSize==='number'?styleSize:bubbleSizeMap[styleSize].height;var bubbleBottom=valueLabelsPosition==='up'?0:-bubbleBottomValue;var renderValueLabels=function renderValueLabels(){return showValueLabels&&React.createElement(View,{style:{width:'100%',height:1,flexDirection:flexDirection}},React.createElement(Animated.View,{style:{position:'absolute',bottom:0,left:0,transform:[{translateX:translateXFromValue},{scale:fromValueScale}]}},showBubbles?React.createElement(View,{style:[svgOffset,_objectSpread(_objectSpread({},bubbleSize),{},{justifyContent:'center',alignItems:'center',position:'absolute',bottom:bubbleBottom,backgroundColor:'red'})]}):null,React.createElement(TextInput,{editable:false,style:{position:'absolute',width:50,textAlign:'center',left:-50/4,color:valueLabelsTextColor,bottom:valueLabelsPosition==='up'?18:-18},ref:fromValueTextRef})),React.createElement(Animated.View,{style:{position:'absolute',bottom:0,left:0,alignItems:'center',transform:[{translateX:translateXtoValue},{scale:toValueScale}]}},showBubbles?React.createElement(View,{style:[svgOffset,_objectSpread(_objectSpread({},bubbleSize),{},{justifyContent:'center',alignItems:'center',position:'absolute',bottom:bubbleBottom,backgroundColor:'red'})]}):null,React.createElement(TextInput,{editable:false,style:{position:'absolute',width:50,textAlign:'center',left:-50/4,color:valueLabelsTextColor,bottom:valueLabelsPosition==='up'?18:-18},ref:toValueTextRef})));};var paddingSizeMap={'small':21,'medium':14,'large':7};var styles=getStyle(knobSize);return React.createElement(Animated.View,{style:[styles.container,{opacity:opacity,padding:typeof styleSize==='number'?styleSize/2:paddingSizeMap[styleSize]}]},valueLabelsPosition==='up'?renderValueLabels():null,React.createElement(View,{style:{width:'100%',height:knobSize,marginVertical:4,position:'relative',flexDirection:flexDirection,alignItems:'center'}},React.createElement(View,{style:{position:'absolute',backgroundColor:inRangeBarColor,left:knobSize/4,marginLeft:-knobSize/4,right:knobSize/4,height:knobSize/3},onLayout:onLayout}),React.createElement(Animated.View,{style:{position:'absolute',left:knobSize/4,marginLeft:-knobSize/4,right:knobSize/4,height:knobSize/3,backgroundColor:outOfRangeBarColor,transform:[{translateX:sliderWidth/2},{scaleX:rightBarScaleX},{translateX:-sliderWidth/2}]}}),React.createElement(Animated.View,{style:{position:'absolute',left:-knobSize/4,width:knobSize/2,height:knobSize/3,borderRadius:knobSize/3,backgroundColor:outOfRangeBarColor}}),React.createElement(Animated.View,{style:{width:sliderWidth,height:knobSize/3,backgroundColor:outOfRangeBarColor,transform:[{translateX:-sliderWidth/2},{scaleX:leftBarScaleX},{translateX:sliderWidth/2}]}}),React.createElement(Animated.View,{style:{position:'absolute',left:sliderWidth-knobSize/4,width:knobSize/2,height:knobSize/3,borderRadius:knobSize/3,backgroundColor:outOfRangeBarColor}}),React.createElement(PanGestureHandler,{onGestureEvent:onGestureEventFromValue,onHandlerStateChange:onHandlerStateChangeFromValue},React.createElement(Animated.View,{style:[styles.knob1,{backgroundColor:fromKnobColor,elevation:fromElevation,transform:[{translateX:translateXFromValue}]}]},React.createElement(Text,{style:styles.knobInnerDivider},\"| | |\"))),React.createElement(PanGestureHandler,{onGestureEvent:onGestureEventToValue,onHandlerStateChange:onHandlerStateChangeToValue},React.createElement(Animated.View,{style:[styles.knob1,{backgroundColor:toKnobColor,elevation:toElevation,transform:[{translateX:translateXtoValue}]}]},React.createElement(Text,{style:styles.knobInnerDivider},\"| | |\")))),valueLabelsPosition==='down'?renderValueLabels():null,showRangeLabels?React.createElement(View,{style:{width:'100%',flexDirection:flexDirection,justifyContent:'space-between'}},React.createElement(Text,{style:{color:rangeLabelsTextColor,fontWeight:'bold',fontSize:fontSize}},min),React.createElement(Text,{style:{color:rangeLabelsTextColor,fontWeight:'bold',fontSize:fontSize}},max)):null);});var getStyle=function getStyle(knobSize){return StyleSheet.create({container:{},knob:{position:'absolute',elevation:4},knob1:{height:knobSize,width:2*knobSize,left:-(0.5*knobSize),borderRadius:0.5*knobSize,position:'absolute',flexDirection:'row',justifyContent:'center',alignItems:'center',elevation:4},knobInnerDivider:{marginHorizontal:3*knobSize/40,fontSize:18*knobSize/40,lineHeight:18*knobSize/40,color:'white'}});};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/packages/react-native-range-slider-expo/src/RangeSlider.tsx"],"names":["SMALL_SIZE","MEDIUM_SIZE","LARGE_SIZE","osRtl","I18nManager","colors","useBunnyKit","min","max","fromValueOnChange","toValueOnChange","step","styleSize","fromKnobColor","toKnobColor","inRangeBarColor","outOfRangeBarColor","valueLabelsTextColor","valueLabelsBackgroundColor","rangeLabelsTextColor","showRangeLabels","showValueLabels","initialFromValue","initialToValue","valueLabelsPosition","showBubbles","showValueLabelsOnlyWhenDrag","valueLabelsUnit","fromValueOnIndicated","toValueOnIndicated","props","wasInitialized","setWasInitialized","useState","knobSize","setKnobSize","fontSize","setFontSize","stepInPixels","setStepInPixels","flexDirection","setFlexDirection","svgOffset","setSvgOffset","left","fromValueOffset","setFromValueOffset","toValueOffset","setToValueOffset","sliderWidth","setSliderWidth","fromElevation","setFromElevation","toElevation","setToElevation","translateXFromValue","Animated","translateXtoValue","fromValueScale","toValueScale","rightBarScaleX","leftBarScaleX","toValueTextRef","React","fromValueTextRef","opacity","useEffect","right","stepSize","setStepSize","text","offset","setFromValueStatic","setValueText","setToValueStatic","toValue","duration","useNativeDriver","sizeMap","size","calculateFromValue","Math","newOffset","setFromValue","calculateToValue","setToValue","numberOfSteps","isFrom","numericValue","totalOffset","onGestureEventFromValue","event","onHandlerStateChangeFromValue","State","scaleTo","setElevations","onGestureEventToValue","onHandlerStateChangeToValue","onLayout","width","bubbleSizeMap","height","bubbleSize","bubbleBottomValue","bubbleBottom","renderValueLabels","position","bottom","transform","translateX","scale","justifyContent","alignItems","backgroundColor","textAlign","color","paddingSizeMap","styles","getStyle","padding","marginVertical","marginLeft","scaleX","borderRadius","elevation","knobInnerDivider","fontWeight","container","knob","knob1","marginHorizontal","lineHeight"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Animated, I18nManager, LayoutChangeEvent, StyleSheet, Text, TextInput, View} from 'react-native';\nimport {PanGestureHandler, PanGestureHandlerGestureEvent, State} from 'react-native-gesture-handler';\nimport {useBunnyKit} from '../../../src/hooks/bunny-kit';\n\nconst SMALL_SIZE = 24;\nconst MEDIUM_SIZE = 34;\nconst LARGE_SIZE = 44;\n\nconst osRtl = I18nManager.isRTL;\ntype Size = 'small' | 'medium' | 'large';\n\ninterface SliderProps {\n    min: number,\n    max: number,\n    fromValueOnChange: (value: number) => void,\n    toValueOnChange: (value: number) => void,\n    step?: number,\n    styleSize?: Size | number,\n    fromKnobColor?: string,\n    toKnobColor?: string,\n    inRangeBarColor?: string,\n    outOfRangeBarColor?: string,\n    valueLabelsTextColor?: string,\n    valueLabelsBackgroundColor?: string,\n    rangeLabelsTextColor?: string,\n    showRangeLabels?: boolean,\n    showValueLabels?: boolean,\n    initialFromValue?: number,\n    initialToValue?: number,\n    valueLabelsPosition?: 'up' | 'down',\n    showBubbles?: boolean,\n    showValueLabelsOnlyWhenDrag?: boolean,\n    valueLabelsUnit?: string,\n    fromValueOnIndicated?: (value: number) => void,\n    toValueOnIndicated?: (value: number) => void,\n}\n\nexport default (props: SliderProps) => {\n    const {colors} = useBunnyKit();\n    const {\n        min, max, fromValueOnChange, toValueOnChange,\n        step = 1,\n        styleSize = 'medium',\n        fromKnobColor = colors.primary,\n        toKnobColor = colors.primary,\n        inRangeBarColor = colors.primary,\n        outOfRangeBarColor = colors.divider,\n        valueLabelsTextColor = colors.text2,\n        valueLabelsBackgroundColor = '#3a4766',\n        rangeLabelsTextColor = 'rgb(60,60,60)',\n        showRangeLabels = true,\n        showValueLabels = true,\n        initialFromValue,\n        initialToValue,\n        valueLabelsPosition = 'down',\n        showBubbles = false,\n        showValueLabelsOnlyWhenDrag = false,\n        valueLabelsUnit = '',\n        fromValueOnIndicated,\n        toValueOnIndicated,\n    } = props;\n\n    // settings\n    const [wasInitialized, setWasInitialized] = useState(false);\n    const [knobSize, setKnobSize] = useState(0);\n    const [fontSize, setFontSize] = useState(15);\n    const [stepInPixels, setStepInPixels] = useState(0);\n\n    // rtl settings\n    const [flexDirection, setFlexDirection] = useState<'row' | 'row-reverse' | 'column' | 'column-reverse' | undefined>('row');\n    const [svgOffset, setSvgOffset] = useState<object>({left: (knobSize - 40) / 2});\n\n    const [fromValueOffset, setFromValueOffset] = useState(0);\n    const [toValueOffset, setToValueOffset] = useState(0);\n    const [sliderWidth, setSliderWidth] = useState(0);\n    const [fromElevation, setFromElevation] = useState(3);\n    const [toElevation, setToElevation] = useState(3);\n\n    // animation values\n    const [translateXFromValue] = useState(new Animated.Value(0));\n    const [translateXtoValue] = useState(new Animated.Value(0));\n    const [fromValueScale] = useState(new Animated.Value(showValueLabelsOnlyWhenDrag ? 0.01 : 1));\n    const [toValueScale] = useState(new Animated.Value(showValueLabelsOnlyWhenDrag ? 0.01 : 1));\n    const [rightBarScaleX] = useState(new Animated.Value(0.01));\n    const [leftBarScaleX] = useState(new Animated.Value(0.01));\n\n    // refs\n    const toValueTextRef = React.createRef<TextInput>();\n    const fromValueTextRef = React.createRef<TextInput>();\n    const opacity = React.useRef<Animated.Value>(new Animated.Value(0)).current;\n\n    // initializing settings\n    useEffect(() => {\n        setFlexDirection(osRtl ? 'row-reverse' : 'row');\n        setSvgOffset(osRtl ? {right: (knobSize - 40) / 2} : {left: (knobSize - 40) / 2});\n    }, [knobSize]);\n    useEffect(() => {\n        if (wasInitialized) {\n            const stepSize = setStepSize(max, min, step);\n            fromValueTextRef.current?.setNativeProps({text: min.toString() + valueLabelsUnit});\n            toValueTextRef.current?.setNativeProps({text: max.toString() + valueLabelsUnit});\n            if (typeof initialFromValue === 'number' && initialFromValue >= min && initialFromValue <= max) {\n                const offset = ((initialFromValue - min) / step) * stepSize - (knobSize / 2);\n                setFromValueStatic(offset, knobSize, stepSize);\n                setValueText(offset, true);\n            }\n            if (typeof initialToValue === 'number' && initialToValue >= min && initialToValue <= max && typeof initialFromValue === 'number' && initialToValue > initialFromValue) {\n                const offset = ((initialToValue - min) / step) * stepSize - (knobSize / 2);\n                setToValueStatic(offset, knobSize, stepSize);\n                setValueText(offset, false);\n            }\n            Animated.timing(opacity, {\n                toValue: 1,\n                duration: 64,\n                useNativeDriver: true\n            }).start();\n        }\n    }, [min, max, step, initialFromValue, initialToValue, wasInitialized]);\n    const sizeMap: { [key in Size]: number } = {\n        'small': SMALL_SIZE,\n        'medium': MEDIUM_SIZE,\n        'large': LARGE_SIZE\n    };\n    useEffect(() => {\n        const size = typeof styleSize === 'number' ? styleSize : sizeMap[styleSize];\n        setKnobSize(size);\n        translateXFromValue.setValue(-size / 4);\n    }, [styleSize]);\n\n    // initializing settings helpers\n    const calculateFromValue = (newOffset: number, knobSize: number, stepInPixels: number) => {\n        return Math.floor((newOffset + (knobSize / 2)) / stepInPixels) * stepInPixels - (knobSize / 2);\n    };\n    const setFromValueStatic = (newOffset: number, knobSize: number, stepInPixels: number) => {\n        newOffset = calculateFromValue(newOffset, knobSize, stepInPixels);\n        setFromValue(newOffset);\n        setFromValueOffset(newOffset);\n        fromValueOnChange(Math.floor(((newOffset + (knobSize / 2)) * (max - min) / sliderWidth) / step) * step + min);\n    };\n    const setFromValue = (newOffset: number) => {\n        translateXFromValue.setValue(newOffset);\n        leftBarScaleX.setValue((newOffset + (knobSize / 2)) / sliderWidth + 0.01);\n    };\n    const calculateToValue = (newOffset: number, knobSize: number, stepInPixels: number) => {\n        return Math.ceil((newOffset + (knobSize / 2)) / stepInPixels) * stepInPixels - (knobSize / 2);\n    };\n    const setToValueStatic = (newOffset: number, knobSize: number, stepInPixels: number) => {\n        newOffset = calculateToValue(newOffset, knobSize, stepInPixels);\n        setToValue(newOffset);\n        setToValueOffset(newOffset);\n        toValueOnChange(Math.ceil(((newOffset + (knobSize / 2)) * (max - min) / sliderWidth) / step) * step + min);\n    };\n    const setToValue = (newOffset: number) => {\n        translateXtoValue.setValue(newOffset);\n        rightBarScaleX.setValue(1.01 - ((newOffset + (knobSize / 2)) / sliderWidth));\n    };\n    const setStepSize = (max: number, min: number, step: number) => {\n        const numberOfSteps = ((max - min) / step);\n        const stepSize = sliderWidth / numberOfSteps;\n        setStepInPixels(stepSize);\n        return stepSize;\n    };\n    const setValueText = (totalOffset: number, isFrom = true) => {\n        if (isFrom && fromValueTextRef != null) {\n            const numericValue: number = Math.floor(((totalOffset + (knobSize / 2)) * (max - min) / sliderWidth) / step) * step + min;\n            fromValueOnIndicated?.(numericValue);\n            fromValueTextRef.current?.setNativeProps({text: numericValue.toString() + valueLabelsUnit});\n        } else if (!isFrom && toValueTextRef != null) {\n            const numericValue: number = Math.ceil(((totalOffset + (knobSize / 2)) * (max - min) / sliderWidth) / step) * step + min;\n            toValueOnIndicated?.(numericValue);\n            toValueTextRef.current?.setNativeProps({text: numericValue.toString() + valueLabelsUnit});\n        }\n    };\n\n\n    // from value gesture events ------------------------------------------------------------------------\n    const onGestureEventFromValue = (event: PanGestureHandlerGestureEvent) => {\n        let totalOffset = event.nativeEvent.translationX + fromValueOffset;\n        if (totalOffset >= -knobSize / 2 && totalOffset < toValueOffset) {\n            translateXFromValue.setValue(totalOffset);\n            setValueText(totalOffset, true);\n            leftBarScaleX.setValue((totalOffset + (knobSize / 2)) / sliderWidth + 0.01);\n        }\n    };\n    const onHandlerStateChangeFromValue = (event: PanGestureHandlerGestureEvent) => {\n        if (event.nativeEvent.state === State.BEGAN) {\n            if (showValueLabelsOnlyWhenDrag) scaleTo(fromValueScale, 1);\n            setElevations(6, 5);\n        }\n        if (event.nativeEvent.state === State.END) {\n            let newOffset = event.nativeEvent.translationX + fromValueOffset;\n            newOffset = calculateFromValue(newOffset, knobSize, stepInPixels);\n            if (newOffset < -knobSize / 2) {\n                newOffset = -knobSize / 2;\n            } else if (newOffset >= toValueOffset) {\n                newOffset = toValueOffset - stepInPixels;\n            }\n            setFromValueStatic(newOffset, knobSize, stepInPixels);\n            if (showValueLabelsOnlyWhenDrag) scaleTo(fromValueScale, 0.01);\n        }\n    };\n    // ------------------------------------------------------------------------------------------------\n\n    // to value gesture events ------------------------------------------------------------------------\n    const onGestureEventToValue = (event: PanGestureHandlerGestureEvent) => {\n        const totalOffset = event.nativeEvent.translationX + toValueOffset;\n        if (totalOffset <= sliderWidth - knobSize / 2 && totalOffset > fromValueOffset) {\n            translateXtoValue.setValue(totalOffset);\n            setValueText(totalOffset, false);\n            rightBarScaleX.setValue(1.01 - ((totalOffset + (knobSize / 2)) / sliderWidth));\n        }\n    };\n    const onHandlerStateChangeToValue = (event: PanGestureHandlerGestureEvent) => {\n        if (event.nativeEvent.state === State.BEGAN) {\n            if (showValueLabelsOnlyWhenDrag) scaleTo(toValueScale, 1);\n            setElevations(5, 6);\n        }\n        if (event.nativeEvent.state === State.END) {\n            let newOffset = event.nativeEvent.translationX + toValueOffset;\n            newOffset = calculateToValue(newOffset, knobSize, stepInPixels);\n            if (newOffset > sliderWidth - knobSize / 2) {\n                newOffset = sliderWidth - knobSize / 2;\n            } else if (newOffset <= fromValueOffset) {\n                newOffset = fromValueOffset + stepInPixels;\n            }\n            setToValueOffset(newOffset);\n            translateXtoValue.setValue(newOffset);\n            rightBarScaleX.setValue(1.01 - ((newOffset + (knobSize / 2)) / sliderWidth));\n            if (showValueLabelsOnlyWhenDrag) scaleTo(toValueScale, 0.01);\n            toValueOnChange(Math.ceil(((newOffset + (knobSize / 2)) * (max - min) / sliderWidth) / step) * step + min);\n        }\n    };\n    // ------------------------------------------------------------------------------------------------\n\n    // gesture events help functions ------------------------------------------------------------------\n    const scaleTo = (param: Animated.Value, toValue: number) => Animated.timing(param,\n        {\n            toValue,\n            duration: 150,\n            useNativeDriver: true\n        }\n    ).start();\n\n    const setElevations = (fromValue: number, toValue: number) => {\n        setFromElevation(fromValue);\n        setToElevation(toValue);\n    };\n    // ------------------------------------------------------------------------------------------------\n\n    // setting bar width ------------------------------------------------------------------------------\n    const onLayout = (event: LayoutChangeEvent) => {\n        if (!wasInitialized) {\n            const {width} = event.nativeEvent.layout;\n            setSliderWidth(width);\n            translateXtoValue.setValue(width - knobSize / 2);\n            setToValueOffset(width - knobSize / 2);\n            setWasInitialized(true);\n        }\n    };\n    // ------------------------------------------------------------------------------------------------\n    const bubbleSizeMap: { [key in Size]: { width: number, height: number } } = {\n        'small': {width: 20, height: 28},\n        'medium': {width: 40, height: 56},\n        'large': {width: 50, height: 70},\n    };\n    // const bubbleSizeMap: { [key in Size]: { width: string, height: string } } = {\n    //     'small': {width: `${100*20/40}%`, height: `${28*56/56}%`},\n    //     'medium': {width: `${100*40/40}%`, height: `${100*56/56}%`},\n    //     'large': {width: `${100*50/40}%`, height: `${100*70/56}%`},\n    // }\n    const bubbleSize = typeof styleSize === 'number' ? {width: styleSize, height: styleSize} : bubbleSizeMap[styleSize];\n    const bubbleBottomValue = typeof styleSize === 'number' ? styleSize : bubbleSizeMap[styleSize].height;\n    const bubbleBottom = valueLabelsPosition === 'up' ? 0 : -bubbleBottomValue;\n    const renderValueLabels = () => {\n        return (showValueLabels &&\n            <View style={{width: '100%', height: 1, flexDirection}}>\n                <Animated.View\n                    style={{\n                        position: 'absolute',\n                        bottom: 0,\n                        left: 0,\n                        transform: [{translateX: translateXFromValue}, {scale: fromValueScale}]\n                    }}\n                >\n                    {\n                        showBubbles\n                            ?\n                            // <Svg {...bubbleSize} style={[svgOffset, {justifyContent: 'center', alignItems: 'center',position:'absolute',bottom:bubbleBottom}]}>\n                            //     <Path\n                            //         d=\"M20.368027196163986,55.24077513402203 C20.368027196163986,55.00364778429386 37.12897994729114,42.11537830086061 39.19501224411266,22.754628132990383 C41.26104454093417,3.393877965120147 24.647119286738516,0.571820003300814 20.368027196163986,0.7019902620266703 C16.088935105589453,0.8321519518460209 -0.40167016290734386,3.5393865664909434 0.7742997013327574,21.806127302984205 C1.950269565572857,40.07286803947746 20.368027196163986,55.4779024837502 20.368027196163986,55.24077513402203 z\"\n                            //         strokeWidth={1}\n                            //         fill={valueLabelsBackgroundColor}\n                            //         stroke={valueLabelsBackgroundColor}\n                            //     />\n                            // </Svg>\n                            <View style={[svgOffset, {\n                                ...bubbleSize,\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                position: 'absolute',\n                                bottom: bubbleBottom,\n                                backgroundColor: 'red'\n                            }]}/>\n                            : null\n                    }\n                    <TextInput editable={false} style={{\n                        position: 'absolute',\n                        width: 50,\n                        textAlign: 'center',\n                        left: -50 / 4,\n                        color: valueLabelsTextColor,\n                        bottom: valueLabelsPosition === 'up' ? 18 : -18,\n                    }} ref={fromValueTextRef}/>\n                </Animated.View>\n                <Animated.View\n                    style={{\n                        position: 'absolute',\n                        bottom: 0,\n                        left: 0,\n                        alignItems: 'center',\n                        transform: [{translateX: translateXtoValue}, {scale: toValueScale}]\n                    }}\n                >\n                    {\n                        showBubbles\n                            ?\n                            // <Svg  {...bubbleSize} style={[svgOffset, {justifyContent: 'center', alignItems: 'center',position:'absolute',bottom:bubbleBottom}]}>\n                            //     <Path\n                            //         d=\"M20.368027196163986,55.24077513402203 C20.368027196163986,55.00364778429386 37.12897994729114,42.11537830086061 39.19501224411266,22.754628132990383 C41.26104454093417,3.393877965120147 24.647119286738516,0.571820003300814 20.368027196163986,0.7019902620266703 C16.088935105589453,0.8321519518460209 -0.40167016290734386,3.5393865664909434 0.7742997013327574,21.806127302984205 C1.950269565572857,40.07286803947746 20.368027196163986,55.4779024837502 20.368027196163986,55.24077513402203 z\"\n                            //         strokeWidth={1}\n                            //         fill={valueLabelsBackgroundColor}\n                            //         stroke={valueLabelsBackgroundColor}\n                            //     />\n                            // </Svg>\n                            <View style={[svgOffset, {\n                                ...bubbleSize,\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                position: 'absolute',\n                                bottom: bubbleBottom,\n                                backgroundColor: 'red'\n                            }]}/>\n                            : null\n                    }\n                    <TextInput editable={false} style={{\n                        position: 'absolute',\n                        width: 50,\n                        textAlign: 'center',\n                        left: -50 / 4,\n                        color: valueLabelsTextColor,\n                        bottom: valueLabelsPosition === 'up' ? 18 : -18,\n                    }} ref={toValueTextRef}/>\n                </Animated.View>\n            </View>\n        );\n\n    };\n    const paddingSizeMap: { [key in Size]: number } = {\n        'small': 21,\n        'medium': 14,\n        'large': 7\n    };\n    const styles = getStyle(knobSize);\n    return (\n        <Animated.View style={[styles.container, {\n            opacity,\n            padding: typeof styleSize === 'number' ? styleSize / 2 : paddingSizeMap[styleSize]\n        }]}>\n            {\n                valueLabelsPosition === 'up'\n                    ? renderValueLabels()\n                    : null\n            }\n            <View style={{\n                width: '100%',\n                height: knobSize,\n                marginVertical: 4,\n                position: 'relative',\n                flexDirection,\n                alignItems: 'center'\n            }}>\n                <View style={{\n                    position: 'absolute',\n                    backgroundColor: inRangeBarColor,\n                    left: knobSize / 4,\n                    marginLeft: -knobSize / 4,\n                    right: knobSize / 4,\n                    height: knobSize / 3\n                }} onLayout={onLayout}/>\n                <Animated.View style={{\n                    position: 'absolute',\n                    left: knobSize / 4,\n                    marginLeft: -knobSize / 4,\n                    right: knobSize / 4,\n                    height: knobSize / 3,\n                    backgroundColor: outOfRangeBarColor,\n                    transform: [{translateX: sliderWidth / 2}, {scaleX: rightBarScaleX}, {translateX: -sliderWidth / 2}]\n                }}/>\n                <Animated.View style={{\n                    position: 'absolute',\n                    left: -knobSize / 4,\n                    width: knobSize / 2,\n                    height: knobSize / 3,\n                    borderRadius: knobSize / 3,\n                    backgroundColor: outOfRangeBarColor\n                }}/>\n                <Animated.View style={{\n                    width: sliderWidth,\n                    height: knobSize / 3,\n                    backgroundColor: outOfRangeBarColor,\n                    transform: [{translateX: -sliderWidth / 2}, {scaleX: leftBarScaleX}, {translateX: sliderWidth / 2}]\n                }}/>\n                <Animated.View style={{\n                    position: 'absolute',\n                    left: sliderWidth - knobSize / 4,\n                    width: knobSize / 2,\n                    height: knobSize / 3,\n                    borderRadius: knobSize / 3,\n                    backgroundColor: outOfRangeBarColor\n                }}/>\n                <PanGestureHandler onGestureEvent={onGestureEventFromValue}\n                                   onHandlerStateChange={onHandlerStateChangeFromValue}>\n                    {/*<Animated.View style={[styles.knob, {*/}\n                    {/*    height: knobSize,*/}\n                    {/*    width: knobSize,*/}\n                    {/*    borderRadius: knobSize,*/}\n                    {/*    backgroundColor: fromKnobColor,*/}\n                    {/*    elevation: fromElevation,*/}\n                    {/*    transform: [{translateX: translateXFromValue}]*/}\n                    {/*}]}/>*/}\n                    <Animated.View style={[styles.knob1, {\n                        backgroundColor: fromKnobColor,\n                        elevation: fromElevation,\n                        transform: [{translateX: translateXFromValue}]\n                    }]}>\n                        <Text style={styles.knobInnerDivider}>| | |</Text>\n                    </Animated.View>\n                </PanGestureHandler>\n                <PanGestureHandler onGestureEvent={onGestureEventToValue}\n                                   onHandlerStateChange={onHandlerStateChangeToValue}>\n                    {/*<Animated.View style={[styles.knob, {*/}\n                    {/*    height: knobSize,*/}\n                    {/*    width: knobSize,*/}\n                    {/*    borderRadius: knobSize,*/}\n                    {/*    backgroundColor: toKnobColor,*/}\n                    {/*    elevation: toElevation,*/}\n                    {/*    transform: [{translateX: translateXtoValue}]*/}\n                    {/*}]}/>*/}\n                    <Animated.View style={[styles.knob1, {\n                        backgroundColor: toKnobColor,\n                        elevation: toElevation,\n                        transform: [{translateX: translateXtoValue}]\n                    }]}>\n                        <Text style={styles.knobInnerDivider}>| | |</Text>\n                    </Animated.View>\n                </PanGestureHandler>\n            </View>\n            {\n                valueLabelsPosition === 'down'\n                    ? renderValueLabels()\n                    : null\n            }\n            {\n                showRangeLabels\n                    ? <View style={{width: '100%', flexDirection, justifyContent: 'space-between'}}>\n                        <Text style={{color: rangeLabelsTextColor, fontWeight: 'bold', fontSize}}>{min}</Text>\n                        <Text style={{color: rangeLabelsTextColor, fontWeight: 'bold', fontSize}}>{max}</Text>\n                    </View>\n                    : null\n            }\n        </Animated.View>\n    );\n}\nconst getStyle = (knobSize: number) => {\n    return StyleSheet.create({\n        container: {\n            // height: 100,\n            // width: '100%'\n        },\n        knob: {\n            position: 'absolute',\n            elevation: 4\n        },\n        knob1: {\n            height: knobSize,\n            width: 2 * knobSize,\n            left: -(0.5 * knobSize),\n            borderRadius: 0.5 * knobSize,\n            position: 'absolute',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n            elevation: 4\n        },\n        knobInnerDivider: {\n            marginHorizontal: 3 * knobSize / 40,\n            fontSize: 18 * knobSize / 40,\n            lineHeight: 18 * knobSize / 40,\n            color: 'white'\n        }\n    });\n};\n"]},"metadata":{},"sourceType":"module"}