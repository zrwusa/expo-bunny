{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _jsxFileName=\"/Users/revone/projects/expo-react-bunny/packages/react-native-lightbox/LightBox.tsx\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React,{Children,cloneElement,Component,createRef}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import View from\"react-native-web/dist/exports/View\";import{LightBoxOverlay}from\"./LightBoxOverlay\";var LightBox=function(_Component){_inherits(LightBox,_Component);var _super=_createSuper(LightBox);function LightBox(){var _this;_classCallCheck(this,LightBox);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this._root=createRef();_this.state={isOpen:false,origin:{x:0,y:0,width:0,height:0},layoutOpacity:new Animated.Value(1)};_this.getContent=function(){if(_this.props.renderContent){return _this.props.renderContent();}else if(_this.props.activeProps){return cloneElement(Children.only(_this.props.children),_this.props.activeProps);}return _this.props.children;};_this.getOverlayProps=function(){return{isOpen:_this.state.isOpen,origin:_this.state.origin,renderHeader:_this.props.renderHeader,swipeToDismiss:_this.props.swipeToDismiss,springConfig:_this.props.springConfig,backgroundColor:_this.props.backgroundColor,children:_this.getContent(),didOpen:_this.props.didOpen,willClose:_this.props.willClose,onClose:_this.onClose};};_this.open=function(){var _this$_root$current;(_this$_root$current=_this._root.current)==null?void 0:_this$_root$current.measure(function(ox,oy,width,height,px,py){_this.props.onOpen&&_this.props.onOpen();_this.setState({isOpen:!!_this.props.navigator,isAnimating:true,origin:{width:width,height:height,x:px,y:py}},function(){_this.props.didOpen==null?void 0:_this.props.didOpen();if(_this.props.navigator){var route={component:LightBoxOverlay,passProps:_this.getOverlayProps()};var routes=_this.props.navigator.getCurrentRoutes();routes.push(route);_this.props.navigator.immediatelyResetRouteStack(routes);}else{_this.setState({isOpen:true});}setTimeout(function(){_this._root&&_this.state.layoutOpacity.setValue(0);});});});};_this.close=function(){throw new Error('LightBox.close method is deprecated. Use renderHeader(close) prop instead.');};_this.onClose=function(){_this.state.layoutOpacity.setValue(1);_this.setState({isOpen:false},_this.props.onClose);if(_this.props.navigator){var routes=_this.props.navigator.getCurrentRoutes();routes.pop();_this.props.navigator.immediatelyResetRouteStack(routes);}};return _this;}_createClass(LightBox,[{key:\"render\",value:function render(){return React.createElement(View,{ref:this._root,style:this.props.style,onLayout:function onLayout(){},__self:this,__source:{fileName:_jsxFileName,lineNumber:135,columnNumber:13}},React.createElement(Animated.View,{style:{opacity:this.state.layoutOpacity},__self:this,__source:{fileName:_jsxFileName,lineNumber:141,columnNumber:17}},React.createElement(TouchableHighlight,{underlayColor:this.props.underlayColor,onPress:this.open,onLongPress:this.props.onLongPress,__self:this,__source:{fileName:_jsxFileName,lineNumber:142,columnNumber:21}},this.props.children)),this.props.navigator?false:React.createElement(LightBoxOverlay,_extends({},this.getOverlayProps(),{__self:this,__source:{fileName:_jsxFileName,lineNumber:150,columnNumber:49}})));}}]);return LightBox;}(Component);LightBox.defaultProps={swipeToDismiss:true,onOpen:function onOpen(){},didOpen:function didOpen(){},willClose:function willClose(){},onClose:function onClose(){},onLongPress:function onLongPress(){}};export{LightBox as default};","map":{"version":3,"sources":["/Users/revone/projects/expo-react-bunny/packages/react-native-lightbox/LightBox.tsx"],"names":["LightBox","Component","defaultProps","swipeToDismiss","onOpen","didOpen","willClose","onClose","onLongPress","_root","createRef","state","isOpen","origin","x","y","width","height","layoutOpacity","Animated","getContent","cloneElement","Children","getOverlayProps","renderHeader","springConfig","backgroundColor","children","open","isAnimating","py","route","component","passProps","routes","setTimeout","close","opacity"],"mappings":"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","sourcesContent":["import React, {Children, cloneElement, Component, createRef} from 'react';\nimport {Animated, StyleProp, TouchableHighlight, TouchableWithoutFeedbackProps, View, ViewStyle} from 'react-native';\nimport {LightBoxOverlay} from './LightBoxOverlay';\n\n\nexport interface LightBoxProps {\n    activeProps: object,\n    renderHeader?: Function,\n    renderContent?: Function,\n    underlayColor?: string,\n    backgroundColor?: string,\n    didOpen?: () => void,\n    onOpen?: () => void,\n    willClose?: () => void,\n    onClose?: () => void,\n    springConfig?: {\n        tension: number,\n        friction: number,\n    },\n    swipeToDismiss?: boolean,\n    navigator?: any,\n    style?: StyleProp<ViewStyle>,\n    onLongPress?: TouchableWithoutFeedbackProps['onLongPress']\n}\n\nexport default class LightBox extends Component<LightBoxProps> {\n\n    static defaultProps = {\n        swipeToDismiss: true,\n        onOpen: () => {\n        },\n        didOpen: () => {\n        },\n        willClose: () => {\n        },\n        onClose: () => {\n        },\n        onLongPress: () => {\n        },\n    };\n\n    private _root = createRef<View>();\n\n    state = {\n        isOpen: false,\n        origin: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        },\n        layoutOpacity: new Animated.Value(1),\n    };\n\n    getContent = () => {\n        if (this.props.renderContent) {\n            return this.props.renderContent();\n        } else if (this.props.activeProps) {\n            return cloneElement(\n                // @ts-ignore\n                Children.only(this.props.children),\n                this.props.activeProps\n            );\n        }\n        return this.props.children;\n    };\n\n    getOverlayProps = () => ({\n        isOpen: this.state.isOpen,\n        origin: this.state.origin,\n        renderHeader: this.props.renderHeader,\n        swipeToDismiss: this.props.swipeToDismiss,\n        springConfig: this.props.springConfig,\n        backgroundColor: this.props.backgroundColor,\n        children: this.getContent(),\n        didOpen: this.props.didOpen,\n        willClose: this.props.willClose,\n        onClose: this.onClose,\n    });\n\n    open = () => {\n        this._root.current?.measure((ox, oy, width, height, px, py) => {\n            this.props.onOpen && this.props.onOpen();\n\n            this.setState({\n                isOpen: (!!this.props.navigator),\n                isAnimating: true,\n                origin: {\n                    width,\n                    height,\n                    x: px,\n                    y: py,\n                },\n            }, () => {\n                this.props.didOpen?.();\n                if (this.props.navigator) {\n                    const route = {\n                        component: LightBoxOverlay,\n                        passProps: this.getOverlayProps(),\n                    };\n                    const routes = this.props.navigator.getCurrentRoutes();\n                    routes.push(route);\n                    this.props.navigator.immediatelyResetRouteStack(routes);\n                } else {\n                    this.setState({\n                        isOpen: true,\n                    });\n                }\n                setTimeout(() => {\n                    this._root && this.state.layoutOpacity.setValue(0);\n                });\n            });\n        });\n    };\n\n    close = () => {\n        throw new Error('LightBox.close method is deprecated. Use renderHeader(close) prop instead.');\n    };\n\n    onClose = () => {\n        this.state.layoutOpacity.setValue(1);\n        this.setState({\n            isOpen: false,\n        }, this.props.onClose);\n        if (this.props.navigator) {\n            const routes = this.props.navigator.getCurrentRoutes();\n            routes.pop();\n            this.props.navigator.immediatelyResetRouteStack(routes);\n        }\n    };\n\n    render() {\n        // measure will not return anything useful if we dont attach a onLayout handler on android\n        return (\n            <View\n                ref={this._root}\n                style={this.props.style}\n                onLayout={() => {\n                }}\n            >\n                <Animated.View style={{opacity: this.state.layoutOpacity}}>\n                    <TouchableHighlight\n                        underlayColor={this.props.underlayColor}\n                        onPress={this.open}\n                        onLongPress={this.props.onLongPress}\n                    >\n                        {this.props.children}\n                    </TouchableHighlight>\n                </Animated.View>\n                {this.props.navigator ? false : <LightBoxOverlay {...this.getOverlayProps()} />}\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}